{"version":3,"file":"static/chunks/pages/_app-e80974514508b350.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","webpack://_N_E/./node_modules/stylis/src/Utility.js","webpack://_N_E/./node_modules/stylis/src/Tokenizer.js","webpack://_N_E/./node_modules/stylis/src/Enum.js","webpack://_N_E/./node_modules/stylis/src/Serializer.js","webpack://_N_E/./node_modules/stylis/src/Middleware.js","webpack://_N_E/./node_modules/stylis/src/Parser.js","webpack://_N_E/./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","webpack://_N_E/./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","webpack://_N_E/./node_modules/@emotion/react/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/./node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js","webpack://_N_E/./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js","webpack://_N_E/./node_modules/@emotion/react/dist/emotion-react.browser.esm.js","webpack://_N_E/./node_modules/@emotion/hash/dist/emotion-hash.esm.js","webpack://_N_E/./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","webpack://_N_E/./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","webpack://_N_E/./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","webpack://_N_E/./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://_N_E/./node_modules/@mui/material/colors/red.js","webpack://_N_E/./node_modules/@mui/material/styles/createMixins.js","webpack://_N_E/./node_modules/@mui/material/colors/common.js","webpack://_N_E/./node_modules/@mui/material/colors/grey.js","webpack://_N_E/./node_modules/@mui/material/colors/purple.js","webpack://_N_E/./node_modules/@mui/material/colors/orange.js","webpack://_N_E/./node_modules/@mui/material/colors/blue.js","webpack://_N_E/./node_modules/@mui/material/colors/lightBlue.js","webpack://_N_E/./node_modules/@mui/material/colors/green.js","webpack://_N_E/./node_modules/@mui/material/styles/createPalette.js","webpack://_N_E/./node_modules/@mui/material/styles/createTypography.js","webpack://_N_E/./node_modules/@mui/material/styles/shadows.js","webpack://_N_E/./node_modules/@mui/material/styles/createTransitions.js","webpack://_N_E/./node_modules/@mui/material/styles/zIndex.js","webpack://_N_E/./node_modules/@mui/material/styles/createTheme.js","webpack://_N_E/./node_modules/@mui/material/styles/identifier.js","webpack://_N_E/./node_modules/@mui/system/esm/breakpoints.js","webpack://_N_E/./node_modules/@mui/system/esm/colorManipulator.js","webpack://_N_E/./node_modules/@mui/system/esm/createTheme/createBreakpoints.js","webpack://_N_E/./node_modules/@mui/system/esm/createTheme/shape.js","webpack://_N_E/./node_modules/@mui/system/esm/createTheme/createSpacing.js","webpack://_N_E/./node_modules/@mui/system/esm/createTheme/createTheme.js","webpack://_N_E/./node_modules/@mui/system/esm/merge.js","webpack://_N_E/./node_modules/@mui/system/esm/memoize.js","webpack://_N_E/./node_modules/@mui/system/esm/spacing.js","webpack://_N_E/./node_modules/@mui/system/esm/style.js","webpack://_N_E/./node_modules/@mui/system/esm/compose.js","webpack://_N_E/./node_modules/@mui/system/esm/borders.js","webpack://_N_E/./node_modules/@mui/system/esm/cssGrid.js","webpack://_N_E/./node_modules/@mui/system/esm/palette.js","webpack://_N_E/./node_modules/@mui/system/esm/sizing.js","webpack://_N_E/./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js","webpack://_N_E/./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js","webpack://_N_E/./node_modules/@mui/system/esm/useThemeWithoutDefault.js","webpack://_N_E/./node_modules/@mui/utils/esm/capitalize.js","webpack://_N_E/./node_modules/@mui/utils/esm/deepmerge.js","webpack://_N_E/./node_modules/@mui/utils/esm/formatMuiErrorMessage.js","webpack://_N_E/./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://_N_E/./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://_N_E/./node_modules/@sentry/hub/esm/exports.js","webpack://_N_E/./node_modules/@sentry/hub/esm/hub.js","webpack://_N_E/./node_modules/@sentry/hub/esm/scope.js","webpack://_N_E/./node_modules/@sentry/hub/esm/session.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/errors.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/hubextensions.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/idletransaction.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/span.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/transaction.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/utils.js","webpack://_N_E/./node_modules/@sentry/utils/esm/baggage.js","webpack://_N_E/./node_modules/@sentry/utils/esm/browser.js","webpack://_N_E/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","webpack://_N_E/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","webpack://_N_E/./node_modules/@sentry/utils/esm/global.js","webpack://_N_E/./node_modules/@sentry/utils/esm/instrument.js","webpack://_N_E/./node_modules/@sentry/utils/esm/is.js","webpack://_N_E/./node_modules/@sentry/utils/esm/logger.js","webpack://_N_E/./node_modules/@sentry/utils/esm/misc.js","webpack://_N_E/./node_modules/@sentry/utils/esm/env.js","webpack://_N_E/./node_modules/@sentry/utils/esm/node.js","webpack://_N_E/./node_modules/@sentry/utils/esm/object.js","webpack://_N_E/./node_modules/@sentry/utils/esm/severity.js","webpack://_N_E/./node_modules/@sentry/utils/esm/stacktrace.js","webpack://_N_E/./node_modules/@sentry/utils/esm/string.js","webpack://_N_E/./node_modules/@sentry/utils/esm/supports.js","webpack://_N_E/./node_modules/@sentry/utils/esm/syncpromise.js","webpack://_N_E/./node_modules/@sentry/utils/esm/time.js","webpack://_N_E/./node_modules/@sentry/webpack-plugin/src/sentry-webpack.module.js","webpack://_N_E/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://_N_E/./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","webpack://_N_E/./node_modules/hoist-non-react-statics/node_modules/react-is/index.js","webpack://_N_E/./node_modules/next/dist/build/polyfills/process.js","webpack://_N_E/?adc8","webpack://_N_E/./theme/emotionTheme.ts","webpack://_N_E/./theme/muiTheme.ts","webpack://_N_E/./stores/theme.ts","webpack://_N_E/./hooks/useCustomTheme.ts","webpack://_N_E/./node_modules/@mui/private-theming/useTheme/ThemeContext.js","webpack://_N_E/./node_modules/@mui/private-theming/useTheme/useTheme.js","webpack://_N_E/./node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/./node_modules/@mui/private-theming/ThemeProvider/nested.js","webpack://_N_E/./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","webpack://_N_E/./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","webpack://_N_E/./node_modules/@mui/material/styles/ThemeProvider.js","webpack://_N_E/./providers/ThemeProvider.tsx","webpack://_N_E/./pages/_app.tsx","webpack://_N_E/./node_modules/@sentry/core/esm/version.js","webpack://_N_E/./node_modules/@sentry/core/esm/integration.js","webpack://_N_E/./node_modules/@sentry/core/esm/sdk.js","webpack://_N_E/./node_modules/@sentry/utils/esm/error.js","webpack://_N_E/./node_modules/@sentry/utils/esm/dsn.js","webpack://_N_E/./node_modules/@sentry/utils/esm/envelope.js","webpack://_N_E/./node_modules/@sentry/utils/esm/memo.js","webpack://_N_E/./node_modules/@sentry/utils/esm/normalize.js","webpack://_N_E/./node_modules/@sentry/core/esm/api.js","webpack://_N_E/./node_modules/@sentry/core/esm/envelope.js","webpack://_N_E/./node_modules/@sentry/core/esm/baseclient.js","webpack://_N_E/./node_modules/@sentry/utils/esm/clientreport.js","webpack://_N_E/./node_modules/@sentry/browser/esm/eventbuilder.js","webpack://_N_E/./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack://_N_E/./node_modules/@sentry/browser/esm/transports/utils.js","webpack://_N_E/./node_modules/@sentry/browser/esm/client.js","webpack://_N_E/./node_modules/@sentry/browser/esm/stack-parsers.js","webpack://_N_E/./node_modules/@sentry/browser/esm/helpers.js","webpack://_N_E/./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack://_N_E/./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack://_N_E/./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack://_N_E/./node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack://_N_E/./node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack://_N_E/./node_modules/@sentry/utils/esm/promisebuffer.js","webpack://_N_E/./node_modules/@sentry/utils/esm/ratelimit.js","webpack://_N_E/./node_modules/@sentry/core/esm/transports/base.js","webpack://_N_E/./node_modules/@sentry/browser/esm/transports/fetch.js","webpack://_N_E/./node_modules/@sentry/browser/esm/transports/xhr.js","webpack://_N_E/./node_modules/@sentry/browser/esm/sdk.js","webpack://_N_E/./node_modules/@sentry/react/esm/sdk.js","webpack://_N_E/./node_modules/@sentry/utils/esm/tracing.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/metrics/utils.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/metrics/index.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/request.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/router.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack://_N_E/./node_modules/@sentry/tracing/esm/index.js","webpack://_N_E/./node_modules/@sentry/nextjs/esm/performance/client.js","webpack://_N_E/./node_modules/@sentry/nextjs/esm/utils/metadata.js","webpack://_N_E/./node_modules/@sentry/nextjs/esm/utils/userIntegrations.js","webpack://_N_E/./node_modules/@sentry/nextjs/esm/index.client.js","webpack://_N_E/./sentry.client.config.js","webpack://_N_E/./styles/globals.css","webpack://_N_E/./node_modules/next/dist/compiled/process/browser.js","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/next/router.js","webpack://_N_E/./node_modules/react-query/es/core/index.js","webpack://_N_E/./node_modules/react-query/es/core/logger.js","webpack://_N_E/./node_modules/react-query/es/core/notifyManager.js","webpack://_N_E/./node_modules/react-query/es/core/subscribable.js","webpack://_N_E/./node_modules/react-query/es/core/focusManager.js","webpack://_N_E/./node_modules/react-query/es/core/onlineManager.js","webpack://_N_E/./node_modules/react-query/es/core/retryer.js","webpack://_N_E/./node_modules/react-query/es/core/query.js","webpack://_N_E/./node_modules/react-query/es/core/queryCache.js","webpack://_N_E/./node_modules/react-query/es/core/mutation.js","webpack://_N_E/./node_modules/react-query/es/core/mutationCache.js","webpack://_N_E/./node_modules/react-query/es/core/infiniteQueryBehavior.js","webpack://_N_E/./node_modules/react-query/es/core/queryClient.js","webpack://_N_E/./node_modules/react-query/es/core/types.js","webpack://_N_E/./node_modules/react-query/es/core/utils.js","webpack://_N_E/./node_modules/react-query/es/index.js","webpack://_N_E/./node_modules/react-query/es/react/reactBatchedUpdates.js","webpack://_N_E/./node_modules/react-query/es/react/setBatchUpdatesFn.js","webpack://_N_E/./node_modules/react-query/es/react/logger.js","webpack://_N_E/./node_modules/react-query/es/react/setLogger.js","webpack://_N_E/./node_modules/react-query/es/react/QueryClientProvider.js","webpack://_N_E/./node_modules/react-query/es/core/hydration.js","webpack://_N_E/./node_modules/react-query/es/react/Hydrate.js","webpack://_N_E/./node_modules/react-query/es/react/index.js","webpack://_N_E/./node_modules/recoil/es/recoil.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://_N_E/./node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/./node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://_N_E/./node_modules/@mui/system/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/./node_modules/@mui/system/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://_N_E/./node_modules/@mui/utils/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\n","import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, COMMENT, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? element.parent.children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport { createCache as default };\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","var weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\nexport { weakMemoize as default };\n","import * as React from 'react';\nimport { useContext, forwardRef } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar isBrowser = \"object\" !== 'undefined';\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nif (!isBrowser) {\n  withEmotionCache = function withEmotionCache(func) {\n    return function (props) {\n      var cache = useContext(EmotionCacheContext);\n\n      if (cache === null) {\n        // yes, we're potentially creating this on every render\n        // it doesn't actually matter though since it's only on the server\n        // so there will only every be a single render\n        // that could change in the future because of suspense and etc. but for now,\n        // this works and i don't want to optimise for a future thing that we aren't sure about\n        cache = createCache({\n          key: 'css'\n        });\n        return /*#__PURE__*/React.createElement(EmotionCacheContext.Provider, {\n          value: cache\n        }, func(props, cache));\n      } else {\n        return func(props, cache);\n      }\n    };\n  };\n}\n\nvar ThemeContext = /* #__PURE__ */React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = React.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/React.forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (process.env.NODE_ENV !== 'production' && !!props.css && (typeof props.css !== 'object' || typeof props.css.name !== 'string' || props.css.name.indexOf('-') === -1)) {\n    var label = getLabelFromStackTrace(new Error().stack);\n    if (label) newProps[labelPropName] = label;\n  }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nvar Emotion$1 = Emotion;\n\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwnProperty as h, isBrowser as i, useTheme as u, withEmotionCache as w };\n","import { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isBrowser$1 } from './emotion-element-c39617d8.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-c39617d8.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.2\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n\n  if (!isBrowser$1) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport { murmur2 as default };\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","import * as React from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || React.useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","const red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nexport default red;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function createMixins(breakpoints, mixins) {\n  return _extends({\n    toolbar: {\n      minHeight: 56,\n      [breakpoints.up('xs')]: {\n        '@media (orientation: landscape)': {\n          minHeight: 48\n        }\n      },\n      [breakpoints.up('sm')]: {\n        minHeight: 64\n      }\n    }\n  }, mixins);\n}","const common = {\n  black: '#000',\n  white: '#fff'\n};\nexport default common;","const grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#f5f5f5',\n  A200: '#eeeeee',\n  A400: '#bdbdbd',\n  A700: '#616161'\n};\nexport default grey;","const purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","const orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","const blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","const lightBlue = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\nexport default lightBlue;","const green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nimport { deepmerge } from '@mui/utils';\nimport { darken, getContrastRatio, lighten } from '@mui/system';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport purple from '../colors/purple';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport lightBlue from '../colors/lightBlue';\nimport green from '../colors/green';\nexport const light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport const dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: blue[200],\n      light: blue[50],\n      dark: blue[400]\n    };\n  }\n  return {\n    main: blue[700],\n    light: blue[400],\n    dark: blue[800]\n  };\n}\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: purple[200],\n      light: purple[50],\n      dark: purple[400]\n    };\n  }\n  return {\n    main: purple[500],\n    light: purple[300],\n    dark: purple[700]\n  };\n}\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: red[500],\n      light: red[300],\n      dark: red[700]\n    };\n  }\n  return {\n    main: red[700],\n    light: red[400],\n    dark: red[800]\n  };\n}\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: lightBlue[400],\n      light: lightBlue[300],\n      dark: lightBlue[700]\n    };\n  }\n  return {\n    main: lightBlue[700],\n    light: lightBlue[500],\n    dark: lightBlue[900]\n  };\n}\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: green[400],\n      light: green[300],\n      dark: green[700]\n    };\n  }\n  return {\n    main: green[800],\n    light: green[500],\n    dark: green[900]\n  };\n}\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: orange[400],\n      light: orange[300],\n      dark: orange[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: orange[500],\n    dark: orange[900]\n  };\n}\nexport default function createPalette(palette) {\n  const {\n      mode = 'light',\n      contrastThreshold = 3,\n      tonalOffset = 0.2\n    } = palette,\n    other = _objectWithoutPropertiesLoose(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n    return contrastText;\n  }\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = _extends({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : _formatMuiErrorMessage(11, name ? ` (${name})` : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : _formatMuiErrorMessage(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  const modes = {\n    dark,\n    light\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n  const paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: _extends({}, common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport { deepmerge } from '@mui/utils';\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nexport default function createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n    {\n      fontFamily = defaultFontFamily,\n      // The default font size of the Material Specification.\n      fontSize = 14,\n      // px\n      fontWeightLight = 300,\n      fontWeightRegular = 400,\n      fontWeightMedium = 500,\n      fontWeightBold = 700,\n      // Tell MUI what's the font-size on the html element.\n      // 16px is the default font-size used by browsers.\n      htmlFontSize = 16,\n      // Apply the CSS properties to all the variants.\n      allVariants,\n      pxToRem: pxToRem2\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return deepmerge(_extends({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n  });\n}","const shadowKeyUmbraOpacity = 0.2;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\nfunction createShadow(...px) {\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');\n}\n\n// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\nconst shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\nexport default shadows;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"duration\", \"easing\", \"delay\"];\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n\n// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n  const constant = height / 36;\n\n  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\nexport default function createTransitions(inputTransitions) {\n  const mergedEasing = _extends({}, easing, inputTransitions.easing);\n  const mergedDuration = _extends({}, duration, inputTransitions.duration);\n  const create = (props = ['all'], options = {}) => {\n    const {\n        duration: durationOption = mergedDuration.standard,\n        easing: easingOption = mergedEasing.easeInOut,\n        delay = 0\n      } = options,\n      other = _objectWithoutPropertiesLoose(options, _excluded);\n    if (process.env.NODE_ENV !== 'production') {\n      const isString = value => typeof value === 'string';\n      // IE11 support, replace with Number.isNaN\n      // eslint-disable-next-line no-restricted-globals\n      const isNumber = value => !isNaN(parseFloat(value));\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(`MUI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n      }\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n      if (Object.keys(other).length !== 0) {\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n      }\n    }\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n  return _extends({\n    getAutoHeightDuration,\n    create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}","// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nconst zIndex = {\n  mobileStepper: 1000,\n  fab: 1050,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\nexport default zIndex;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"breakpoints\", \"mixins\", \"spacing\", \"palette\", \"transitions\", \"typography\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport { createTheme as systemCreateTheme, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport generateUtilityClass from '../generateUtilityClass';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport createTransitions from './createTransitions';\nimport zIndex from './zIndex';\nfunction createTheme(options = {}, ...args) {\n  const {\n      mixins: mixinsInput = {},\n      palette: paletteInput = {},\n      transitions: transitionsInput = {},\n      typography: typographyInput = {}\n    } = options,\n    other = _objectWithoutPropertiesLoose(options, _excluded);\n  if (options.vars) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`vars\\` is a private field used for CSS variables support.\nPlease use another name.` : _formatMuiErrorMessage(18));\n  }\n  const palette = createPalette(paletteInput);\n  const systemTheme = systemCreateTheme(options);\n  let muiTheme = deepmerge(systemTheme, {\n    mixins: createMixins(systemTheme.breakpoints, mixinsInput),\n    palette,\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\n    shadows: shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    transitions: createTransitions(transitionsInput),\n    zIndex: _extends({}, zIndex)\n  });\n  muiTheme = deepmerge(muiTheme, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.\n    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];\n    const traverse = (node, component) => {\n      let key;\n\n      // eslint-disable-next-line guard-for-in, no-restricted-syntax\n      for (key in node) {\n        const child = node[key];\n        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            const stateClass = generateUtilityClass('', key);\n            console.error([`MUI: The \\`${component}\\` component increases ` + `the CSS specificity of the \\`${key}\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({\n              root: {\n                [`&.${stateClass}`]: child\n              }\n            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\\n'));\n          }\n          // Remove the style to prevent global conflicts.\n          node[key] = {};\n        }\n      }\n    };\n    Object.keys(muiTheme.components).forEach(component => {\n      const styleOverrides = muiTheme.components[component].styleOverrides;\n      if (styleOverrides && component.indexOf('Mui') === 0) {\n        traverse(styleOverrides, component);\n      }\n    });\n  }\n  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\nlet warnedOnce = false;\nexport function createMuiTheme(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['MUI: the createMuiTheme function was renamed to createTheme.', '', \"You should use `import { createTheme } from '@mui/material/styles'`\"].join('\\n'));\n    }\n  }\n  return createTheme(...args);\n}\nexport default createTheme;","export default '$$material';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@mui/utils';\nimport merge from './merge';\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nexport const values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n};\n\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      // key is breakpoint\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n      return acc;\n    }, {});\n  }\n  const output = styleFromPropValue(propValue);\n  return output;\n}\nfunction breakpoints(styleFunction) {\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme\n        }, props[key]));\n      }\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\n  var _breakpointsInput$key;\n  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n    return acc;\n  }, style);\n}\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\n\n// compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\nexport function computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== 'object') {\n    return {};\n  }\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n  return base;\n}\nexport function resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n    return acc;\n  }, {});\n}\nexport default breakpoints;","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return Math.min(Math.max(min, value), max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nexport const colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexport const private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nexport function private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nexport function private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return private_safeEmphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"values\", \"unit\", \"step\"];\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst sortBreakpointsValues = values => {\n  const breakpointsAsArray = Object.keys(values).map(key => ({\n    key,\n    val: values[key]\n  })) || [];\n  // Sort in ascending order\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\n  return breakpointsAsArray.reduce((acc, obj) => {\n    return _extends({}, acc, {\n      [obj.key]: obj.val\n    });\n  }, {});\n};\n\n// Keep in mind that @media is inclusive by the CSS specification.\nexport default function createBreakpoints(breakpoints) {\n  const {\n      // The breakpoint **start** at this value.\n      // For instance with the first breakpoint xs: [xs, sm).\n      values = {\n        xs: 0,\n        // phone\n        sm: 600,\n        // tablet\n        md: 900,\n        // small laptop\n        lg: 1200,\n        // desktop\n        xl: 1536 // large screen\n      },\n\n      unit = 'px',\n      step = 5\n    } = breakpoints,\n    other = _objectWithoutPropertiesLoose(breakpoints, _excluded);\n  const sortedValues = sortBreakpointsValues(values);\n  const keys = Object.keys(sortedValues);\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n    return up(key);\n  }\n  function not(key) {\n    // handle first and last key separately, for better readability\n    const keyIndex = keys.indexOf(key);\n    if (keyIndex === 0) {\n      return up(keys[1]);\n    }\n    if (keyIndex === keys.length - 1) {\n      return down(keys[keyIndex]);\n    }\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\n  }\n  return _extends({\n    keys,\n    values: sortedValues,\n    up,\n    down,\n    between,\n    only,\n    not,\n    unit\n  }, other);\n}","const shape = {\n  borderRadius: 4\n};\nexport default shape;","import { createUnarySpacing } from '../spacing';\n/* tslint:enable:unified-signatures */\n\nexport default function createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  }\n\n  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://m2.material.io/design/layout/understanding-layout.html\n  const transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n  const spacing = (...argsInput) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n  spacing.mui = true;\n  return spacing;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport styleFunctionSx from '../styleFunctionSx/styleFunctionSx';\nimport defaultSxConfig from '../styleFunctionSx/defaultSxConfig';\nfunction createTheme(options = {}, ...args) {\n  const {\n      breakpoints: breakpointsInput = {},\n      palette: paletteInput = {},\n      spacing: spacingInput,\n      shape: shapeInput = {}\n    } = options,\n    other = _objectWithoutPropertiesLoose(options, _excluded);\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: _extends({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: _extends({}, shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\nexport default createTheme;","import { deepmerge } from '@mui/utils';\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n  });\n}\n\nexport default merge;","export default function memoize(fn) {\n  const cache = {};\n  return arg => {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n    return cache[arg];\n  };\n}","import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nexport const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nexport const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        }\n      }\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n  return () => undefined;\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return `-${transformed}`;\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","import { unstable_capitalize as capitalize } from '@mui/utils';\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nexport function getPath(obj, path, checkVars = true) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  // Check if CSS variables are used\n  if (obj && obj.vars && checkVars) {\n    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n    if (val != null) {\n      return val;\n    }\n  }\n  return path.split('.').reduce((acc, item) => {\n    if (acc && acc[item] != null) {\n      return acc[item];\n    }\n    return null;\n  }, obj);\n}\nexport function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\n  let value;\n  if (typeof themeMapping === 'function') {\n    value = themeMapping(propValueFinal);\n  } else if (Array.isArray(themeMapping)) {\n    value = themeMapping[propValueFinal] || userValue;\n  } else {\n    value = getPath(themeMapping, propValueFinal) || userValue;\n  }\n  if (transform) {\n    value = transform(value, userValue, themeMapping);\n  }\n  return value;\n}\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n    const styleFromPropValue = propValueFinal => {\n      let value = getStyleValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\n    [prop]: responsivePropType\n  } : {};\n  fn.filterProps = [prop];\n  return fn;\n}\nexport default style;","import merge from './merge';\nfunction compose(...styles) {\n  const handlers = styles.reduce((acc, style) => {\n    style.filterProps.forEach(prop => {\n      acc[prop] = style;\n    });\n    return acc;\n  }, {});\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (handlers[prop]) {\n        return merge(acc, handlers[prop](props));\n      }\n      return acc;\n    }, {});\n  };\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) : {};\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\n  return fn;\n}\nexport default compose;","import responsivePropType from './responsivePropType';\nimport style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\nexport function borderTransform(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n  return `${value}px solid`;\n}\nexport const border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport const borderTopColor = style({\n  prop: 'borderTopColor',\n  themeKey: 'palette'\n});\nexport const borderRightColor = style({\n  prop: 'borderRightColor',\n  themeKey: 'palette'\n});\nexport const borderBottomColor = style({\n  prop: 'borderBottomColor',\n  themeKey: 'palette'\n});\nexport const borderLeftColor = style({\n  prop: 'borderLeftColor',\n  themeKey: 'palette'\n});\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const borderRadius = props => {\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\n    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n    const styleFromPropValue = propValue => ({\n      borderRadius: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\n  }\n  return null;\n};\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\n  borderRadius: responsivePropType\n} : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\nimport responsivePropType from './responsivePropType';\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const gap = props => {\n  if (props.gap !== undefined && props.gap !== null) {\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');\n    const styleFromPropValue = propValue => ({\n      gap: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.gap, styleFromPropValue);\n  }\n  return null;\n};\ngap.propTypes = process.env.NODE_ENV !== 'production' ? {\n  gap: responsivePropType\n} : {};\ngap.filterProps = ['gap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const columnGap = props => {\n  if (props.columnGap !== undefined && props.columnGap !== null) {\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');\n    const styleFromPropValue = propValue => ({\n      columnGap: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.columnGap, styleFromPropValue);\n  }\n  return null;\n};\ncolumnGap.propTypes = process.env.NODE_ENV !== 'production' ? {\n  columnGap: responsivePropType\n} : {};\ncolumnGap.filterProps = ['columnGap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const rowGap = props => {\n  if (props.rowGap !== undefined && props.rowGap !== null) {\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');\n    const styleFromPropValue = propValue => ({\n      rowGap: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.rowGap, styleFromPropValue);\n  }\n  return null;\n};\nrowGap.propTypes = process.env.NODE_ENV !== 'production' ? {\n  rowGap: responsivePropType\n} : {};\nrowGap.filterProps = ['rowGap'];\nexport const gridColumn = style({\n  prop: 'gridColumn'\n});\nexport const gridRow = style({\n  prop: 'gridRow'\n});\nexport const gridAutoFlow = style({\n  prop: 'gridAutoFlow'\n});\nexport const gridAutoColumns = style({\n  prop: 'gridAutoColumns'\n});\nexport const gridAutoRows = style({\n  prop: 'gridAutoRows'\n});\nexport const gridTemplateColumns = style({\n  prop: 'gridTemplateColumns'\n});\nexport const gridTemplateRows = style({\n  prop: 'gridTemplateRows'\n});\nexport const gridTemplateAreas = style({\n  prop: 'gridTemplateAreas'\n});\nexport const gridArea = style({\n  prop: 'gridArea'\n});\nconst grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\nexport default grid;","import style from './style';\nimport compose from './compose';\nexport function paletteTransform(value, userValue) {\n  if (userValue === 'grey') {\n    return userValue;\n  }\n  return value;\n}\nexport const color = style({\n  prop: 'color',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nexport const bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nexport const backgroundColor = style({\n  prop: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst palette = compose(color, bgcolor, backgroundColor);\nexport default palette;","import style from './style';\nimport compose from './compose';\nimport { handleBreakpoints, values as breakpointsValues } from './breakpoints';\nexport function sizingTransform(value) {\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\n}\nexport const width = style({\n  prop: 'width',\n  transform: sizingTransform\n});\nexport const maxWidth = props => {\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\n    const styleFromPropValue = propValue => {\n      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;\n      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || breakpointsValues[propValue];\n      return {\n        maxWidth: breakpoint || sizingTransform(propValue)\n      };\n    };\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\n  }\n  return null;\n};\nmaxWidth.filterProps = ['maxWidth'];\nexport const minWidth = style({\n  prop: 'minWidth',\n  transform: sizingTransform\n});\nexport const height = style({\n  prop: 'height',\n  transform: sizingTransform\n});\nexport const maxHeight = style({\n  prop: 'maxHeight',\n  transform: sizingTransform\n});\nexport const minHeight = style({\n  prop: 'minHeight',\n  transform: sizingTransform\n});\nexport const sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: sizingTransform\n});\nexport const sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: sizingTransform\n});\nexport const boxSizing = style({\n  prop: 'boxSizing'\n});\nconst sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\nexport default sizing;","import { padding, margin } from '../spacing';\nimport { borderRadius, borderTransform } from '../borders';\nimport { gap, rowGap, columnGap } from '../cssGrid';\nimport { paletteTransform } from '../palette';\nimport { maxWidth, sizingTransform } from '../sizing';\nconst defaultSxConfig = {\n  // borders\n  border: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderTop: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderRight: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderBottom: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderLeft: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderColor: {\n    themeKey: 'palette'\n  },\n  borderTopColor: {\n    themeKey: 'palette'\n  },\n  borderRightColor: {\n    themeKey: 'palette'\n  },\n  borderBottomColor: {\n    themeKey: 'palette'\n  },\n  borderLeftColor: {\n    themeKey: 'palette'\n  },\n  borderRadius: {\n    themeKey: 'shape.borderRadius',\n    style: borderRadius\n  },\n  // palette\n  color: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  bgcolor: {\n    themeKey: 'palette',\n    cssProperty: 'backgroundColor',\n    transform: paletteTransform\n  },\n  backgroundColor: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  // spacing\n  p: {\n    style: padding\n  },\n  pt: {\n    style: padding\n  },\n  pr: {\n    style: padding\n  },\n  pb: {\n    style: padding\n  },\n  pl: {\n    style: padding\n  },\n  px: {\n    style: padding\n  },\n  py: {\n    style: padding\n  },\n  padding: {\n    style: padding\n  },\n  paddingTop: {\n    style: padding\n  },\n  paddingRight: {\n    style: padding\n  },\n  paddingBottom: {\n    style: padding\n  },\n  paddingLeft: {\n    style: padding\n  },\n  paddingX: {\n    style: padding\n  },\n  paddingY: {\n    style: padding\n  },\n  paddingInline: {\n    style: padding\n  },\n  paddingInlineStart: {\n    style: padding\n  },\n  paddingInlineEnd: {\n    style: padding\n  },\n  paddingBlock: {\n    style: padding\n  },\n  paddingBlockStart: {\n    style: padding\n  },\n  paddingBlockEnd: {\n    style: padding\n  },\n  m: {\n    style: margin\n  },\n  mt: {\n    style: margin\n  },\n  mr: {\n    style: margin\n  },\n  mb: {\n    style: margin\n  },\n  ml: {\n    style: margin\n  },\n  mx: {\n    style: margin\n  },\n  my: {\n    style: margin\n  },\n  margin: {\n    style: margin\n  },\n  marginTop: {\n    style: margin\n  },\n  marginRight: {\n    style: margin\n  },\n  marginBottom: {\n    style: margin\n  },\n  marginLeft: {\n    style: margin\n  },\n  marginX: {\n    style: margin\n  },\n  marginY: {\n    style: margin\n  },\n  marginInline: {\n    style: margin\n  },\n  marginInlineStart: {\n    style: margin\n  },\n  marginInlineEnd: {\n    style: margin\n  },\n  marginBlock: {\n    style: margin\n  },\n  marginBlockStart: {\n    style: margin\n  },\n  marginBlockEnd: {\n    style: margin\n  },\n  // display\n  displayPrint: {\n    cssProperty: false,\n    transform: value => ({\n      '@media print': {\n        display: value\n      }\n    })\n  },\n  display: {},\n  overflow: {},\n  textOverflow: {},\n  visibility: {},\n  whiteSpace: {},\n  // flexbox\n  flexBasis: {},\n  flexDirection: {},\n  flexWrap: {},\n  justifyContent: {},\n  alignItems: {},\n  alignContent: {},\n  order: {},\n  flex: {},\n  flexGrow: {},\n  flexShrink: {},\n  alignSelf: {},\n  justifyItems: {},\n  justifySelf: {},\n  // grid\n  gap: {\n    style: gap\n  },\n  rowGap: {\n    style: rowGap\n  },\n  columnGap: {\n    style: columnGap\n  },\n  gridColumn: {},\n  gridRow: {},\n  gridAutoFlow: {},\n  gridAutoColumns: {},\n  gridAutoRows: {},\n  gridTemplateColumns: {},\n  gridTemplateRows: {},\n  gridTemplateAreas: {},\n  gridArea: {},\n  // positions\n  position: {},\n  zIndex: {\n    themeKey: 'zIndex'\n  },\n  top: {},\n  right: {},\n  bottom: {},\n  left: {},\n  // shadows\n  boxShadow: {\n    themeKey: 'shadows'\n  },\n  // sizing\n  width: {\n    transform: sizingTransform\n  },\n  maxWidth: {\n    style: maxWidth\n  },\n  minWidth: {\n    transform: sizingTransform\n  },\n  height: {\n    transform: sizingTransform\n  },\n  maxHeight: {\n    transform: sizingTransform\n  },\n  minHeight: {\n    transform: sizingTransform\n  },\n  boxSizing: {},\n  // typography\n  fontFamily: {\n    themeKey: 'typography'\n  },\n  fontSize: {\n    themeKey: 'typography'\n  },\n  fontStyle: {\n    themeKey: 'typography'\n  },\n  fontWeight: {\n    themeKey: 'typography'\n  },\n  letterSpacing: {},\n  textTransform: {},\n  lineHeight: {},\n  textAlign: {},\n  typography: {\n    cssProperty: false,\n    themeKey: 'typography'\n  }\n};\nexport default defaultSxConfig;","import { unstable_capitalize as capitalize } from '@mui/utils';\nimport merge from '../merge';\nimport { getPath, getStyleValue as getValue } from '../style';\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from '../breakpoints';\nimport defaultSxConfig from './defaultSxConfig';\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n    const themeMapping = getPath(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return handleBreakpoints(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig;\n\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = handleBreakpoints({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = merge(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return removeUnusedBreakpoints(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;","import * as React from 'react';\nimport { ThemeContext } from '@mui/styled-engine';\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = React.useContext(ThemeContext);\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\nexport default useTheme;","import _formatMuiErrorMessage from \"./formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`capitalize(string)\\` expects a string argument.` : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n        originalFunctionToString = Function.prototype.toString;\n\n        Function.prototype.toString = function ( ...args) {\n      var context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, isMatchingPattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n        return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {constructor() { Scope.prototype.__init.call(this);Scope.prototype.__init2.call(this);Scope.prototype.__init3.call(this);Scope.prototype.__init4.call(this);Scope.prototype.__init5.call(this);Scope.prototype.__init6.call(this);Scope.prototype.__init7.call(this);Scope.prototype.__init8.call(this);Scope.prototype.__init9.call(this);Scope.prototype.__init10.call(this); }\n  /** Flag if notifying is happening. */\n   __init() {this._notifyingListeners = false;}\n\n  /** Callback for client to receive scope changes. */\n   __init2() {this._scopeListeners = [];}\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n   __init3() {this._eventProcessors = [];}\n\n  /** Array of breadcrumbs. */\n   __init4() {this._breadcrumbs = [];}\n\n  /** User */\n   __init5() {this._user = {};}\n\n  /** Tags */\n   __init6() {this._tags = {};}\n\n  /** Extra */\n   __init7() {this._extra = {};}\n\n  /** Contexts */\n   __init8() {this._contexts = {};}\n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n  /** Attachments */\n   __init9() {this._attachments = [];}\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n   __init10() {this._sdkProcessingMetadata = {};}\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getMainCarrier } from '@sentry/hub';\nimport { logger, isNaN, dynamicRequire, loadModule, isNodeEnv } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { Transaction } from './transaction.js';\nimport { hasTracingEnabled } from './utils.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  var scope = this.getScope();\n  if (scope) {\n    var span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      transactionSampling: { method: 'explicitly_set' },\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_sampler',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n    transaction.setMetadata({\n      transactionSampling: { method: 'inheritance' },\n    });\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_rate',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  \n  transactionContext,\n  customSamplingContext,\n) {\n  var client = this.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n) {\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  var packageToIntegrationMapping = {\n    mongodb() {\n      var integration = dynamicRequire(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      var integration = dynamicRequire(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      var integration = dynamicRequire(module, './integrations/node/mysql') \n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      var integration = dynamicRequire(module, './integrations/node/postgres') \n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  var mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n\nexport { _addTracingExtensions, addExtensionMethods, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { timestampWithMs, logger } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nvar DEFAULT_IDLE_TIMEOUT = 1000;\nvar DEFAULT_FINAL_TIMEOUT = 30000;\nvar HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n  \n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n    __init4() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  \n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = DEFAULT_IDLE_TIMEOUT,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = DEFAULT_FINAL_TIMEOUT,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);;\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._startIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampWithMs()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (var callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        var keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      var pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      var popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idletimeout, if there is one\n   */\n   _cancelIdleTimeout() {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Creates an idletimeout\n   */\n   _startIdleTimeout(endTimestamp) {\n    this._cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this._cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n            delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      var endTimestamp = timestampWithMs() + this._idleTimeout / 1000;\n      this._startIdleTimeout(endTimestamp);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    var heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, HEARTBEAT_INTERVAL);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  var scope = hub.getScope();\n  if (scope) {\n    var transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\nexport { DEFAULT_FINAL_TIMEOUT, DEFAULT_IDLE_TIMEOUT, HEARTBEAT_INTERVAL, IdleTransaction, IdleTransactionSpanRecorder };\n//# sourceMappingURL=idletransaction.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/hub';\nimport { uuid4, timestampWithMs, dropUndefinedKeys, isSentryBaggageEmpty, isBaggageEmpty, createBaggage, setBaggageValue } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {;SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = uuid4();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = uuid4().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Internal keeper of the status\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = timestampWithMs();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n     __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {;Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    var childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    var spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = _nullishCoalesce(spanContext.data, () => ( {}));\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = _nullishCoalesce(spanContext.spanId, () => ( this.spanId));\n    this.startTimestamp = _nullishCoalesce(spanContext.startTimestamp, () => ( this.startTimestamp));\n    this.status = spanContext.status;\n    this.tags = _nullishCoalesce(spanContext.tags, () => ( {}));\n    this.traceId = _nullishCoalesce(spanContext.traceId, () => ( this.traceId));\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n   getBaggage() {\n    var existingBaggage = this.transaction && this.transaction.metadata.baggage;\n\n    var finalBaggage =\n      !existingBaggage || isSentryBaggageEmpty(existingBaggage)\n        ? this._getBaggageWithSentryValues(existingBaggage)\n        : existingBaggage;\n\n    return isBaggageEmpty(finalBaggage) ? undefined : finalBaggage;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   *\n   * @param baggage\n   * @returns\n   */\n   _getBaggageWithSentryValues(baggage = createBaggage({})) {\n        var hub = ((this.transaction ) && (this.transaction )._hub) || getCurrentHub();\n    var client = hub.getClient();\n\n    const { environment, release } = (client && client.getOptions()) || {};\n\n    environment && setBaggageValue(baggage, 'environment', environment);\n    release && setBaggageValue(baggage, 'release', release);\n\n    return baggage;\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/hub';\nimport { logger, dropUndefinedKeys } from '@sentry/utils';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n  \n\n  /**\n   * The reference to the current hub.\n   */\n  \n\n   __init() {this._measurements = {};}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);;\n\n    this._hub = hub || getCurrentHub();\n\n    this.name = transactionContext.name || '';\n\n    this.metadata = transactionContext.metadata || {};\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name) {\n    this.name = name;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Set metadata for this transaction.\n   * @hidden\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      var client = this._hub.getClient();\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    var transaction = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: this.metadata,\n    };\n\n    var hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    var spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = _nullishCoalesce(transactionContext.name, () => ( ''));\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { getCurrentHub } from '@sentry/hub';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  var client = getCurrentHub().getClient();\n  var options = maybeOptions || (client && client.getOptions());\n  return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  var hub = maybeHub || getCurrentHub();\n  var scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n  return time * 1000;\n}\n\nexport { getActiveTransaction, hasTracingEnabled, msToSec, secToMs };\n//# sourceMappingURL=utils.js.map\n","import { logger } from './logger.js';\n\nvar BAGGAGE_HEADER_NAME = 'baggage';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nvar MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/** Create an instance of Baggage */\nfunction createBaggage(initItems, baggageString = '') {\n  return [{ ...initItems }, baggageString];\n}\n\n/** Get a value from baggage */\nfunction getBaggageValue(baggage, key) {\n  return baggage[0][key];\n}\n\n/** Add a value to baggage */\nfunction setBaggageValue(baggage, key, value) {\n  baggage[0][key] = value;\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isSentryBaggageEmpty(baggage) {\n  return Object.keys(baggage[0]).length === 0;\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isBaggageEmpty(baggage) {\n  var thirdPartyBaggage = getThirdPartyBaggage(baggage);\n  return isSentryBaggageEmpty(baggage) && (thirdPartyBaggage == undefined || thirdPartyBaggage.length === 0);\n}\n\n/** Returns Sentry specific baggage values */\nfunction getSentryBaggageItems(baggage) {\n  return baggage[0];\n}\n\n/**\n * Returns 3rd party baggage string of @param baggage\n * @param baggage\n */\nfunction getThirdPartyBaggage(baggage) {\n  return baggage[1];\n}\n\n/** Serialize a baggage object */\nfunction serializeBaggage(baggage) {\n  return Object.keys(baggage[0]).reduce((prev, key) => {\n    var val = baggage[0][key] ;\n    var baggageEntry = `${SENTRY_BAGGAGE_KEY_PREFIX}${encodeURIComponent(key)}=${encodeURIComponent(val)}`;\n    var newVal = prev === '' ? baggageEntry : `${prev},${baggageEntry}`;\n    if (newVal.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`Not adding key: ${key} with val: ${val} to baggage due to exceeding baggage size limits.`);\n      return prev;\n    } else {\n      return newVal;\n    }\n  }, baggage[1]);\n}\n\n/** Parse a baggage header to a string */\nfunction parseBaggageString(inputBaggageString) {\n  return inputBaggageString.split(',').reduce(\n    ([baggageObj, baggageString], curr) => {\n      const [key, val] = curr.split('=');\n      if (SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(key)) {\n        var baggageKey = decodeURIComponent(key.split('-')[1]);\n        return [\n          {\n            ...baggageObj,\n            [baggageKey]: decodeURIComponent(val),\n          },\n          baggageString,\n        ];\n      } else {\n        return [baggageObj, baggageString === '' ? curr : `${baggageString},${curr}`];\n      }\n    },\n    [{}, ''],\n  );\n}\n\n/**\n * Merges the baggage header we saved from the incoming request (or meta tag) with\n * a possibly created or modified baggage header by a third party that's been added\n * to the outgoing request header.\n *\n * In case @param headerBaggageString exists, we can safely add the the 3rd party part of @param headerBaggage\n * with our @param incomingBaggage. This is possible because if we modified anything beforehand,\n * it would only affect parts of the sentry baggage (@see Baggage interface).\n *\n * @param incomingBaggage the baggage header of the incoming request that might contain sentry entries\n * @param headerBaggageString possibly existing baggage header string added from a third party to request headers\n *\n * @return a merged and serialized baggage string to be propagated with the outgoing request\n */\nfunction mergeAndSerializeBaggage(incomingBaggage, headerBaggageString) {\n  if (!incomingBaggage && !headerBaggageString) {\n    return '';\n  }\n\n  var headerBaggage = (headerBaggageString && parseBaggageString(headerBaggageString)) || undefined;\n  var thirdPartyHeaderBaggage = headerBaggage && getThirdPartyBaggage(headerBaggage);\n\n  var finalBaggage = createBaggage(\n    (incomingBaggage && incomingBaggage[0]) || {},\n    thirdPartyHeaderBaggage || (incomingBaggage && incomingBaggage[1]) || '',\n  );\n  return serializeBaggage(finalBaggage);\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, createBaggage, getBaggageValue, getSentryBaggageItems, getThirdPartyBaggage, isBaggageEmpty, isSentryBaggageEmpty, mergeAndSerializeBaggage, parseBaggageString, serializeBaggage, setBaggageValue };\n//# sourceMappingURL=baggage.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\nexport { getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { isNodeEnv } from './node.js';\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","import { getGlobalObject } from './global.js';\nimport { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\n\nvar global = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n            return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n            var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n        var proto = (global )[target] && (global )[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n        \n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n          \n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type];                 }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","var objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat, ty) {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = (num) => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = (Math.random() * 16) | 0;\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, parseUrl, stripUrlQueryAndFragment, uuid4 };\n//# sourceMappingURL=misc.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","var STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      for (var parser of sortedParsers) {\n        var frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\nexport { createStackParser, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n        colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n    for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, truncate };\n//# sourceMappingURL=string.js.map\n","import { getGlobalObject } from './global.js';\nimport { logger } from './logger.js';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = getGlobalObject();\n\n  // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n    if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n      var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isThenable } from './is.js';\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","var _global = (typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}); _global.SENTRY_RELEASE={id:\"bK1ubFbiy2G2Hmt8jSO-E\"};","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","\"use strict\";\nvar ref, ref1;\nmodule.exports = ((ref = global.process) == null ? void 0 : ref.env) && typeof ((ref1 = global.process) == null ? void 0 : ref1.env) === \"object\" ? global.process : require(\"../../compiled/process\");\n\n//# sourceMappingURL=process.js.map","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"private-next-pages/_app.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  ","const CommonThemeColors = {\n  black: '#333',\n  dark: '#95998A',\n  green: '#BDCC94',\n  yellow: '#FFEC67',\n  white: '#FFFFFF',\n  blue: '#A9B6CC',\n  neonRed: '#FF1177',\n  neonBlue: '#228DFF',\n  neonYellow: '#FFDD1B',\n  neonGreen: '#B6FF00',\n  neonOrange: '#FF9900',\n  neonViolet: '#ff00de',\n} as const;\n\nconst LightThemeColors = {\n  ...CommonThemeColors,\n  text: CommonThemeColors.black,\n  backgroundColor: CommonThemeColors.white,\n} as const;\n\nconst DarkThemeColors = {\n  ...CommonThemeColors,\n  text: CommonThemeColors.white,\n  backgroundColor: CommonThemeColors.black,\n} as const;\n\nexport interface CustomPalette {\n  colors: typeof LightThemeColors | typeof DarkThemeColors;\n}\n\n// 참조: https://color.adobe.com/ko/explore\nexport const emotionLightTheme: CustomPalette = {\n  colors: LightThemeColors,\n};\n\nexport const emotionDarkTheme: CustomPalette = {\n  colors: DarkThemeColors,\n};\n\nexport const media = {\n  widePc: 'only screen and (min-width : 1288px)',\n  mobile: 'only screen and (max-width : 759px)',\n  tablet: 'only screen  and (min-width : 760px) and (max-width : 1023px)',\n  pc: 'only screen and (min-width : 1024px)',\n  notMobile: 'only screen and (min-width : 760px)',\n  notPC: 'only screen and (max-width : 1023px)',\n  wideTablet: 'only screen  and (min-width : 1024px) and (max-width : 1200px)',\n};\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\nimport { emotionDarkTheme, emotionLightTheme } from './emotionTheme';\n\nexport const muiLightTheme = createTheme({\n  colors: emotionLightTheme.colors,\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    text: { primary: emotionLightTheme.colors.text },\n    background: { default: emotionLightTheme.colors.backgroundColor },\n  },\n});\n\nexport const muiDarkTheme = createTheme({\n  colors: emotionDarkTheme.colors,\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    text: { primary: emotionDarkTheme.colors.text },\n    background: { default: emotionDarkTheme.colors.backgroundColor },\n  },\n});\n","import { atom } from 'recoil';\n\nexport const themeState = atom<'lightTheme' | 'darkTheme'>({\n  key: 'themeState',\n  default: 'lightTheme',\n});\n","import { emotionDarkTheme, emotionLightTheme } from '@theme/emotionTheme';\nimport { muiDarkTheme, muiLightTheme } from '@theme/muiTheme';\nimport { useCallback, useMemo } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { themeState } from 'stores/theme';\n\nfunction getNextTheme(currentTheme: 'lightTheme' | 'darkTheme') {\n  return currentTheme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\n}\n\nfunction useCustomTheme() {\n  const currentTheme = useRecoilValue(themeState);\n\n  const [muiTheme, emotionTheme] = useMemo(() => {\n    if (currentTheme === 'lightTheme') {\n      return [muiLightTheme, emotionLightTheme];\n    }\n    return [muiDarkTheme, emotionDarkTheme];\n  }, [currentTheme]);\n\n  return { muiTheme, emotionTheme };\n}\n\nexport function useCustomThemeController() {\n  const [currentTheme, setCurrentTheme] = useRecoilState(themeState);\n\n  const toggleTheme = useCallback(() => {\n    const nextTheme = getNextTheme(currentTheme);\n    setCurrentTheme(nextTheme);\n  }, [currentTheme]);\n\n  return { currentTheme, toggleTheme };\n}\n\nexport default useCustomTheme;\n","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  theme: PropTypes.object\n} : void 0;","import { Global, ThemeProvider as EmotionThemeProvider } from '@emotion/react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport useCustomTheme from 'hooks/useCustomTheme';\nimport { ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\nfunction ThemeProvider(props: Props) {\n  const { children } = props;\n  const { muiTheme, emotionTheme } = useCustomTheme();\n\n  return (\n    <>\n      <MuiThemeProvider theme={muiTheme}>\n        <EmotionThemeProvider theme={emotionTheme}>\n          {children}\n        </EmotionThemeProvider>\n      </MuiThemeProvider>\n      <Global\n        styles={{\n          body: {\n            color: emotionTheme.colors.text,\n            backgroundColor: emotionTheme.colors.backgroundColor,\n          },\n        }}\n      />\n    </>\n  );\n}\n\nexport default ThemeProvider;\n","import '@styles/globals.css';\nimport type { AppProps } from 'next/app';\nimport Head from 'next/head';\nimport ThemeProvider from 'providers/ThemeProvider';\nimport { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Hydrate } from 'react-query/hydration';\nimport { RecoilRoot } from 'recoil';\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  const [queryClient] = useState(() => new QueryClient());\n  return (\n    <>\n      <Head>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo.svg\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <RecoilRoot>\n        <QueryClientProvider client={queryClient}>\n          <Hydrate state={pageProps.dehydratedState}>\n            <ThemeProvider>\n              <Component {...pageProps} />\n            </ThemeProvider>\n          </Hydrate>\n        </QueryClientProvider>\n      </RecoilRoot>\n    </>\n  );\n}\nexport default MyApp;\n","var SDK_VERSION = '7.1.1';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] );\n}\n\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  var userIntegrations = options.integrations;\n\n  let integrations = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  var integrationsNames = integrations.map(i => i.name);\n  var alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = getCurrentHub();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  \n\n   constructor( message) {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\n/**\n * Changes a Dsn to point to the `relay` server running in the Lambda Extension.\n *\n * This is only used by the serverless integration for AWS Lambda.\n *\n * @param originalDsn The original Dsn of the customer.\n * @returns Dsn pointing to Lambda extension.\n */\nfunction extensionRelayDSN(originalDsn) {\n  if (originalDsn === undefined) {\n    return undefined;\n  }\n\n  var dsn = dsnFromString(originalDsn);\n  dsn.host = 'localhost';\n  dsn.port = '3000';\n  dsn.protocol = 'http';\n\n  return dsnToString(dsn);\n}\n\nexport { dsnToString, extensionRelayDSN, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, envelopeItemTypeToDataCategory, forEachEnvelopeItem, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { dsnToString, createEnvelope, dropUndefinedKeys } from '@sentry/utils';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  // TODO: Below is a temporary hack in order to debug a serialization error - see\n  // https://github.com/getsentry/sentry-javascript/issues/2809,\n  // https://github.com/getsentry/sentry-javascript/pull/4425, and\n  // https://github.com/getsentry/sentry-javascript/pull/4574.\n  //\n  // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n  // throw a circular reference error.\n  //\n  // When it's time to remove it:\n  // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n  //    `sdkProcessingMetadata`\n  // 2. Restore the original version of the request body, which is commented out\n  // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n  //    baseClient tests in this package\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n  event.tags = event.tags || {};\n  event.extra = event.extra || {};\n\n  // In theory, all events should be marked as having gone through normalization and so\n  // we should never set this tag/extra data\n  if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n    event.tags.skippedNormalization = true;\n    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n  }\n\n  // prevent this data from being sent to sentry\n  // TODO: This is NOT part of the hack - DO NOT DELETE\n  delete event.sdkProcessingMetadata;\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  var eventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      event.contexts &&\n      event.contexts.trace && {\n        // TODO: Grab this from baggage\n        trace: dropUndefinedKeys({\n          // Trace context must be defined for transactions\n                    trace_id: event.contexts.trace.trace_id ,\n          environment: event.environment,\n          release: event.release,\n          transaction: event.transaction,\n          user: event.user && {\n            id: event.user.id,\n            segment: event.user.segment,\n          },\n          public_key: dsn.publicKey,\n        }),\n      }),\n  };\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { updateSession, Scope } from '@sentry/hub';\nimport { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, uuid4, dateTimestampInSeconds, normalize, truncate, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations } from './integration.js';\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n  \n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  \n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options.tunnel);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(attachment, _optionalChain([this, 'access', _ => _._options, 'access', _2 => _2.transportOptions, 'optionalAccess', _3 => _3.textEncoder])),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (evt) {\n        // TODO this is more of the hack trying to solve https://github.com/getsentry/sentry-javascript/issues/2809\n        // it is only attached as extra data to the event if the event somehow skips being normalized\n        evt.sdkProcessingMetadata = {\n          ...evt.sdkProcessingMetadata,\n          normalizeDepth: `${normalize(normalizeDepth)} (${typeof normalizeDepth})`,\n        };\n      }\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      normalized.contexts = {};\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    normalized.sdkProcessingMetadata = { ...normalized.sdkProcessingMetadata, baseClientNormalized: true };\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n    \n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n    level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, htmlTreeAsString, severityLevelFromString, safeJoin, getGlobalObject, parseUrl } from '@sentry/utils';\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n    function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , keyAttrs)\n        : htmlTreeAsString(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  var global = getGlobalObject();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  var parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\n\nvar global = getGlobalObject();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n    if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  }\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nfunction sendReport(url, body) {\n  var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if (supportsFetch()) {\n    var fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    });\n  }\n}\n\nexport { getNativeFetchImplementation, sendReport };\n//# sourceMappingURL=utils.js.map\n","import { BaseClient, SDK_VERSION, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { getGlobalObject, getEventDescription, logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { sendReport } from './transports/utils.js';\n\nvar globalObject = getGlobalObject();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n        level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options.tunnel);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  ) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n    // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n            var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  \n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} \n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n      } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getGlobalObject, fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers.js';\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n    return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapRAF(original) {\n    return function ( callback) {\n        return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n    return function ( ...args) {\n        var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n    var global = getGlobalObject() ;\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n            \n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n                    fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n                wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n          ) {\n      return function (\n                \n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n        for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n        (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n        (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n                    if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError } from '@sentry/utils';\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n        var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event due to full buffer');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { createTransport } from '@sentry/core';\nimport { getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getCurrentHub, getReportDialogEndpoint } from '@sentry/core';\nimport { getGlobalObject, stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nvar defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = getGlobalObject();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n        script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = getGlobalObject();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import { SDK_VERSION, init as init$1 } from '@sentry/browser';\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk = options._metadata.sdk || {\n    name: 'sentry.javascript.react',\n    packages: [\n      {\n        name: 'npm:@sentry/react',\n        version: SDK_VERSION,\n      },\n    ],\n    version: SDK_VERSION,\n  };\n  init$1(options);\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","var TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData };\n//# sourceMappingURL=tracing.js.map\n","import { getGlobalObject, logger } from '@sentry/utils';\nimport { getActiveTransaction } from '../utils.js';\n\nvar global = getGlobalObject();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      var activeTransaction = getActiveTransaction() ;\n      if (global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","var bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nvar generateUniqueID = () => {\n  return `v2-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { generateUniqueID } from './generateUniqueID.js';\n\nvar initMetric = (name, value) => {\n  return {\n    name,\n    value: _nullishCoalesce(value, () => ( -1)),\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nvar observe = (type, callback) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      // More extensive feature detect needed for Firefox due to:\n      // https://github.com/GoogleChrome/web-vitals/issues/142\n      if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n        return;\n      }\n\n      var po = new PerformanceObserver(l => l.getEntries().map(callback));\n\n      po.observe({ type, buffered: true });\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { getGlobalObject } from '@sentry/utils';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar onHidden = (cb, once) => {\n  var onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/layout-instability/#sec-layout-shift\n\nvar getCLS = (onReport, reportAllChanges) => {\n  var metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  var entryHandler = (entry) => {\n    // Only count layout shifts without recent user input.\n    // TODO: Figure out why entry can be undefined\n    if (entry && !entry.hadRecentInput) {\n      var firstSessionEntry = sessionEntries[0];\n      var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n      // If the entry occurred less than 1 second after the previous entry and\n      // less than 5 seconds after the first entry in the session, include the\n      // entry in the current session. Otherwise, start a new session.\n      if (\n        sessionValue &&\n        sessionEntries.length !== 0 &&\n        entry.startTime - lastSessionEntry.startTime < 1000 &&\n        entry.startTime - firstSessionEntry.startTime < 5000\n      ) {\n        sessionValue += entry.value;\n        sessionEntries.push(entry);\n      } else {\n        sessionValue = entry.value;\n        sessionEntries = [entry];\n      }\n\n      // If the current session value is larger than the current CLS value,\n      // update CLS and the entries contributing to it.\n      if (sessionValue > metric.value) {\n        metric.value = sessionValue;\n        metric.entries = sessionEntries;\n        if (report) {\n          report();\n        }\n      }\n    }\n  };\n\n  var po = observe('layout-shift', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      report(true);\n    });\n  }\n};\n\nexport { getCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nvar initHiddenTime = () => {\n  return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\n\nvar trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nvar getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getFID = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('FID');\n  let report;\n\n  var entryHandler = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  var po = observe('first-input', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { getFID };\n//# sourceMappingURL=getFID.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface\n\nvar reportedMetricIDs = {};\n\nvar getLCP = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('LCP');\n  let report;\n\n  var entryHandler = (entry) => {\n    // The startTime attribute returns the value of the renderTime if it is not 0,\n    // and the value of the loadTime otherwise.\n    var value = entry.startTime;\n\n    // If the page was hidden prior to paint time of the entry,\n    // ignore it and mark the metric as final, otherwise add the entry.\n    if (value < visibilityWatcher.firstHiddenTime) {\n      metric.value = value;\n      metric.entries.push(entry);\n    }\n\n    if (report) {\n      report();\n    }\n  };\n\n  var po = observe('largest-contentful-paint', entryHandler);\n\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    var stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        po.takeRecords().map(entryHandler );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n\nexport { getLCP };\n//# sourceMappingURL=getLCP.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getGlobalObject, browserPerformanceTimeOrigin, logger, htmlTreeAsString } from '@sentry/utils';\nimport { msToSec } from '../../utils.js';\nimport { getCLS } from '../web-vitals/getCLS.js';\nimport { getFID } from '../web-vitals/getFID.js';\nimport { getLCP } from '../web-vitals/getLCP.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\nvar global = getGlobalObject();\n\nfunction getBrowserPerformanceAPI() {\n  return global && global.addEventListener && global.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n */\nfunction startTrackingWebVitals(reportAllChanges = false) {\n  var performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      global.performance.mark('sentry-tracing-init');\n    }\n    _trackCLS();\n    _trackLCP(reportAllChanges);\n    _trackFID();\n  }\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  getCLS(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: 'millisecond' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(reportAllChanges) {\n  getLCP(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.lcp'] = { value: timeOrigin + startTime, unit: 'second' };\n    _lcpEntry = entry ;\n  }, reportAllChanges);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  getFID(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  var performance = getBrowserPerformanceAPI();\n  if (!performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  var performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n    performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    var startTime = msToSec(entry.startTime);\n    var duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        var startTimestamp = _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        var firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fp'] = { value: startTimestamp, unit: 'second' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fcp'] = { value: startTimestamp, unit: 'second' };\n        }\n        break;\n      }\n      case 'resource': {\n        var resourceName = (entry.name ).replace(global.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'second',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      var oldValue = _measurements[name].value;\n      var measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      var delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    if (_measurements['mark.fid'] && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: _measurements['mark.fid'].value + msToSec(_measurements['fid'].value),\n        op: 'web.vitals',\n        startTimestamp: _measurements['mark.fid'].value,\n      });\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n    entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  var measureStartTimestamp = timeOrigin + startTime;\n  var measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n    entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  var end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  var start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: _nullishCoalesce(description, () => ( event)),\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n    var data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  var startTimestamp = timeOrigin + startTime;\n  var endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  var navigator = global.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  var connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n\n    if (isMeasurementValue(connection.downlink)) {\n      _measurements['connection.downlink'] = { value: connection.downlink, unit: '' }; // unit is empty string for now, while relay doesn't support download speed units\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { isMatchingPattern, addInstrumentationHandler, isInstanceOf, BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage } from '@sentry/utils';\nimport { hasTracingEnabled, getActiveTransaction } from '../utils.js';\n\nvar DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nvar defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n    const { traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  // We should cache url -> decision so that we don't have to compute\n  // regexp everytime we create a request.\n  var urlMap = {};\n\n  var defaultShouldCreateSpan = (url) => {\n    if (urlMap[url]) {\n      return urlMap[url];\n    }\n    var origins = tracingOrigins;\n    urlMap[url] =\n      origins.some((origin) => isMatchingPattern(url, origin)) &&\n      !isMatchingPattern(url, 'sentry_key');\n    return urlMap[url];\n  };\n\n  // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n  // That's why we filter out already unwanted Spans from tracingOrigins\n  let shouldCreateSpan = defaultShouldCreateSpan;\n  if (typeof shouldCreateSpanForRequest === 'function') {\n    shouldCreateSpan = (url) => {\n      return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n    };\n  }\n\n  var spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n                span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    var request = (handlerData.args[0] = handlerData.args[0] );\n        var options = (handlerData.args[1] = (handlerData.args[1] ) || {});\n    options.headers = addTracingHeaders(request, span, options);\n  }\n}\n\nfunction addTracingHeaders(\n  request,\n  span,\n  options,\n) {\n  let headers = options.headers;\n\n  if (isInstanceOf(request, Request)) {\n    headers = (request ).headers;\n  }\n  var incomingBaggage = span.getBaggage();\n\n  if (headers) {\n        if (typeof headers.append === 'function') {\n            headers.append('sentry-trace', span.toTraceparent());\n            headers.append(BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage(incomingBaggage, headers.get(BAGGAGE_HEADER_NAME)));\n    } else if (Array.isArray(headers)) {\n      const [, headerBaggageString] = headers.find(([key, _]) => key === BAGGAGE_HEADER_NAME);\n      headers = [\n        ...headers,\n        ['sentry-trace', span.toTraceparent()],\n        [BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage(incomingBaggage, headerBaggageString)],\n      ];\n    } else {\n      headers = {\n        ...headers,\n        'sentry-trace': span.toTraceparent(),\n                baggage: mergeAndSerializeBaggage(incomingBaggage, headers.baggage),\n      };\n    }\n  } else {\n    headers = { 'sentry-trace': span.toTraceparent(), baggage: mergeAndSerializeBaggage(incomingBaggage) };\n  }\n  return headers;\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  var xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        var headerBaggageString =\n          handlerData.xhr.getRequestHeader && handlerData.xhr.getRequestHeader(BAGGAGE_HEADER_NAME);\n\n        handlerData.xhr.setRequestHeader(\n          BAGGAGE_HEADER_NAME,\n          mergeAndSerializeBaggage(span.getBaggage(), headerBaggageString),\n        );\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\nexport { DEFAULT_TRACING_ORIGINS, defaultRequestInstrumentationOptions, fetchCallback, instrumentOutgoingRequests, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { getGlobalObject, logger, addInstrumentationHandler } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!global || !global.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = global.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { logger, getGlobalObject, extractTraceparentData, parseBaggageString } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions.js';\nimport { DEFAULT_IDLE_TIMEOUT, DEFAULT_FINAL_TIMEOUT } from '../idletransaction.js';\nimport '../utils.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\n\nvar BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nvar DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  finalTimeout: DEFAULT_FINAL_TIMEOUT,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {;BrowserTracing.prototype.__init.call(this);\n    let tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n    // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n    if (_options) {\n      if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n        tracingOrigins = _options.tracingOrigins;\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && (this._emitOptionsWarning = true);\n      }\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n      tracingOrigins,\n    };\n\n    const { _metricOptions } = this.options;\n    startTrackingWebVitals(_metricOptions && _metricOptions._reportAllChanges);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    if (this._emitOptionsWarning) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          '[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n        );\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `[Tracing] We added a reasonable default for you: ${defaultRequestInstrumentationOptions.tracingOrigins}`,\n        );\n    }\n\n        const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracingOrigins,\n      shouldCreateSpanForRequest,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    instrumentOutgoingRequests({ traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n        const { beforeNavigate, idleTimeout, finalTimeout } = this.options;\n\n    var parentContextFromHeader = context.op === 'pageload' ? extractTraceDataFromMetaTags() : undefined;\n\n    var expandedContext = {\n      ...context,\n      ...parentContextFromHeader,\n      trimEnd: true,\n    };\n    var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    var finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    var hub = this._getCurrentHub();\n    const { location } = getGlobalObject() ;\n\n    var idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      addPerformanceEntries(transaction);\n      transaction.setTag(\n        'sentry_reportAllChanges',\n        Boolean(this.options._metricOptions && this.options._metricOptions._reportAllChanges),\n      );\n    });\n\n    return idleTransaction ;\n  }\n}\n\n/**\n * Gets transaction context data from `sentry-trace` and `baggage` <meta> tags.\n * @returns Transaction context data or undefined neither tag exists or has valid data\n */\nfunction extractTraceDataFromMetaTags() {\n  var sentrytraceValue = getMetaContent('sentry-trace');\n  var baggageValue = getMetaContent('baggage');\n\n  var sentrytraceData = sentrytraceValue ? extractTraceparentData(sentrytraceValue) : undefined;\n  var baggage = baggageValue ? parseBaggageString(baggageValue) : undefined;\n\n  // TODO more extensive checks for baggage validity/emptyness?\n  if (sentrytraceData || baggage) {\n    return {\n      ...(sentrytraceData && sentrytraceData),\n      ...(baggage && { metadata: { baggage } }),\n    };\n  }\n\n  return undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  var globalObject = getGlobalObject();\n\n  // DOM/querySelector is not available in all environments\n  if (globalObject.document && globalObject.document.querySelector) {\n    var el = globalObject.document.querySelector(`meta[name=${metaName}]`);\n    return el ? el.getAttribute('content') : null;\n  } else {\n    return null;\n  }\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, extractTraceDataFromMetaTags, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { addExtensionMethods } from './hubextensions.js';\nexport { addExtensionMethods, startIdleTransaction } from './hubextensions.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nimport './browser/index.js';\nexport { Span, spanStatusfromHttpCode } from './span.js';\nexport { SpanStatus } from './spanstatus.js';\nexport { Transaction } from './transaction.js';\nexport { IdleTransaction } from './idletransaction.js';\nexport { getActiveTransaction, hasTracingEnabled } from './utils.js';\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing } from './browser/browsertracing.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './browser/request.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n;\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n//# sourceMappingURL=index.js.map\n","import { getGlobalObject, stripUrlQueryAndFragment, fill } from '@sentry/utils';\nimport Router from 'next/router';\n\nvar global = getGlobalObject();\n\nvar DEFAULT_TAGS = {\n  'routing.instrumentation': 'next-router',\n} ;\n\nlet activeTransaction = undefined;\nlet prevTransactionName = undefined;\nlet startTransaction = undefined;\n\n/**\n * Creates routing instrumention for Next Router. Only supported for\n * client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction nextRouterInstrumentation(\n  startTransactionCb,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  startTransaction = startTransactionCb;\n  Router.ready(() => {\n    // We can only start the pageload transaction when we have access to the parameterized\n    // route name. Setting the transaction name after the transaction is started could lead\n    // to possible race conditions with the router, so this approach was taken.\n    if (startTransactionOnPageLoad) {\n      prevTransactionName = Router.route !== null ? stripUrlQueryAndFragment(Router.route) : global.location.pathname;\n      activeTransaction = startTransactionCb({\n        name: prevTransactionName,\n        op: 'pageload',\n        tags: DEFAULT_TAGS,\n      });\n    }\n\n    // Spans that aren't attached to any transaction are lost; so if transactions aren't\n    // created (besides potentially the onpageload transaction), no need to wrap the router.\n    if (!startTransactionOnLocationChange) return;\n\n    // `withRouter` uses `useRouter` underneath:\n    // https://github.com/vercel/next.js/blob/de42719619ae69fbd88e445100f15701f6e1e100/packages/next/client/with-router.tsx#L21\n    // Router events also use the router:\n    // https://github.com/vercel/next.js/blob/de42719619ae69fbd88e445100f15701f6e1e100/packages/next/client/router.ts#L92\n    // `Router.changeState` handles the router state changes, so it may be enough to only wrap it\n    // (instead of wrapping all of the Router's functions).\n    var routerPrototype = Object.getPrototypeOf(Router.router);\n    fill(routerPrototype, 'changeState', changeStateWrapper);\n  });\n}\n\n/**\n * Wraps Router.changeState()\n * https://github.com/vercel/next.js/blob/da97a18dafc7799e63aa7985adc95f213c2bf5f3/packages/next/next-server/lib/router/router.ts#L1204\n * Start a navigation transaction every time the router changes state.\n */\nfunction changeStateWrapper(originalChangeStateWrapper) {\n  var wrapper = function (\n    \n    method,\n    // The parameterized url, ex. posts/[id]/[comment]\n    url,\n    // The actual url, ex. posts/85/my-comment\n    as,\n    options,\n    // At the moment there are no additional arguments (meaning the rest parameter is empty).\n    // This is meant to protect from future additions to Next.js API, especially since this is an\n    // internal API.\n    ...args\n  ) {\n    var newTransactionName = stripUrlQueryAndFragment(url);\n    // do not start a transaction if it's from the same page\n    if (startTransaction !== undefined && prevTransactionName !== newTransactionName) {\n      if (activeTransaction) {\n        activeTransaction.finish();\n      }\n      var tags = {\n        ...DEFAULT_TAGS,\n        method,\n        ...options,\n      };\n      if (prevTransactionName) {\n        tags.from = prevTransactionName;\n      }\n      prevTransactionName = newTransactionName;\n      activeTransaction = startTransaction({\n        name: prevTransactionName,\n        op: 'navigation',\n        tags,\n      });\n    }\n    return originalChangeStateWrapper.call(this, method, url, as, options, ...args);\n  };\n  return wrapper;\n}\n\nexport { nextRouterInstrumentation };\n//# sourceMappingURL=client.js.map\n","import { SDK_VERSION } from '@sentry/core';\n\nvar PACKAGE_NAME_PREFIX = 'npm:@sentry/';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n * @param options sdk options object that gets mutated\n * @param names list of package names\n */\nfunction buildMetadata(options, names) {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk =\n    options._metadata.sdk ||\n    ({\n      name: 'sentry.javascript.nextjs',\n      packages: names.map(name => ({\n        name: `${PACKAGE_NAME_PREFIX}${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    } );\n}\n\nexport { buildMetadata };\n//# sourceMappingURL=metadata.js.map\n","/**\n * Recursively traverses an object to update an existing nested key.\n * Note: The provided key path must include existing properties,\n * the function will not create objects while traversing.\n *\n * @param obj An object to update\n * @param value The value to update the nested key with\n * @param keyPath The path to the key to update ex. fizz.buzz.foo\n */\nfunction setNestedKey(obj, keyPath, value) {\n  // Ex. foo.bar.zoop will extract foo and bar.zoop\n  var match = keyPath.match(/([a-z]+)\\.(.*)/i);\n  if (match === null) {\n    obj[keyPath] = value;\n  } else {\n    setNestedKey(obj[match[1]], match[2], value);\n  }\n}\n\n/**\n * Retrieves the patched integrations with the provided integration.\n *\n * The integration must be present in the final user integrations, and they are compared\n * by integration name. If the user has defined one, there's nothing to patch; if not,\n * the provided integration is added.\n *\n * @param integration The integration to patch, if necessary.\n * @param userIntegrations Integrations defined by the user.\n * @param options options to update for a particular integration\n * @returns Final integrations, patched if necessary.\n */\nfunction addIntegration(\n  integration,\n  userIntegrations,\n  options = {},\n) {\n  if (Array.isArray(userIntegrations)) {\n    return addIntegrationToArray(integration, userIntegrations, options);\n  } else {\n    return addIntegrationToFunction(integration, userIntegrations, options);\n  }\n}\n\nfunction addIntegrationToArray(\n  integration,\n  userIntegrations,\n  options,\n) {\n  let includesName = false;\n    for (let x = 0; x < userIntegrations.length; x++) {\n    if (userIntegrations[x].name === integration.name) {\n      includesName = true;\n    }\n\n    var op = options[userIntegrations[x].name];\n    if (op) {\n      setNestedKey(userIntegrations[x], op.keyPath, op.value);\n    }\n  }\n\n  if (includesName) {\n    return userIntegrations;\n  }\n  return [...userIntegrations, integration];\n}\n\nfunction addIntegrationToFunction(\n  integration,\n  userIntegrationsFunc,\n  options,\n) {\n  var wrapper = defaultIntegrations => {\n    var userFinalIntegrations = userIntegrationsFunc(defaultIntegrations);\n    return addIntegrationToArray(integration, userFinalIntegrations, options);\n  };\n  return wrapper;\n}\n\nexport { addIntegration };\n//# sourceMappingURL=userIntegrations.js.map\n","import { init as init$1, configureScope } from '@sentry/react';\nexport * from '@sentry/react';\nexport { Integrations } from '@sentry/react';\nimport { BrowserTracing, defaultRequestInstrumentationOptions } from '@sentry/tracing';\nexport { BrowserTracing } from '@sentry/tracing';\nimport { nextRouterInstrumentation } from './performance/client.js';\nexport { nextRouterInstrumentation } from './performance/client.js';\nimport { buildMetadata } from './utils/metadata.js';\nimport { addIntegration } from './utils/userIntegrations.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/** Inits the Sentry NextJS SDK on the browser with the React SDK. */\nfunction init(options) {\n  buildMetadata(options, ['nextjs', 'react']);\n  options.environment = options.environment || process.env.NODE_ENV;\n\n  let integrations = options.integrations;\n\n  // Guard below evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\"\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    // Only add BrowserTracing if a tracesSampleRate or tracesSampler is set\n    if (options.tracesSampleRate !== undefined || options.tracesSampler !== undefined) {\n      integrations = createClientIntegrations(options.integrations);\n    }\n  }\n\n  init$1({\n    ...options,\n    integrations,\n  });\n\n  configureScope(scope => {\n    scope.setTag('runtime', 'browser');\n    var filterTransactions = event =>\n      event.type === 'transaction' && event.transaction === '/404' ? null : event;\n    filterTransactions.id = 'NextClient404Filter';\n    scope.addEventProcessor(filterTransactions);\n  });\n}\n\nfunction createClientIntegrations(integrations) {\n  var defaultBrowserTracingIntegration = new BrowserTracing({\n    tracingOrigins: [...defaultRequestInstrumentationOptions.tracingOrigins, /^(api\\/)/],\n    routingInstrumentation: nextRouterInstrumentation,\n  });\n\n  if (integrations) {\n    return addIntegration(defaultBrowserTracingIntegration, integrations, {\n      BrowserTracing: { keyPath: 'options.routingInstrumentation', value: nextRouterInstrumentation },\n    });\n  } else {\n    return [defaultBrowserTracingIntegration];\n  }\n}\n\nexport { init };\n//# sourceMappingURL=index.client.js.map\n","// This file configures the initialization of Sentry on the browser.\n// The config you add here will be used whenever a page is visited.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from '@sentry/nextjs';\n\nconst SENTRY_DSN = process.env.SENTRY_DSN || process.env.NEXT_PUBLIC_SENTRY_DSN;\n\nSentry.init({\n  dsn: process.env.NODE_ENV === 'production' ? SENTRY_DSN : false,\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1.0,\n  // ...\n  // Note: if you want to override the automatic release value, do not set a\n  // `release` value here - use the environment variable `SENTRY_RELEASE`, so\n  // that it will also get attached to your source maps\n});\n","// extracted by mini-css-extract-plugin","(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();","module.exports = require('./dist/shared/lib/head')\n","module.exports = require('./dist/client/router')\n","export { CancelledError } from './retryer';\nexport { QueryCache } from './queryCache';\nexport { QueryClient } from './queryClient';\nexport { QueryObserver } from './queryObserver';\nexport { QueriesObserver } from './queriesObserver';\nexport { InfiniteQueryObserver } from './infiniteQueryObserver';\nexport { MutationCache } from './mutationCache';\nexport { MutationObserver } from './mutationObserver';\nexport { setLogger } from './logger';\nexport { notifyManager } from './notifyManager';\nexport { focusManager } from './focusManager';\nexport { onlineManager } from './onlineManager';\nexport { hashQueryKey, isError } from './utils';\nexport { isCancelledError } from './retryer';\nexport { dehydrate, hydrate } from './hydration'; // Types\n\nexport * from './types';","import { noop } from './utils'; // TYPES\n\n// FUNCTIONS\nvar logger = console || {\n  error: noop,\n  warn: noop,\n  log: noop\n};\nexport function getLogger() {\n  return logger;\n}\nexport function setLogger(newLogger) {\n  logger = newLogger;\n}","import { scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nvar NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      scheduleMicrotask(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\n\nexport var notifyManager = new NotifyManager();","export var Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    this.listeners = [];\n  }\n\n  var _proto = Subscribable.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    var callback = listener || function () {\n      return undefined;\n    };\n\n    this.listeners.push(callback);\n    this.onSubscribe();\n    return function () {\n      _this.listeners = _this.listeners.filter(function (x) {\n        return x !== callback;\n      });\n\n      _this.onUnsubscribe();\n    };\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return this.listeners.length > 0;\n  };\n\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\n  };\n\n  return Subscribable;\n}();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\n\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this.setFocused(focused);\n      } else {\n        _this.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onFocus) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      });\n    }\n  };\n\n  return FocusManager;\n}(Subscribable);\n\nexport var focusManager = new FocusManager();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\n\nvar OnlineManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(OnlineManager, _Subscribable);\n\n  function OnlineManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = OnlineManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (online) {\n      if (typeof online === 'boolean') {\n        _this.setOnline(online);\n      } else {\n        _this.onOnline();\n      }\n    });\n  };\n\n  _proto.setOnline = function setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isOnline = function isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onOnline) {\n        var listener = function listener() {\n          return onOnline();\n        }; // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      });\n    }\n  };\n\n  return OnlineManager;\n}(Subscribable);\n\nexport var onlineManager = new OnlineManager();","import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { sleep } from './utils';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.abort = config.abort;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  var reject = function reject(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      if (!_this.isResolved) {\n        reject(new CancelledError(cancelOptions));\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\n\n        if (isCancelable(promiseOrValue)) {\n          try {\n            promiseOrValue.cancel();\n          } catch (_unused) {}\n        }\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getAbortController, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale, ensureQueryKeyArray } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n\n// CLASS\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options);\n    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    clearTimeout(this.gcTimeout);\n    this.gcTimeout = undefined;\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length && !this.state.isFetching) {\n      this.cache.remove(this);\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.getObserversCount = function getObserversCount() {\n    return this.observers.length;\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions,\n        _abortController$abor;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        // Return current promise if we are already fetching\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    var queryKey = ensureQueryKeyArray(this.queryKey);\n    var abortController = getAbortController(); // Create query function context\n\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    };\n    Object.defineProperty(queryFnContext, 'signal', {\n      enumerable: true,\n      get: function get() {\n        if (abortController) {\n          _this2.abortSignalConsumed = true;\n          return abortController.signal;\n        }\n\n        return undefined;\n      }\n    }); // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      if (!_this2.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      _this2.abortSignalConsumed = false;\n      return _this2.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn,\n      meta: this.meta\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Notify cache callback\n\n\n        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error\n\n          getLogger().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false,\n          status: !state.dataUpdatedAt ? 'loading' : state.status\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return _extends({}, this.revertState);\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var QueryCache = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryCache, _Subscribable);\n\n  function QueryCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.queries = [];\n    _this.queriesMap = {};\n    return _this;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var _options$queryHash;\n\n    var queryKey = options.queryKey;\n    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    var query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey: queryKey,\n        queryHash: queryHash,\n        options: client.defaultQueryOptions(options),\n        state: state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n        meta: options.meta\n      });\n      this.add(query);\n    }\n\n    return query;\n  };\n\n  _proto.add = function add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'queryAdded',\n        query: query\n      });\n    }\n  };\n\n  _proto.remove = function remove(query) {\n    var queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(function (x) {\n        return x !== query;\n      });\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'queryRemoved',\n        query: query\n      });\n    }\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      _this2.queries.forEach(function (query) {\n        _this2.remove(query);\n      });\n    });\n  };\n\n  _proto.get = function get(queryHash) {\n    return this.queriesMap[queryHash];\n  };\n\n  _proto.getAll = function getAll() {\n    return this.queries;\n  };\n\n  _proto.find = function find(arg1, arg2) {\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(function (query) {\n      return matchQuery(filters, query);\n    });\n  };\n\n  _proto.findAll = function findAll(arg1, arg2) {\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    return filters ? this.queries.filter(function (query) {\n      return matchQuery(filters, query);\n    }) : this.queries;\n  };\n\n  _proto.notify = function notify(event) {\n    var _this3 = this;\n\n    notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(event);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      _this4.queries.forEach(function (query) {\n        query.onFocus();\n      });\n    });\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.queries.forEach(function (query) {\n        query.onOnline();\n      });\n    });\n  };\n\n  return QueryCache;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getLogger } from './logger';\nimport { notifyManager } from './notifyManager';\nimport { Retryer } from './retryer';\nimport { noop } from './utils'; // TYPES\n\n// CLASS\nexport var Mutation = /*#__PURE__*/function () {\n  function Mutation(config) {\n    this.options = _extends({}, config.defaultOptions, config.options);\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n  }\n\n  var _proto = Mutation.prototype;\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n  };\n\n  _proto.cancel = function cancel() {\n    if (this.retryer) {\n      this.retryer.cancel();\n      return this.retryer.promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.continue = function _continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  };\n\n  _proto.execute = function execute() {\n    var _this = this;\n\n    var data;\n    var restored = this.state.status === 'loading';\n    var promise = Promise.resolve();\n\n    if (!restored) {\n      this.dispatch({\n        type: 'loading',\n        variables: this.options.variables\n      });\n      promise = promise.then(function () {\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\n      }).then(function (context) {\n        if (context !== _this.state.context) {\n          _this.dispatch({\n            type: 'loading',\n            context: context,\n            variables: _this.state.variables\n          });\n        }\n      });\n    }\n\n    return promise.then(function () {\n      return _this.executeMutation();\n    }).then(function (result) {\n      data = result; // Notify cache callback\n\n      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);\n    }).then(function () {\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\n    }).then(function () {\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\n    }).then(function () {\n      _this.dispatch({\n        type: 'success',\n        data: data\n      });\n\n      return data;\n    }).catch(function (error) {\n      // Notify cache callback\n      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this); // Log error\n\n      getLogger().error(error);\n      return Promise.resolve().then(function () {\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        _this.dispatch({\n          type: 'error',\n          error: error\n        });\n\n        throw error;\n      });\n    });\n  };\n\n  _proto.executeMutation = function executeMutation() {\n    var _this2 = this,\n        _this$options$retry;\n\n    this.retryer = new Retryer({\n      fn: function fn() {\n        if (!_this2.options.mutationFn) {\n          return Promise.reject('No mutationFn found');\n        }\n\n        return _this2.options.mutationFn(_this2.state.variables);\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n      retryDelay: this.options.retryDelay\n    });\n    return this.retryer.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onMutationUpdate(action);\n      });\n\n      _this3.mutationCache.notify(_this3);\n    });\n  };\n\n  return Mutation;\n}();\nexport function getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'failed':\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case 'pause':\n      return _extends({}, state, {\n        isPaused: true\n      });\n\n    case 'continue':\n      return _extends({}, state, {\n        isPaused: false\n      });\n\n    case 'loading':\n      return _extends({}, state, {\n        context: action.context,\n        data: undefined,\n        error: null,\n        isPaused: false,\n        status: 'loading',\n        variables: action.variables\n      });\n\n    case 'success':\n      return _extends({}, state, {\n        data: action.data,\n        error: null,\n        status: 'success',\n        isPaused: false\n      });\n\n    case 'error':\n      return _extends({}, state, {\n        data: undefined,\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isPaused: false,\n        status: 'error'\n      });\n\n    case 'setState':\n      return _extends({}, state, action.state);\n\n    default:\n      return state;\n  }\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { notifyManager } from './notifyManager';\nimport { Mutation } from './mutation';\nimport { matchMutation, noop } from './utils';\nimport { Subscribable } from './subscribable'; // TYPES\n\n// CLASS\nexport var MutationCache = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationCache, _Subscribable);\n\n  function MutationCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n\n  var _proto = MutationCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state: state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  };\n\n  _proto.add = function add(mutation) {\n    this.mutations.push(mutation);\n    this.notify(mutation);\n  };\n\n  _proto.remove = function remove(mutation) {\n    this.mutations = this.mutations.filter(function (x) {\n      return x !== mutation;\n    });\n    mutation.cancel();\n    this.notify(mutation);\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      _this2.mutations.forEach(function (mutation) {\n        _this2.remove(mutation);\n      });\n    });\n  };\n\n  _proto.getAll = function getAll() {\n    return this.mutations;\n  };\n\n  _proto.find = function find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(function (mutation) {\n      return matchMutation(filters, mutation);\n    });\n  };\n\n  _proto.findAll = function findAll(filters) {\n    return this.mutations.filter(function (mutation) {\n      return matchMutation(filters, mutation);\n    });\n  };\n\n  _proto.notify = function notify(mutation) {\n    var _this3 = this;\n\n    notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(mutation);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.resumePausedMutations();\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.resumePausedMutations();\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    var pausedMutations = this.mutations.filter(function (x) {\n      return x.state.isPaused;\n    });\n    return notifyManager.batch(function () {\n      return pausedMutations.reduce(function (promise, mutation) {\n        return promise.then(function () {\n          return mutation.continue().catch(noop);\n        });\n      }, Promise.resolve());\n    });\n  };\n\n  return MutationCache;\n}(Subscribable);","import { isCancelable } from './retryer';\nimport { getAbortController } from './utils';\nexport function infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        var refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        var fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var abortController = getAbortController();\n        var abortSignal = abortController == null ? void 0 : abortController.signal;\n        var newPageParams = oldPageParams;\n        var cancelled = false; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        };\n\n        var buildNewPages = function buildNewPages(pages, param, page, previous) {\n          newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n          return previous ? [page].concat(pages) : [].concat(pages, [page]);\n        }; // Create function to fetch a page\n\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            signal: abortSignal,\n            pageParam: param,\n            meta: context.meta\n          };\n          var queryFnResult = queryFn(queryFnContext);\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            return buildNewPages(pages, param, page, previous);\n          });\n\n          if (isCancelable(queryFnResult)) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = queryFnResult.cancel;\n          }\n\n          return promise;\n        };\n\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n            var manual = typeof pageParam !== 'undefined';\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n            promise = fetchPage(oldPages, manual, param);\n          } // Fetch previous page?\n          else if (isFetchingPreviousPage) {\n              var _manual = typeof pageParam !== 'undefined';\n\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n\n              promise = fetchPage(oldPages, _manual, _param, true);\n            } // Refetch pages\n            else {\n                (function () {\n                  newPageParams = [];\n                  var manual = typeof context.options.getNextPageParam === 'undefined';\n                  var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n                  promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n                  var _loop = function _loop(i) {\n                    promise = promise.then(function (pages) {\n                      var shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n                      if (shouldFetchNextPage) {\n                        var _param2 = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n\n                        return fetchPage(pages, manual, _param2);\n                      }\n\n                      return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n                    });\n                  };\n\n                  for (var i = 1; i < oldPages.length; i++) {\n                    _loop(i);\n                  }\n                })();\n              }\n\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n        var finalPromiseAsAny = finalPromise;\n\n        finalPromiseAsAny.cancel = function () {\n          cancelled = true;\n          abortController == null ? void 0 : abortController.abort();\n\n          if (isCancelable(promise)) {\n            promise.cancel();\n          }\n        };\n\n        return finalPromise;\n      };\n    }\n  };\n}\nexport function getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { hashQueryKey, noop, parseFilterArgs, parseQueryArgs, partialMatchKey, hashQueryKeyByOptions } from './utils';\nimport { QueryCache } from './queryCache';\nimport { MutationCache } from './mutationCache';\nimport { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { notifyManager } from './notifyManager';\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior';\n// CLASS\nexport var QueryClient = /*#__PURE__*/function () {\n  function QueryClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n  }\n\n  var _proto = QueryClient.prototype;\n\n  _proto.mount = function mount() {\n    var _this = this;\n\n    this.unsubscribeFocus = focusManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onFocus();\n\n        _this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onOnline();\n\n        _this.queryCache.onOnline();\n      }\n    });\n  };\n\n  _proto.unmount = function unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n  };\n\n  _proto.isFetching = function isFetching(arg1, arg2) {\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    filters.fetching = true;\n    return this.queryCache.findAll(filters).length;\n  };\n\n  _proto.isMutating = function isMutating(filters) {\n    return this.mutationCache.findAll(_extends({}, filters, {\n      fetching: true\n    })).length;\n  };\n\n  _proto.getQueryData = function getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  };\n\n  _proto.getQueriesData = function getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref) {\n      var queryKey = _ref.queryKey,\n          state = _ref.state;\n      var data = state.data;\n      return [queryKey, data];\n    });\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, options) {\n    var parsedOptions = parseQueryArgs(queryKey);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(updater, options);\n  };\n\n  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {\n    var _this2 = this;\n\n    return notifyManager.batch(function () {\n      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref2) {\n        var queryKey = _ref2.queryKey;\n        return [queryKey, _this2.setQueryData(queryKey, updater, options)];\n      });\n    });\n  };\n\n  _proto.getQueryState = function getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  };\n\n  _proto.removeQueries = function removeQueries(arg1, arg2) {\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    var queryCache = this.queryCache;\n    notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        queryCache.remove(query);\n      });\n    });\n  };\n\n  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {\n    var _this3 = this;\n\n    var _parseFilterArgs3 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs3[0],\n        options = _parseFilterArgs3[1];\n\n    var queryCache = this.queryCache;\n\n    var refetchFilters = _extends({}, filters, {\n      active: true\n    });\n\n    return notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        query.reset();\n      });\n      return _this3.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {\n    var _this4 = this;\n\n    var _parseFilterArgs4 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs4[0],\n        _parseFilterArgs4$ = _parseFilterArgs4[1],\n        cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    var promises = notifyManager.batch(function () {\n      return _this4.queryCache.findAll(filters).map(function (query) {\n        return query.cancel(cancelOptions);\n      });\n    });\n    return Promise.all(promises).then(noop).catch(noop);\n  };\n\n  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {\n    var _ref3,\n        _filters$refetchActiv,\n        _filters$refetchInact,\n        _this5 = this;\n\n    var _parseFilterArgs5 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs5[0],\n        options = _parseFilterArgs5[1];\n\n    var refetchFilters = _extends({}, filters, {\n      // if filters.refetchActive is not provided and filters.active is explicitly false,\n      // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries\n      active: (_ref3 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref3 : true,\n      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false\n    });\n\n    return notifyManager.batch(function () {\n      _this5.queryCache.findAll(filters).forEach(function (query) {\n        query.invalidate();\n      });\n\n      return _this5.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {\n    var _this6 = this;\n\n    var _parseFilterArgs6 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs6[0],\n        options = _parseFilterArgs6[1];\n\n    var promises = notifyManager.batch(function () {\n      return _this6.queryCache.findAll(filters).map(function (query) {\n        return query.fetch(undefined, _extends({}, options, {\n          meta: {\n            refetchPage: filters == null ? void 0 : filters.refetchPage\n          }\n        }));\n      });\n    });\n    var promise = Promise.all(promises).then(noop);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    var query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  };\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  };\n\n  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  };\n\n  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  };\n\n  _proto.cancelMutations = function cancelMutations() {\n    var _this7 = this;\n\n    var promises = notifyManager.batch(function () {\n      return _this7.mutationCache.getAll().map(function (mutation) {\n        return mutation.cancel();\n      });\n    });\n    return Promise.all(promises).then(noop).catch(noop);\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    return this.getMutationCache().resumePausedMutations();\n  };\n\n  _proto.executeMutation = function executeMutation(options) {\n    return this.mutationCache.build(this, options).execute();\n  };\n\n  _proto.getQueryCache = function getQueryCache() {\n    return this.queryCache;\n  };\n\n  _proto.getMutationCache = function getMutationCache() {\n    return this.mutationCache;\n  };\n\n  _proto.getDefaultOptions = function getDefaultOptions() {\n    return this.defaultOptions;\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {\n    var result = this.queryDefaults.find(function (x) {\n      return hashQueryKey(queryKey) === hashQueryKey(x.queryKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey: queryKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {\n    var _this$queryDefaults$f;\n\n    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {\n      return partialMatchKey(queryKey, x.queryKey);\n    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;\n  };\n\n  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {\n    var result = this.mutationDefaults.find(function (x) {\n      return hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey: mutationKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {\n    var _this$mutationDefault;\n\n    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {\n      return partialMatchKey(mutationKey, x.mutationKey);\n    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;\n  };\n\n  _proto.defaultQueryOptions = function defaultQueryOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    var defaultedOptions = _extends({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {\n      _defaulted: true\n    });\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    }\n\n    return defaultedOptions;\n  };\n\n  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {\n    return this.defaultQueryOptions(options);\n  };\n\n  _proto.defaultMutationOptions = function defaultMutationOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    return _extends({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {\n      _defaulted: true\n    });\n  };\n\n  _proto.clear = function clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  };\n\n  return QueryClient;\n}();",null,"import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TYPES\n// UTILS\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nexport function replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return _extends({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return _extends({}, arg2, {\n    queryKey: arg1\n  });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nexport function parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? _extends({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nexport function mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nexport function matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nexport function hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nexport function stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nexport function getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}","export * from './core';\nexport * from './react';","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import { notifyManager } from '../core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);","export var logger = console;","import { setLogger } from '../core';\nimport { logger } from './logger';\nsetLogger(logger);","import React from 'react';\nvar defaultContext = /*#__PURE__*/React.createContext(undefined);\nvar QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(contextSharing) {\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nexport var useQueryClient = function useQueryClient() {\n  var queryClient = React.useContext(getQueryClientContext(React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nexport var QueryClientProvider = function QueryClientProvider(_ref) {\n  var client = _ref.client,\n      _ref$contextSharing = _ref.contextSharing,\n      contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,\n      children = _ref.children;\n  React.useEffect(function () {\n    client.mount();\n    return function () {\n      client.unmount();\n    };\n  }, [client]);\n  var Context = getQueryClientContext(contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n// TYPES\n// FUNCTIONS\nfunction dehydrateMutation(mutation) {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state\n  };\n} // Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\n\n\nfunction dehydrateQuery(query) {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash\n  };\n}\n\nfunction defaultShouldDehydrateMutation(mutation) {\n  return mutation.state.isPaused;\n}\n\nfunction defaultShouldDehydrateQuery(query) {\n  return query.state.status === 'success';\n}\n\nexport function dehydrate(client, options) {\n  var _options, _options2;\n\n  options = options || {};\n  var mutations = [];\n  var queries = [];\n\n  if (((_options = options) == null ? void 0 : _options.dehydrateMutations) !== false) {\n    var shouldDehydrateMutation = options.shouldDehydrateMutation || defaultShouldDehydrateMutation;\n    client.getMutationCache().getAll().forEach(function (mutation) {\n      if (shouldDehydrateMutation(mutation)) {\n        mutations.push(dehydrateMutation(mutation));\n      }\n    });\n  }\n\n  if (((_options2 = options) == null ? void 0 : _options2.dehydrateQueries) !== false) {\n    var shouldDehydrateQuery = options.shouldDehydrateQuery || defaultShouldDehydrateQuery;\n    client.getQueryCache().getAll().forEach(function (query) {\n      if (shouldDehydrateQuery(query)) {\n        queries.push(dehydrateQuery(query));\n      }\n    });\n  }\n\n  return {\n    mutations: mutations,\n    queries: queries\n  };\n}\nexport function hydrate(client, dehydratedState, options) {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return;\n  }\n\n  var mutationCache = client.getMutationCache();\n  var queryCache = client.getQueryCache();\n  var mutations = dehydratedState.mutations || [];\n  var queries = dehydratedState.queries || [];\n  mutations.forEach(function (dehydratedMutation) {\n    var _options$defaultOptio;\n\n    mutationCache.build(client, _extends({}, options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations, {\n      mutationKey: dehydratedMutation.mutationKey\n    }), dehydratedMutation.state);\n  });\n  queries.forEach(function (dehydratedQuery) {\n    var _options$defaultOptio2;\n\n    var query = queryCache.get(dehydratedQuery.queryHash); // Do not hydrate if an existing query exists with newer data\n\n    if (query) {\n      if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) {\n        query.setState(dehydratedQuery.state);\n      }\n\n      return;\n    } // Restore query\n\n\n    queryCache.build(client, _extends({}, options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries, {\n      queryKey: dehydratedQuery.queryKey,\n      queryHash: dehydratedQuery.queryHash\n    }), dehydratedQuery.state);\n  });\n}","import React from 'react';\nimport { hydrate } from '../core';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useHydrate(state, options) {\n  var queryClient = useQueryClient();\n  var optionsRef = React.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React.useMemo(function () {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nexport var Hydrate = function Hydrate(_ref) {\n  var children = _ref.children,\n      options = _ref.options,\n      state = _ref.state;\n  useHydrate(state, options);\n  return children;\n};","// Side effects\nimport './setBatchUpdatesFn';\nimport './setLogger';\nexport { QueryClientProvider, useQueryClient } from './QueryClientProvider';\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nexport { useIsFetching } from './useIsFetching';\nexport { useIsMutating } from './useIsMutating';\nexport { useMutation } from './useMutation';\nexport { useQuery } from './useQuery';\nexport { useQueries } from './useQueries';\nexport { useInfiniteQuery } from './useInfiniteQuery';\nexport { useHydrate, Hydrate } from './Hydrate'; // Types\n\nexport * from './types';","import react from 'react';\nimport reactDom from 'react-dom';\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction err(message) {\n  const error = new Error(message); // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_) {} // eslint-disable-line fb-www/no-unused-catch-bindings, no-empty\n\n  }\n\n  return error;\n}\n\nvar err_1 = err;\n\n// @oss-only\n\n\nvar Recoil_err = err_1;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n// Split declaration and implementation to allow this function to pretend to\n// check for actual instance of Promise instead of something with a `then`\n// method.\n// eslint-disable-next-line no-redeclare\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nvar Recoil_isPromise = isPromise;\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n\n  throw Recoil_err(message !== null && message !== void 0 ? message : 'Got unexpected null or undefined');\n}\n\nvar Recoil_nullthrows = nullthrows;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass BaseLoadable {\n  getValue() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  toPromise() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  valueMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  valueOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected value, but in \"${this.state}\" state`);\n  }\n\n  promiseMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  promiseOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected promise, but in \"${this.state}\" state`);\n  }\n\n  errorMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  errorOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected error, but in \"${this.state}\" state`);\n  }\n\n  is(other) {\n    // $FlowFixMe[prop-missing]\n    return other.state === this.state && other.contents === this.contents;\n  }\n\n  map(_map) {\n    throw Recoil_err('BaseLoadable');\n  }\n\n}\n\nclass ValueLoadable extends BaseLoadable {\n  constructor(value) {\n    super();\n\n    _defineProperty(this, \"state\", 'hasValue');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = value;\n  }\n\n  getValue() {\n    return this.contents;\n  }\n\n  toPromise() {\n    return Promise.resolve(this.contents);\n  }\n\n  valueMaybe() {\n    return this.contents;\n  }\n\n  valueOrThrow() {\n    return this.contents;\n  }\n\n  promiseMaybe() {\n    return undefined;\n  }\n\n  errorMaybe() {\n    return undefined;\n  }\n\n  map(map) {\n    try {\n      const next = map(this.contents);\n      return Recoil_isPromise(next) ? loadableWithPromise(next) : isLoadable(next) ? next : loadableWithValue(next);\n    } catch (e) {\n      return Recoil_isPromise(e) ? // If we \"suspended\", then try again.\n      // errors and subsequent retries will be handled in 'loading' case\n      loadableWithPromise(e.next(() => this.map(map))) : loadableWithError(e);\n    }\n  }\n\n}\n\nclass ErrorLoadable extends BaseLoadable {\n  constructor(error) {\n    super();\n\n    _defineProperty(this, \"state\", 'hasError');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = error;\n  }\n\n  getValue() {\n    throw this.contents;\n  }\n\n  toPromise() {\n    return Promise.reject(this.contents);\n  }\n\n  valueMaybe() {\n    return undefined;\n  }\n\n  promiseMaybe() {\n    return undefined;\n  }\n\n  errorMaybe() {\n    return this.contents;\n  }\n\n  errorOrThrow() {\n    return this.contents;\n  }\n\n  map(_map) {\n    // $FlowIssue[incompatible-return]\n    return this;\n  }\n\n}\n\nclass LoadingLoadable extends BaseLoadable {\n  constructor(promise) {\n    super();\n\n    _defineProperty(this, \"state\", 'loading');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = promise;\n  }\n\n  getValue() {\n    throw this.contents;\n  }\n\n  toPromise() {\n    return this.contents;\n  }\n\n  valueMaybe() {\n    return undefined;\n  }\n\n  promiseMaybe() {\n    return this.contents;\n  }\n\n  promiseOrThrow() {\n    return this.contents;\n  }\n\n  errorMaybe() {\n    return undefined;\n  }\n\n  map(map) {\n    return loadableWithPromise(this.contents.then(value => {\n      const next = map(value);\n\n      if (isLoadable(next)) {\n        const nextLoadable = next;\n\n        switch (nextLoadable.state) {\n          case 'hasValue':\n            return nextLoadable.contents;\n\n          case 'hasError':\n            throw nextLoadable.contents;\n\n          case 'loading':\n            return nextLoadable.contents;\n        }\n      } // $FlowIssue[incompatible-return]\n\n\n      return next;\n    }).catch(e => {\n      if (Recoil_isPromise(e)) {\n        // we were \"suspended,\" try again\n        return e.then(() => this.map(map).contents);\n      }\n\n      throw e;\n    }));\n  }\n\n}\n\nfunction loadableWithValue(value) {\n  return Object.freeze(new ValueLoadable(value));\n}\n\nfunction loadableWithError(error) {\n  return Object.freeze(new ErrorLoadable(error));\n}\n\nfunction loadableWithPromise(promise) {\n  return Object.freeze(new LoadingLoadable(promise));\n}\n\nfunction loadableLoading() {\n  return Object.freeze(new LoadingLoadable(new Promise(() => {})));\n}\n\nfunction loadableAllArray(inputs) {\n  return inputs.every(i => i.state === 'hasValue') ? loadableWithValue(inputs.map(i => i.contents)) : inputs.some(i => i.state === 'hasError') ? loadableWithError(Recoil_nullthrows(inputs.find(i => i.state === 'hasError'), 'Invalid loadable passed to loadableAll').contents) : loadableWithPromise(Promise.all(inputs.map(i => i.contents)));\n}\n\nfunction loadableAll(inputs) {\n  const unwrapedInputs = Array.isArray(inputs) ? inputs : Object.getOwnPropertyNames(inputs).map(key => inputs[key]);\n  const normalizedInputs = unwrapedInputs.map(x => isLoadable(x) ? x : Recoil_isPromise(x) ? loadableWithPromise(x) : loadableWithValue(x));\n  const output = loadableAllArray(normalizedInputs);\n  return Array.isArray(inputs) ? // $FlowIssue[incompatible-return]\n  output : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  // $FlowIssue[incompatible-call]\n  output.map(outputs => Object.getOwnPropertyNames(inputs).reduce((out, key, idx) => ({ ...out,\n    [key]: outputs[idx]\n  }), {}));\n}\n\nfunction isLoadable(x) {\n  return x instanceof BaseLoadable;\n}\n\nconst LoadableStaticInterface = {\n  of: value => Recoil_isPromise(value) ? loadableWithPromise(value) : isLoadable(value) ? value : loadableWithValue(value),\n  error: error => loadableWithError(error),\n  // $FlowIssue[unclear-type]\n  all: loadableAll,\n  isLoadable\n};\nvar Recoil_Loadable = {\n  loadableWithValue,\n  loadableWithError,\n  loadableWithPromise,\n  loadableLoading,\n  loadableAll,\n  isLoadable,\n  RecoilLoadable: LoadableStaticInterface\n};\n\nvar Recoil_Loadable_1 = Recoil_Loadable.loadableWithValue;\nvar Recoil_Loadable_2 = Recoil_Loadable.loadableWithError;\nvar Recoil_Loadable_3 = Recoil_Loadable.loadableWithPromise;\nvar Recoil_Loadable_4 = Recoil_Loadable.loadableLoading;\nvar Recoil_Loadable_5 = Recoil_Loadable.loadableAll;\nvar Recoil_Loadable_6 = Recoil_Loadable.isLoadable;\nvar Recoil_Loadable_7 = Recoil_Loadable.RecoilLoadable;\n\nvar Recoil_Loadable$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  loadableWithValue: Recoil_Loadable_1,\n  loadableWithError: Recoil_Loadable_2,\n  loadableWithPromise: Recoil_Loadable_3,\n  loadableLoading: Recoil_Loadable_4,\n  loadableAll: Recoil_Loadable_5,\n  isLoadable: Recoil_Loadable_6,\n  RecoilLoadable: Recoil_Loadable_7\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n// eslint-disable-next-line no-unused-vars\nclass AbstractRecoilValue {\n  constructor(newKey) {\n    _defineProperty(this, \"key\", void 0);\n\n    this.key = newKey;\n  }\n\n}\n\nclass RecoilState extends AbstractRecoilValue {}\n\nclass RecoilValueReadOnly extends AbstractRecoilValue {}\n\nfunction isRecoilValue(x) {\n  return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n}\n\nvar Recoil_RecoilValue = {\n  AbstractRecoilValue,\n  RecoilState,\n  RecoilValueReadOnly,\n  isRecoilValue\n};\n\nvar Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;\nvar Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;\nvar Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;\nvar Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\n\nvar Recoil_RecoilValue$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AbstractRecoilValue: Recoil_RecoilValue_1,\n  RecoilState: Recoil_RecoilValue_2,\n  RecoilValueReadOnly: Recoil_RecoilValue_3,\n  isRecoilValue: Recoil_RecoilValue_4\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction sprintf(format, ...args) {\n  let index = 0;\n  return format.replace(/%s/g, () => String(args[index++]));\n}\n\nvar sprintf_1 = sprintf;\n\nfunction expectationViolation(format, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const message = sprintf_1.call(null, format, ...args);\n    const error = new Error(message);\n    error.name = 'Expectation Violation';\n    console.error(error);\n  }\n}\n\nvar expectationViolation_1 = expectationViolation;\n\n// @oss-only\n\n\nvar Recoil_expectationViolation = expectationViolation_1;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nconst gks = new Map().set('recoil_hamt_2020', true).set('recoil_sync_external_store', true).set('recoil_suppress_rerender_in_callback', true).set('recoil_memory_managament_2020', true);\n\nfunction Recoil_gkx_OSS(gk) {\n  var _gks$get;\n\n  return (_gks$get = gks.get(gk)) !== null && _gks$get !== void 0 ? _gks$get : false;\n}\n\nRecoil_gkx_OSS.setPass = gk => {\n  gks.set(gk, true);\n};\n\nRecoil_gkx_OSS.setFail = gk => {\n  gks.set(gk, false);\n};\n\nRecoil_gkx_OSS.clear = () => {\n  gks.clear();\n};\n\nvar Recoil_gkx = Recoil_gkx_OSS; // @oss-only\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the mapper function.\n */\n\nfunction mapIterable(iterable, callback) {\n  // Use generator to create iterable/iterator\n  return function* () {\n    let index = 0;\n\n    for (const value of iterable) {\n      yield callback(value, index++);\n    }\n  }();\n}\n\nvar Recoil_mapIterable = mapIterable;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction recoverableViolation(message, projectName, {\n  error\n} = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(message, error);\n  }\n\n  return null;\n}\n\nvar recoverableViolation_1 = recoverableViolation;\n\n// @oss-only\n\n\nvar Recoil_recoverableViolation = recoverableViolation_1;\n\nclass DefaultValue {}\n\nconst DEFAULT_VALUE = new DefaultValue();\n\nclass RecoilValueNotReady extends Error {\n  constructor(key) {\n    super(`Tried to set the value of Recoil selector ${key} using an updater function, but it is an async selector in a pending or error state; this is not supported.`);\n  }\n\n}\n\n// flowlint-next-line unclear-type:off\nconst nodes = new Map(); // flowlint-next-line unclear-type:off\n\nconst recoilValues = new Map();\n/* eslint-disable no-redeclare */\n\nfunction recoilValuesForKeys(keys) {\n  return Recoil_mapIterable(keys, key => Recoil_nullthrows(recoilValues.get(key)));\n}\n\nfunction registerNode(node) {\n  if (nodes.has(node.key)) {\n    const message = `Duplicate atom key \"${node.key}\". This is a FATAL ERROR in\n      production. But it is safe to ignore this warning if it occurred because of\n      hot module replacement.`; // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:\n    // prettier-ignore\n    // @fb-only: if (__DEV__) {\n    // @fb-only: const isAcceptingUpdate = require('__debug').isAcceptingUpdate;\n    // prettier-ignore\n    // @fb-only: if (typeof isAcceptingUpdate !== 'function' || !isAcceptingUpdate()) {\n    // @fb-only: expectationViolation(message, 'recoil');\n    // @fb-only: }\n    // prettier-ignore\n    // @fb-only: } else {\n    // @fb-only: recoverableViolation(message, 'recoil');\n    // @fb-only: }\n\n    console.warn(message); // @oss-only\n  }\n\n  nodes.set(node.key, node);\n  const recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);\n  recoilValues.set(node.key, recoilValue);\n  return recoilValue;\n}\n/* eslint-enable no-redeclare */\n\n\nclass NodeMissingError extends Error {} // flowlint-next-line unclear-type:off\n\n\nfunction getNode(key) {\n  const node = nodes.get(key);\n\n  if (node == null) {\n    throw new NodeMissingError(`Missing definition for RecoilValue: \"${key}\"\"`);\n  }\n\n  return node;\n} // flowlint-next-line unclear-type:off\n\n\nfunction getNodeMaybe(key) {\n  return nodes.get(key);\n}\n\nconst configDeletionHandlers = new Map();\n\nfunction deleteNodeConfigIfPossible(key) {\n  var _node$shouldDeleteCon;\n\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const node = nodes.get(key);\n\n  if (node !== null && node !== void 0 && (_node$shouldDeleteCon = node.shouldDeleteConfigOnRelease) !== null && _node$shouldDeleteCon !== void 0 && _node$shouldDeleteCon.call(node)) {\n    var _getConfigDeletionHan;\n\n    nodes.delete(key);\n    (_getConfigDeletionHan = getConfigDeletionHandler(key)) === null || _getConfigDeletionHan === void 0 ? void 0 : _getConfigDeletionHan();\n    configDeletionHandlers.delete(key);\n  }\n}\n\nfunction setConfigDeletionHandler(key, fn) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  if (fn === undefined) {\n    configDeletionHandlers.delete(key);\n  } else {\n    configDeletionHandlers.set(key, fn);\n  }\n}\n\nfunction getConfigDeletionHandler(key) {\n  return configDeletionHandlers.get(key);\n}\n\nvar Recoil_Node = {\n  nodes,\n  recoilValues,\n  registerNode,\n  getNode,\n  getNodeMaybe,\n  deleteNodeConfigIfPossible,\n  setConfigDeletionHandler,\n  getConfigDeletionHandler,\n  recoilValuesForKeys,\n  NodeMissingError,\n  DefaultValue,\n  DEFAULT_VALUE,\n  RecoilValueNotReady\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction enqueueExecution(s, f) {\n  f();\n}\n\nvar Recoil_Queue = {\n  enqueueExecution\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hamt_1 = createCommonjsModule(function (module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n    @fileOverview Hash Array Mapped Trie.\n\n    Code based on: https://github.com/exclipy/pdata\n*/\n\n\nvar hamt = {}; // export\n\n/* Configuration\n ******************************************************************************/\n\nvar SIZE = 5;\nvar BUCKET_SIZE = Math.pow(2, SIZE);\nvar MASK = BUCKET_SIZE - 1;\nvar MAX_INDEX_NODE = BUCKET_SIZE / 2;\nvar MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n/*\n ******************************************************************************/\n\nvar nothing = {};\n\nvar constant = function constant(x) {\n  return function () {\n    return x;\n  };\n};\n/**\n    Get 32 bit hash of string.\n\n    Based on:\n    http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n*/\n\n\nvar hash = hamt.hash = function (str) {\n  var type = typeof str === 'undefined' ? 'undefined' : _typeof(str);\n  if (type === 'number') return str;\n  if (type !== 'string') str += '';\n  var hash = 0;\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    var c = str.charCodeAt(i);\n    hash = (hash << 5) - hash + c | 0;\n  }\n\n  return hash;\n};\n/* Bit Ops\n ******************************************************************************/\n\n/**\n    Hamming weight.\n\n    Taken from: http://jsperf.com/hamming-weight\n*/\n\n\nvar popcount = function popcount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n};\n\nvar hashFragment = function hashFragment(shift, h) {\n  return h >>> shift & MASK;\n};\n\nvar toBitmap = function toBitmap(x) {\n  return 1 << x;\n};\n\nvar fromBitmap = function fromBitmap(bitmap, bit) {\n  return popcount(bitmap & bit - 1);\n};\n/* Array Ops\n ******************************************************************************/\n\n/**\n    Set a value in an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to change.\n    @param v New value\n    @param arr Array.\n*/\n\n\nvar arrayUpdate = function arrayUpdate(mutate, at, v, arr) {\n  var out = arr;\n\n  if (!mutate) {\n    var len = arr.length;\n    out = new Array(len);\n\n    for (var i = 0; i < len; ++i) {\n      out[i] = arr[i];\n    }\n  }\n\n  out[at] = v;\n  return out;\n};\n/**\n    Remove a value from an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to remove.\n    @param arr Array.\n*/\n\n\nvar arraySpliceOut = function arraySpliceOut(mutate, at, arr) {\n  var newLen = arr.length - 1;\n  var i = 0;\n  var g = 0;\n  var out = arr;\n\n  if (mutate) {\n    i = g = at;\n  } else {\n    out = new Array(newLen);\n\n    while (i < at) {\n      out[g++] = arr[i++];\n    }\n  }\n\n  ++i;\n\n  while (i <= newLen) {\n    out[g++] = arr[i++];\n  }\n\n  if (mutate) {\n    out.length = newLen;\n  }\n\n  return out;\n};\n/**\n    Insert a value into an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to insert at.\n    @param v Value to insert,\n    @param arr Array.\n*/\n\n\nvar arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {\n  var len = arr.length;\n\n  if (mutate) {\n    var _i = len;\n\n    while (_i >= at) {\n      arr[_i--] = arr[_i];\n    }\n\n    arr[at] = v;\n    return arr;\n  }\n\n  var i = 0,\n      g = 0;\n  var out = new Array(len + 1);\n\n  while (i < at) {\n    out[g++] = arr[i++];\n  }\n\n  out[at] = v;\n\n  while (i < len) {\n    out[++g] = arr[i++];\n  }\n\n  return out;\n};\n/* Node Structures\n ******************************************************************************/\n\n\nvar LEAF = 1;\nvar COLLISION = 2;\nvar INDEX = 3;\nvar ARRAY = 4;\n/**\n    Empty node.\n*/\n\nvar empty = {\n  __hamt_isEmpty: true\n};\n\nvar isEmptyNode = function isEmptyNode(x) {\n  return x === empty || x && x.__hamt_isEmpty;\n};\n/**\n    Leaf holding a value.\n\n    @member edit Edit of the node.\n    @member hash Hash of key.\n    @member key Key.\n    @member value Value stored.\n*/\n\n\nvar Leaf = function Leaf(edit, hash, key, value) {\n  return {\n    type: LEAF,\n    edit: edit,\n    hash: hash,\n    key: key,\n    value: value,\n    _modify: Leaf__modify\n  };\n};\n/**\n    Leaf holding multiple values with the same hash but different keys.\n\n    @member edit Edit of the node.\n    @member hash Hash of key.\n    @member children Array of collision children node.\n*/\n\n\nvar Collision = function Collision(edit, hash, children) {\n  return {\n    type: COLLISION,\n    edit: edit,\n    hash: hash,\n    children: children,\n    _modify: Collision__modify\n  };\n};\n/**\n    Internal node with a sparse set of children.\n\n    Uses a bitmap and array to pack children.\n\n  @member edit Edit of the node.\n    @member mask Bitmap that encode the positions of children in the array.\n    @member children Array of child nodes.\n*/\n\n\nvar IndexedNode = function IndexedNode(edit, mask, children) {\n  return {\n    type: INDEX,\n    edit: edit,\n    mask: mask,\n    children: children,\n    _modify: IndexedNode__modify\n  };\n};\n/**\n    Internal node with many children.\n\n    @member edit Edit of the node.\n    @member size Number of children.\n    @member children Array of child nodes.\n*/\n\n\nvar ArrayNode = function ArrayNode(edit, size, children) {\n  return {\n    type: ARRAY,\n    edit: edit,\n    size: size,\n    children: children,\n    _modify: ArrayNode__modify\n  };\n};\n/**\n    Is `node` a leaf node?\n*/\n\n\nvar isLeaf = function isLeaf(node) {\n  return node === empty || node.type === LEAF || node.type === COLLISION;\n};\n/* Internal node operations.\n ******************************************************************************/\n\n/**\n    Expand an indexed node into an array node.\n\n  @param edit Current edit.\n    @param frag Index of added child.\n    @param child Added child.\n    @param mask Index node mask before child added.\n    @param subNodes Index node children before child added.\n*/\n\n\nvar expand = function expand(edit, frag, child, bitmap, subNodes) {\n  var arr = [];\n  var bit = bitmap;\n  var count = 0;\n\n  for (var i = 0; bit; ++i) {\n    if (bit & 1) arr[i] = subNodes[count++];\n    bit >>>= 1;\n  }\n\n  arr[frag] = child;\n  return ArrayNode(edit, count + 1, arr);\n};\n/**\n    Collapse an array node into a indexed node.\n\n  @param edit Current edit.\n    @param count Number of elements in new array.\n    @param removed Index of removed element.\n    @param elements Array node children before remove.\n*/\n\n\nvar pack = function pack(edit, count, removed, elements) {\n  var children = new Array(count - 1);\n  var g = 0;\n  var bitmap = 0;\n\n  for (var i = 0, len = elements.length; i < len; ++i) {\n    if (i !== removed) {\n      var elem = elements[i];\n\n      if (elem && !isEmptyNode(elem)) {\n        children[g++] = elem;\n        bitmap |= 1 << i;\n      }\n    }\n  }\n\n  return IndexedNode(edit, bitmap, children);\n};\n/**\n    Merge two leaf nodes.\n\n    @param shift Current shift.\n    @param h1 Node 1 hash.\n    @param n1 Node 1.\n    @param h2 Node 2 hash.\n    @param n2 Node 2.\n*/\n\n\nvar mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {\n  if (h1 === h2) return Collision(edit, h1, [n2, n1]);\n  var subH1 = hashFragment(shift, h1);\n  var subH2 = hashFragment(shift, h2);\n  return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);\n};\n/**\n    Update an entry in a collision list.\n\n    @param mutate Should mutation be used?\n    @param edit Current edit.\n    @param keyEq Key compare function.\n    @param hash Hash of collision.\n    @param list Collision list.\n    @param f Update function.\n    @param k Key to update.\n    @param size Size ref.\n*/\n\n\nvar updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {\n  var len = list.length;\n\n  for (var i = 0; i < len; ++i) {\n    var child = list[i];\n\n    if (keyEq(k, child.key)) {\n      var value = child.value;\n\n      var _newValue = f(value);\n\n      if (_newValue === value) return list;\n\n      if (_newValue === nothing) {\n        --size.value;\n        return arraySpliceOut(mutate, i, list);\n      }\n\n      return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);\n    }\n  }\n\n  var newValue = f();\n  if (newValue === nothing) return list;\n  ++size.value;\n  return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);\n};\n\nvar canEditNode = function canEditNode(edit, node) {\n  return edit === node.edit;\n};\n/* Editing\n ******************************************************************************/\n\n\nvar Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {\n  if (keyEq(k, this.key)) {\n    var _v = f(this.value);\n\n    if (_v === this.value) return this;else if (_v === nothing) {\n      --size.value;\n      return empty;\n    }\n\n    if (canEditNode(edit, this)) {\n      this.value = _v;\n      return this;\n    }\n\n    return Leaf(edit, h, k, _v);\n  }\n\n  var v = f();\n  if (v === nothing) return this;\n  ++size.value;\n  return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n};\n\nvar Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {\n  if (h === this.hash) {\n    var canEdit = canEditNode(edit, this);\n    var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);\n    if (list === this.children) return this;\n    return list.length > 1 ? Collision(edit, this.hash, list) : list[0]; // collapse single element collision list\n  }\n\n  var v = f();\n  if (v === nothing) return this;\n  ++size.value;\n  return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n};\n\nvar IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {\n  var mask = this.mask;\n  var children = this.children;\n  var frag = hashFragment(shift, h);\n  var bit = toBitmap(frag);\n  var indx = fromBitmap(mask, bit);\n  var exists = mask & bit;\n  var current = exists ? children[indx] : empty;\n\n  var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n  if (current === child) return this;\n  var canEdit = canEditNode(edit, this);\n  var bitmap = mask;\n  var newChildren = void 0;\n\n  if (exists && isEmptyNode(child)) {\n    // remove\n    bitmap &= ~bit;\n    if (!bitmap) return empty;\n    if (children.length <= 2 && isLeaf(children[indx ^ 1])) return children[indx ^ 1]; // collapse\n\n    newChildren = arraySpliceOut(canEdit, indx, children);\n  } else if (!exists && !isEmptyNode(child)) {\n    // add\n    if (children.length >= MAX_INDEX_NODE) return expand(edit, frag, child, mask, children);\n    bitmap |= bit;\n    newChildren = arraySpliceIn(canEdit, indx, child, children);\n  } else {\n    // modify\n    newChildren = arrayUpdate(canEdit, indx, child, children);\n  }\n\n  if (canEdit) {\n    this.mask = bitmap;\n    this.children = newChildren;\n    return this;\n  }\n\n  return IndexedNode(edit, bitmap, newChildren);\n};\n\nvar ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {\n  var count = this.size;\n  var children = this.children;\n  var frag = hashFragment(shift, h);\n  var child = children[frag];\n\n  var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n  if (child === newChild) return this;\n  var canEdit = canEditNode(edit, this);\n  var newChildren = void 0;\n\n  if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n    // add\n    ++count;\n    newChildren = arrayUpdate(canEdit, frag, newChild, children);\n  } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n    // remove\n    --count;\n    if (count <= MIN_ARRAY_NODE) return pack(edit, count, frag, children);\n    newChildren = arrayUpdate(canEdit, frag, empty, children);\n  } else {\n    // modify\n    newChildren = arrayUpdate(canEdit, frag, newChild, children);\n  }\n\n  if (canEdit) {\n    this.size = count;\n    this.children = newChildren;\n    return this;\n  }\n\n  return ArrayNode(edit, count, newChildren);\n};\n\nempty._modify = function (edit, keyEq, shift, f, h, k, size) {\n  var v = f();\n  if (v === nothing) return empty;\n  ++size.value;\n  return Leaf(edit, h, k, v);\n};\n/*\n ******************************************************************************/\n\n\nfunction Map(editable, edit, config, root, size) {\n  this._editable = editable;\n  this._edit = edit;\n  this._config = config;\n  this._root = root;\n  this._size = size;\n}\n\nMap.prototype.setTree = function (newRoot, newSize) {\n  if (this._editable) {\n    this._root = newRoot;\n    this._size = newSize;\n    return this;\n  }\n\n  return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);\n};\n/* Queries\n ******************************************************************************/\n\n/**\n    Lookup the value for `key` in `map` using a custom `hash`.\n\n    Returns the value or `alt` if none.\n*/\n\n\nvar tryGetHash = hamt.tryGetHash = function (alt, hash, key, map) {\n  var node = map._root;\n  var shift = 0;\n  var keyEq = map._config.keyEq;\n\n  while (true) {\n    switch (node.type) {\n      case LEAF:\n        {\n          return keyEq(key, node.key) ? node.value : alt;\n        }\n\n      case COLLISION:\n        {\n          if (hash === node.hash) {\n            var children = node.children;\n\n            for (var i = 0, len = children.length; i < len; ++i) {\n              var child = children[i];\n              if (keyEq(key, child.key)) return child.value;\n            }\n          }\n\n          return alt;\n        }\n\n      case INDEX:\n        {\n          var frag = hashFragment(shift, hash);\n          var bit = toBitmap(frag);\n\n          if (node.mask & bit) {\n            node = node.children[fromBitmap(node.mask, bit)];\n            shift += SIZE;\n            break;\n          }\n\n          return alt;\n        }\n\n      case ARRAY:\n        {\n          node = node.children[hashFragment(shift, hash)];\n\n          if (node) {\n            shift += SIZE;\n            break;\n          }\n\n          return alt;\n        }\n\n      default:\n        return alt;\n    }\n  }\n};\n\nMap.prototype.tryGetHash = function (alt, hash, key) {\n  return tryGetHash(alt, hash, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using internal hash function.\n\n    @see `tryGetHash`\n*/\n\n\nvar tryGet = hamt.tryGet = function (alt, key, map) {\n  return tryGetHash(alt, map._config.hash(key), key, map);\n};\n\nMap.prototype.tryGet = function (alt, key) {\n  return tryGet(alt, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using a custom `hash`.\n\n    Returns the value or `undefined` if none.\n*/\n\n\nvar getHash = hamt.getHash = function (hash, key, map) {\n  return tryGetHash(undefined, hash, key, map);\n};\n\nMap.prototype.getHash = function (hash, key) {\n  return getHash(hash, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using internal hash function.\n\n    @see `get`\n*/\n\n\nvar get = hamt.get = function (key, map) {\n  return tryGetHash(undefined, map._config.hash(key), key, map);\n};\n\nMap.prototype.get = function (key, alt) {\n  return tryGet(alt, key, this);\n};\n/**\n    Does an entry exist for `key` in `map`? Uses custom `hash`.\n*/\n\n\nvar hasHash = hamt.has = function (hash, key, map) {\n  return tryGetHash(nothing, hash, key, map) !== nothing;\n};\n\nMap.prototype.hasHash = function (hash, key) {\n  return hasHash(hash, key, this);\n};\n/**\n    Does an entry exist for `key` in `map`? Uses internal hash function.\n*/\n\n\nvar has = hamt.has = function (key, map) {\n  return hasHash(map._config.hash(key), key, map);\n};\n\nMap.prototype.has = function (key) {\n  return has(key, this);\n};\n\nvar defKeyCompare = function defKeyCompare(x, y) {\n  return x === y;\n};\n/**\n    Create an empty map.\n\n    @param config Configuration.\n*/\n\n\nhamt.make = function (config) {\n  return new Map(0, 0, {\n    keyEq: config && config.keyEq || defKeyCompare,\n    hash: config && config.hash || hash\n  }, empty, 0);\n};\n/**\n    Empty map.\n*/\n\n\nhamt.empty = hamt.make();\n/**\n    Does `map` contain any elements?\n*/\n\nvar isEmpty = hamt.isEmpty = function (map) {\n  return map && !!isEmptyNode(map._root);\n};\n\nMap.prototype.isEmpty = function () {\n  return isEmpty(this);\n};\n/* Updates\n ******************************************************************************/\n\n/**\n    Alter the value stored for `key` in `map` using function `f` using\n    custom hash.\n\n    `f` is invoked with the current value for `k` if it exists,\n    or no arguments if no such value exists. `modify` will always either\n    update or insert a value into the map.\n\n    Returns a map with the modified value. Does not alter `map`.\n*/\n\n\nvar modifyHash = hamt.modifyHash = function (f, hash, key, map) {\n  var size = {\n    value: map._size\n  };\n\n  var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);\n\n  return map.setTree(newRoot, size.value);\n};\n\nMap.prototype.modifyHash = function (hash, key, f) {\n  return modifyHash(f, hash, key, this);\n};\n/**\n    Alter the value stored for `key` in `map` using function `f` using\n    internal hash function.\n\n    @see `modifyHash`\n*/\n\n\nvar modify = hamt.modify = function (f, key, map) {\n  return modifyHash(f, map._config.hash(key), key, map);\n};\n\nMap.prototype.modify = function (key, f) {\n  return modify(f, key, this);\n};\n/**\n    Store `value` for `key` in `map` using custom `hash`.\n\n    Returns a map with the modified value. Does not alter `map`.\n*/\n\n\nvar setHash = hamt.setHash = function (hash, key, value, map) {\n  return modifyHash(constant(value), hash, key, map);\n};\n\nMap.prototype.setHash = function (hash, key, value) {\n  return setHash(hash, key, value, this);\n};\n/**\n    Store `value` for `key` in `map` using internal hash function.\n\n    @see `setHash`\n*/\n\n\nvar set = hamt.set = function (key, value, map) {\n  return setHash(map._config.hash(key), key, value, map);\n};\n\nMap.prototype.set = function (key, value) {\n  return set(key, value, this);\n};\n/**\n    Remove the entry for `key` in `map`.\n\n    Returns a map with the value removed. Does not alter `map`.\n*/\n\n\nvar del = constant(nothing);\n\nvar removeHash = hamt.removeHash = function (hash, key, map) {\n  return modifyHash(del, hash, key, map);\n};\n\nMap.prototype.removeHash = Map.prototype.deleteHash = function (hash, key) {\n  return removeHash(hash, key, this);\n};\n/**\n    Remove the entry for `key` in `map` using internal hash function.\n\n    @see `removeHash`\n*/\n\n\nvar remove = hamt.remove = function (key, map) {\n  return removeHash(map._config.hash(key), key, map);\n};\n\nMap.prototype.remove = Map.prototype.delete = function (key) {\n  return remove(key, this);\n};\n/* Mutation\n ******************************************************************************/\n\n/**\n    Mark `map` as mutable.\n */\n\n\nvar beginMutation = hamt.beginMutation = function (map) {\n  return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);\n};\n\nMap.prototype.beginMutation = function () {\n  return beginMutation(this);\n};\n/**\n    Mark `map` as immutable.\n */\n\n\nvar endMutation = hamt.endMutation = function (map) {\n  map._editable = map._editable && map._editable - 1;\n  return map;\n};\n\nMap.prototype.endMutation = function () {\n  return endMutation(this);\n};\n/**\n    Mutate `map` within the context of `f`.\n    @param f\n    @param map HAMT\n*/\n\n\nvar mutate = hamt.mutate = function (f, map) {\n  var transient = beginMutation(map);\n  f(transient);\n  return endMutation(transient);\n};\n\nMap.prototype.mutate = function (f) {\n  return mutate(f, this);\n};\n/* Traversal\n ******************************************************************************/\n\n/**\n    Apply a continuation.\n*/\n\n\nvar appk = function appk(k) {\n  return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);\n};\n/**\n    Recursively visit all values stored in an array of nodes lazily.\n*/\n\n\nvar lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {\n  while (i < len) {\n    var child = children[i++];\n    if (child && !isEmptyNode(child)) return lazyVisit(child, f, [len, children, i, f, k]);\n  }\n\n  return appk(k);\n};\n/**\n    Recursively visit all values stored in `node` lazily.\n*/\n\n\nvar lazyVisit = function lazyVisit(node, f, k) {\n  switch (node.type) {\n    case LEAF:\n      return {\n        value: f(node),\n        rest: k\n      };\n\n    case COLLISION:\n    case ARRAY:\n    case INDEX:\n      var children = node.children;\n      return lazyVisitChildren(children.length, children, 0, f, k);\n\n    default:\n      return appk(k);\n  }\n};\n\nvar DONE = {\n  done: true\n};\n/**\n    Javascript iterator over a map.\n*/\n\nfunction MapIterator(v) {\n  this.v = v;\n}\n\nMapIterator.prototype.next = function () {\n  if (!this.v) return DONE;\n  var v0 = this.v;\n  this.v = appk(v0.rest);\n  return v0;\n};\n\nMapIterator.prototype[Symbol.iterator] = function () {\n  return this;\n};\n/**\n    Lazily visit each value in map with function `f`.\n*/\n\n\nvar visit = function visit(map, f) {\n  return new MapIterator(lazyVisit(map._root, f));\n};\n/**\n    Get a Javascsript iterator of `map`.\n\n    Iterates over `[key, value]` arrays.\n*/\n\n\nvar buildPairs = function buildPairs(x) {\n  return [x.key, x.value];\n};\n\nvar entries = hamt.entries = function (map) {\n  return visit(map, buildPairs);\n};\n\nMap.prototype.entries = Map.prototype[Symbol.iterator] = function () {\n  return entries(this);\n};\n/**\n    Get array of all keys in `map`.\n\n    Order is not guaranteed.\n*/\n\n\nvar buildKeys = function buildKeys(x) {\n  return x.key;\n};\n\nvar keys = hamt.keys = function (map) {\n  return visit(map, buildKeys);\n};\n\nMap.prototype.keys = function () {\n  return keys(this);\n};\n/**\n    Get array of all values in `map`.\n\n    Order is not guaranteed, duplicates are preserved.\n*/\n\n\nvar buildValues = function buildValues(x) {\n  return x.value;\n};\n\nvar values = hamt.values = Map.prototype.values = function (map) {\n  return visit(map, buildValues);\n};\n\nMap.prototype.values = function () {\n  return values(this);\n};\n/* Fold\n ******************************************************************************/\n\n/**\n    Visit every entry in the map, aggregating data.\n\n    Order of nodes is not guaranteed.\n\n    @param f Function mapping accumulated value, value, and key to new value.\n    @param z Starting value.\n    @param m HAMT\n*/\n\n\nvar fold = hamt.fold = function (f, z, m) {\n  var root = m._root;\n  if (root.type === LEAF) return f(z, root.value, root.key);\n  var toVisit = [root.children];\n  var children = void 0;\n\n  while (children = toVisit.pop()) {\n    for (var i = 0, len = children.length; i < len;) {\n      var child = children[i++];\n\n      if (child && child.type) {\n        if (child.type === LEAF) z = f(z, child.value, child.key);else toVisit.push(child.children);\n      }\n    }\n  }\n\n  return z;\n};\n\nMap.prototype.fold = function (f, z) {\n  return fold(f, z, this);\n};\n/**\n    Visit every entry in the map, aggregating data.\n\n    Order of nodes is not guaranteed.\n\n    @param f Function invoked with value and key\n    @param map HAMT\n*/\n\n\nvar forEach = hamt.forEach = function (f, map) {\n  return fold(function (_, value, key) {\n    return f(value, key, map);\n  }, null, map);\n};\n\nMap.prototype.forEach = function (f) {\n  return forEach(f, this);\n};\n/* Aggregate\n ******************************************************************************/\n\n/**\n    Get the number of entries in `map`.\n*/\n\n\nvar count = hamt.count = function (map) {\n  return map._size;\n};\n\nMap.prototype.count = function () {\n  return count(this);\n};\n\nObject.defineProperty(Map.prototype, 'size', {\n  get: Map.prototype.count\n});\n/* Export\n ******************************************************************************/\n\nif ( module.exports) {\n  module.exports = hamt;\n} else {\n  undefined.hamt = hamt;\n}\n});\n\nclass BuiltInMap {\n  constructor(existing) {\n    _defineProperty(this, \"_map\", void 0);\n\n    this._map = new Map(existing === null || existing === void 0 ? void 0 : existing.entries());\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  get(k) {\n    return this._map.get(k);\n  }\n\n  has(k) {\n    return this._map.has(k);\n  }\n\n  set(k, v) {\n    this._map.set(k, v);\n\n    return this;\n  }\n\n  delete(k) {\n    this._map.delete(k);\n\n    return this;\n  }\n\n  clone() {\n    return persistentMap(this);\n  }\n\n  toMap() {\n    return new Map(this._map);\n  }\n\n}\n\nclass HashArrayMappedTrieMap {\n  // Because hamt.empty is not a function there is no way to introduce type\n  // parameters on it, so empty is typed as HAMTPlusMap<string, mixed>.\n  // $FlowIssue\n  constructor(existing) {\n    _defineProperty(this, \"_hamt\", hamt_1.empty.beginMutation());\n\n    if (existing instanceof HashArrayMappedTrieMap) {\n      const h = existing._hamt.endMutation();\n\n      existing._hamt = h.beginMutation();\n      this._hamt = h.beginMutation();\n    } else if (existing) {\n      for (const [k, v] of existing.entries()) {\n        this._hamt.set(k, v);\n      }\n    }\n  }\n\n  keys() {\n    return this._hamt.keys();\n  }\n\n  entries() {\n    return this._hamt.entries();\n  }\n\n  get(k) {\n    return this._hamt.get(k);\n  }\n\n  has(k) {\n    return this._hamt.has(k);\n  }\n\n  set(k, v) {\n    this._hamt.set(k, v);\n\n    return this;\n  }\n\n  delete(k) {\n    this._hamt.delete(k);\n\n    return this;\n  }\n\n  clone() {\n    return persistentMap(this);\n  }\n\n  toMap() {\n    return new Map(this._hamt);\n  }\n\n}\n\nfunction persistentMap(existing) {\n  if (Recoil_gkx('recoil_hamt_2020')) {\n    return new HashArrayMappedTrieMap(existing);\n  } else {\n    return new BuiltInMap(existing);\n  }\n}\n\nvar Recoil_PersistentMap = {\n  persistentMap\n};\n\nvar Recoil_PersistentMap_1 = Recoil_PersistentMap.persistentMap;\n\nvar Recoil_PersistentMap$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  persistentMap: Recoil_PersistentMap_1\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a set containing all of the values from the first set that are not\n * present in any of the subsequent sets.\n *\n * Note: this is written procedurally (i.e., without filterSet) for performant\n * use in tight loops.\n */\n\nfunction differenceSets(set, ...setsWithValuesToRemove) {\n  const ret = new Set();\n\n  FIRST: for (const value of set) {\n    for (const otherSet of setsWithValuesToRemove) {\n      if (otherSet.has(value)) {\n        continue FIRST;\n      }\n    }\n\n    ret.add(value);\n  }\n\n  return ret;\n}\n\nvar Recoil_differenceSets = differenceSets;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a new Map object with the same keys as the original, but with the\n * values replaced with the output of the given callback function.\n */\n\nfunction mapMap(map, callback) {\n  const result = new Map();\n  map.forEach((value, key) => {\n    result.set(key, callback(value, key));\n  });\n  return result;\n}\n\nvar Recoil_mapMap = mapMap;\n\nfunction makeGraph() {\n  return {\n    nodeDeps: new Map(),\n    nodeToNodeSubscriptions: new Map()\n  };\n}\n\nfunction cloneGraph(graph) {\n  return {\n    nodeDeps: Recoil_mapMap(graph.nodeDeps, s => new Set(s)),\n    nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, s => new Set(s))\n  };\n} // Note that this overwrites the deps of existing nodes, rather than unioning\n// the new deps with the old deps.\n\n\nfunction mergeDependencyMapIntoGraph(deps, graph, // If olderGraph is given then we will not overwrite changes made to the given\n// graph compared with olderGraph:\nolderGraph) {\n  const {\n    nodeDeps,\n    nodeToNodeSubscriptions\n  } = graph;\n  deps.forEach((upstreams, downstream) => {\n    const existingUpstreams = nodeDeps.get(downstream);\n\n    if (existingUpstreams && olderGraph && existingUpstreams !== olderGraph.nodeDeps.get(downstream)) {\n      return;\n    } // Update nodeDeps:\n\n\n    nodeDeps.set(downstream, new Set(upstreams)); // Add new deps to nodeToNodeSubscriptions:\n\n    const addedUpstreams = existingUpstreams == null ? upstreams : Recoil_differenceSets(upstreams, existingUpstreams);\n    addedUpstreams.forEach(upstream => {\n      if (!nodeToNodeSubscriptions.has(upstream)) {\n        nodeToNodeSubscriptions.set(upstream, new Set());\n      }\n\n      const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n      existing.add(downstream);\n    }); // Remove removed deps from nodeToNodeSubscriptions:\n\n    if (existingUpstreams) {\n      const removedUpstreams = Recoil_differenceSets(existingUpstreams, upstreams);\n      removedUpstreams.forEach(upstream => {\n        if (!nodeToNodeSubscriptions.has(upstream)) {\n          return;\n        }\n\n        const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n        existing.delete(downstream);\n\n        if (existing.size === 0) {\n          nodeToNodeSubscriptions.delete(upstream);\n        }\n      });\n    }\n  });\n}\n\nfunction saveDependencyMapToStore(dependencyMap, store, version) {\n  var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;\n\n  const storeState = store.getState();\n\n  if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to save dependencies to a discarded tree');\n  } // Merge the dependencies discovered into the store's dependency map\n  // for the version that was read:\n\n\n  const graph = store.getGraph(version);\n  mergeDependencyMapIntoGraph(dependencyMap, graph); // If this version is not the latest version, also write these dependencies\n  // into later versions if they don't already have their own:\n\n  if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {\n    const currentGraph = store.getGraph(storeState.currentTree.version);\n    mergeDependencyMapIntoGraph(dependencyMap, currentGraph, graph);\n  }\n\n  if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {\n    var _storeState$nextTree2;\n\n    const nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;\n\n    if (nextVersion !== undefined) {\n      const nextGraph = store.getGraph(nextVersion);\n      mergeDependencyMapIntoGraph(dependencyMap, nextGraph, graph);\n    }\n  }\n}\n\nfunction mergeDepsIntoDependencyMap(from, into) {\n  from.forEach((upstreamDeps, downstreamNode) => {\n    if (!into.has(downstreamNode)) {\n      into.set(downstreamNode, new Set());\n    }\n\n    const deps = Recoil_nullthrows(into.get(downstreamNode));\n    upstreamDeps.forEach(dep => deps.add(dep));\n  });\n}\n\nfunction addToDependencyMap(downstream, upstream, dependencyMap) {\n  if (!dependencyMap.has(downstream)) {\n    dependencyMap.set(downstream, new Set());\n  }\n\n  Recoil_nullthrows(dependencyMap.get(downstream)).add(upstream);\n}\n\nvar Recoil_Graph = {\n  addToDependencyMap,\n  cloneGraph,\n  graph: makeGraph,\n  mergeDepsIntoDependencyMap,\n  saveDependencyMapToStore\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nlet nextTreeStateVersion = 0;\n\nconst getNextTreeStateVersion = () => nextTreeStateVersion++;\n\nlet nextStoreID = 0;\n\nconst getNextStoreID = () => nextStoreID++;\n\nlet nextComponentID = 0;\n\nconst getNextComponentID = () => nextComponentID++;\n\nvar Recoil_Keys = {\n  getNextTreeStateVersion,\n  getNextStoreID,\n  getNextComponentID\n};\n\nconst {\n  persistentMap: persistentMap$1\n} = Recoil_PersistentMap$1;\n\nconst {\n  graph\n} = Recoil_Graph;\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$1\n} = Recoil_Keys;\n\nfunction makeEmptyTreeState() {\n  const version = getNextTreeStateVersion$1();\n  return {\n    version,\n    stateID: version,\n    transactionMetadata: {},\n    dirtyAtoms: new Set(),\n    atomValues: persistentMap$1(),\n    nonvalidatedAtoms: persistentMap$1()\n  };\n}\n\nfunction makeEmptyStoreState() {\n  const currentTree = makeEmptyTreeState();\n  return {\n    currentTree,\n    nextTree: null,\n    previousTree: null,\n    commitDepth: 0,\n    knownAtoms: new Set(),\n    knownSelectors: new Set(),\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(currentTree.version, graph()),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    nodeCleanupFunctions: new Map()\n  };\n}\n\nvar Recoil_State = {\n  makeEmptyTreeState,\n  makeEmptyStoreState,\n  getNextTreeStateVersion: getNextTreeStateVersion$1\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nclass RetentionZone {}\n\nfunction retentionZone() {\n  return new RetentionZone();\n}\n\nvar Recoil_RetentionZone = {\n  RetentionZone,\n  retentionZone\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Utilities for working with built-in Maps and Sets without mutating them.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction setByAddingToSet(set, v) {\n  const next = new Set(set);\n  next.add(v);\n  return next;\n}\n\nfunction setByDeletingFromSet(set, v) {\n  const next = new Set(set);\n  next.delete(v);\n  return next;\n}\n\nfunction mapBySettingInMap(map, k, v) {\n  const next = new Map(map);\n  next.set(k, v);\n  return next;\n}\n\nfunction mapByUpdatingInMap(map, k, updater) {\n  const next = new Map(map);\n  next.set(k, updater(next.get(k)));\n  return next;\n}\n\nfunction mapByDeletingFromMap(map, k) {\n  const next = new Map(map);\n  next.delete(k);\n  return next;\n}\n\nfunction mapByDeletingMultipleFromMap(map, ks) {\n  const next = new Map(map);\n  ks.forEach(k => next.delete(k));\n  return next;\n}\n\nvar Recoil_CopyOnWrite = {\n  setByAddingToSet,\n  setByDeletingFromSet,\n  mapBySettingInMap,\n  mapByUpdatingInMap,\n  mapByDeletingFromMap,\n  mapByDeletingMultipleFromMap\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the filter function.\n */\n\nfunction* filterIterable(iterable, predicate) {\n  // Use generator to create iterable/iterator\n  let index = 0;\n\n  for (const value of iterable) {\n    if (predicate(value, index++)) {\n      yield value;\n    }\n  }\n}\n\nvar Recoil_filterIterable = filterIterable;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Return a proxy object based on the provided base and factories objects.\n * The proxy will include all properties of the base object as-is.\n * The factories object contains callbacks to obtain the values of the properies\n * for its keys.\n *\n * This is useful for providing users an object where some properties may be\n * lazily computed only on first access.\n */\n// $FlowIssue[unclear-type]\n\nfunction lazyProxy(base, factories) {\n  const proxy = new Proxy(base, {\n    // Compute and cache lazy property if not already done.\n    get: (target, prop) => {\n      if (!(prop in target) && prop in factories) {\n        target[prop] = factories[prop]();\n      }\n\n      return target[prop];\n    },\n    // This method allows user to iterate keys as normal\n    ownKeys: target => {\n\n      return Object.keys(target);\n    }\n  }); // $FlowIssue[incompatible-return]\n\n  return proxy;\n}\n\nvar Recoil_lazyProxy = lazyProxy;\n\nconst {\n  getNode: getNode$1,\n  getNodeMaybe: getNodeMaybe$1,\n  recoilValuesForKeys: recoilValuesForKeys$1\n} = Recoil_Node;\n\nconst {\n  RetentionZone: RetentionZone$1\n} = Recoil_RetentionZone;\n\nconst {\n  setByAddingToSet: setByAddingToSet$1\n} = Recoil_CopyOnWrite;\n\n\n\n\n\n\n\n // flowlint-next-line unclear-type:off\n\n\nconst emptySet = Object.freeze(new Set());\n\nclass ReadOnlyRecoilValueError extends Error {}\n\nfunction initializeRetentionForNode(store, nodeKey, retainedBy) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return () => undefined;\n  }\n\n  const {\n    nodesRetainedByZone\n  } = store.getState().retention;\n\n  function addToZone(zone) {\n    let set = nodesRetainedByZone.get(zone);\n\n    if (!set) {\n      nodesRetainedByZone.set(zone, set = new Set());\n    }\n\n    set.add(nodeKey);\n  }\n\n  if (retainedBy instanceof RetentionZone$1) {\n    addToZone(retainedBy);\n  } else if (Array.isArray(retainedBy)) {\n    for (const zone of retainedBy) {\n      addToZone(zone);\n    }\n  }\n\n  return () => {\n    if (!Recoil_gkx('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    const {\n      retention\n    } = store.getState();\n\n    function deleteFromZone(zone) {\n      const set = retention.nodesRetainedByZone.get(zone);\n      set === null || set === void 0 ? void 0 : set.delete(nodeKey);\n\n      if (set && set.size === 0) {\n        retention.nodesRetainedByZone.delete(zone);\n      }\n    }\n\n    if (retainedBy instanceof RetentionZone$1) {\n      deleteFromZone(retainedBy);\n    } else if (Array.isArray(retainedBy)) {\n      for (const zone of retainedBy) {\n        deleteFromZone(zone);\n      }\n    }\n  };\n}\n\nfunction initializeNodeIfNewToStore(store, treeState, key, trigger) {\n  const storeState = store.getState();\n\n  if (storeState.nodeCleanupFunctions.has(key)) {\n    return;\n  }\n\n  const node = getNode$1(key);\n  const retentionCleanup = initializeRetentionForNode(store, key, node.retainedBy);\n  const nodeCleanup = node.init(store, treeState, trigger);\n  storeState.nodeCleanupFunctions.set(key, () => {\n    nodeCleanup();\n    retentionCleanup();\n  });\n}\n\nfunction initializeNode(store, key, trigger) {\n  initializeNodeIfNewToStore(store, store.getState().currentTree, key, trigger);\n}\n\nfunction cleanUpNode(store, key) {\n  var _state$nodeCleanupFun;\n\n  const state = store.getState();\n  (_state$nodeCleanupFun = state.nodeCleanupFunctions.get(key)) === null || _state$nodeCleanupFun === void 0 ? void 0 : _state$nodeCleanupFun();\n  state.nodeCleanupFunctions.delete(key);\n} // Get the current value loadable of a node and update the state.\n// Update dependencies and subscriptions for selectors.\n// Update saved value validation for atoms.\n\n\nfunction getNodeLoadable(store, state, key) {\n  initializeNodeIfNewToStore(store, state, key, 'get');\n  return getNode$1(key).get(store, state);\n} // Peek at the current value loadable for a node without any evaluation or state change\n\n\nfunction peekNodeLoadable(store, state, key) {\n  return getNode$1(key).peek(store, state);\n} // Write value directly to state bypassing the Node interface as the node\n// definitions may not have been loaded yet when processing the initial snapshot.\n\n\nfunction setUnvalidatedAtomValue_DEPRECATED(state, key, newValue) {\n  var _node$invalidate;\n\n  const node = getNodeMaybe$1(key);\n  node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n  return { ...state,\n    atomValues: state.atomValues.clone().delete(key),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone().set(key, newValue),\n    dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)\n  };\n} // Return the discovered dependencies and values to be written by setting\n// a node value. (Multiple values may be written due to selectors getting to\n// set upstreams; deps may be discovered because of reads in updater functions.)\n\n\nfunction setNodeValue(store, state, key, newValue) {\n  const node = getNode$1(key);\n\n  if (node.set == null) {\n    throw new ReadOnlyRecoilValueError(`Attempt to set read-only RecoilValue: ${key}`);\n  }\n\n  const set = node.set; // so flow doesn't lose the above refinement.\n\n  initializeNodeIfNewToStore(store, state, key, 'set');\n  return set(store, state, newValue);\n}\n\nfunction peekNodeInfo(store, state, key) {\n  const storeState = store.getState();\n  const graph = store.getGraph(state.version);\n  const type = getNode$1(key).nodeType;\n  return Recoil_lazyProxy({\n    type\n  }, {\n    loadable: () => peekNodeLoadable(store, state, key),\n    isActive: () => storeState.knownAtoms.has(key) || storeState.knownSelectors.has(key),\n    isSet: () => type === 'selector' ? false : state.atomValues.has(key),\n    isModified: () => state.dirtyAtoms.has(key),\n    // Report current dependencies.  If the node hasn't been evaluated, then\n    // dependencies may be missing based on the current state.\n    deps: () => {\n      var _graph$nodeDeps$get;\n\n      return recoilValuesForKeys$1((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []);\n    },\n    // Reports all \"current\" subscribers.  Evaluating other nodes or\n    // previous in-progress async evaluations may introduce new subscribers.\n    subscribers: () => {\n      var _storeState$nodeToCom, _storeState$nodeToCom2;\n\n      return {\n        nodes: recoilValuesForKeys$1(Recoil_filterIterable(getDownstreamNodes(store, state, new Set([key])), nodeKey => nodeKey !== key)),\n        components: Recoil_mapIterable((_storeState$nodeToCom = (_storeState$nodeToCom2 = storeState.nodeToComponentSubscriptions.get(key)) === null || _storeState$nodeToCom2 === void 0 ? void 0 : _storeState$nodeToCom2.values()) !== null && _storeState$nodeToCom !== void 0 ? _storeState$nodeToCom : [], ([name]) => ({\n          name\n        }))\n      };\n    }\n  });\n} // Find all of the recursively dependent nodes\n\n\nfunction getDownstreamNodes(store, state, keys) {\n  const visitedNodes = new Set();\n  const visitingNodes = Array.from(keys);\n  const graph = store.getGraph(state.version);\n\n  for (let key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n    var _graph$nodeToNodeSubs;\n\n    visitedNodes.add(key);\n    const subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;\n\n    for (const downstreamNode of subscribedNodes) {\n      if (!visitedNodes.has(downstreamNode)) {\n        visitingNodes.push(downstreamNode);\n      }\n    }\n  }\n\n  return visitedNodes;\n}\n\nvar Recoil_FunctionalCore = {\n  getNodeLoadable,\n  peekNodeLoadable,\n  setNodeValue,\n  initializeNode,\n  cleanUpNode,\n  setUnvalidatedAtomValue_DEPRECATED,\n  peekNodeInfo,\n  getDownstreamNodes\n};\n\nvar _createMutableSource, _useMutableSource, _useSyncExternalStore;\n\n\n\n\n\nconst createMutableSource = // flowlint-next-line unclear-type:off\n(_createMutableSource = react.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : react.unstable_createMutableSource;\nconst useMutableSource = // flowlint-next-line unclear-type:off\n(_useMutableSource = react.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react.unstable_useMutableSource; // https://github.com/reactwg/react-18/discussions/86\n\nconst useSyncExternalStore = // flowlint-next-line unclear-type:off\n(_useSyncExternalStore = react.useSyncExternalStore) !== null && _useSyncExternalStore !== void 0 ? _useSyncExternalStore : // flowlint-next-line unclear-type:off\nreact.unstable_useSyncExternalStore;\n\n/**\n * mode: The React API and approach to use for syncing state with React\n * early: Re-renders from Recoil updates occur:\n *    1) earlier\n *    2) in sync with React updates in the same batch\n *    3) before transaction observers instead of after.\n * concurrent: Is the current mode compatible with Concurrent Mode and useTransition()\n */\nfunction reactMode() {\n  // NOTE: This mode is currently broken with some Suspense cases\n  // see Recoil_selector-test.js\n  if (Recoil_gkx('recoil_transition_support')) {\n    return {\n      mode: 'TRANSITION_SUPPORT',\n      early: true,\n      concurrent: true\n    };\n  }\n\n  if (Recoil_gkx('recoil_sync_external_store') && useSyncExternalStore != null) {\n    return {\n      mode: 'SYNC_EXTERNAL_STORE',\n      early: true,\n      concurrent: false\n    };\n  }\n\n  if (Recoil_gkx('recoil_mutable_source') && useMutableSource != null && typeof window !== 'undefined' && !window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE) {\n    return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {\n      mode: 'MUTABLE_SOURCE',\n      early: true,\n      concurrent: true\n    } : {\n      mode: 'MUTABLE_SOURCE',\n      early: false,\n      concurrent: false\n    };\n  }\n\n  return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {\n    mode: 'LEGACY',\n    early: true,\n    concurrent: false\n  } : {\n    mode: 'LEGACY',\n    early: false,\n    concurrent: false\n  };\n}\n\nvar Recoil_ReactMode = {\n  createMutableSource,\n  useMutableSource,\n  useSyncExternalStore,\n  reactMode\n};\n\nconst {\n  getDownstreamNodes: getDownstreamNodes$1,\n  getNodeLoadable: getNodeLoadable$1,\n  setNodeValue: setNodeValue$1\n} = Recoil_FunctionalCore;\n\nconst {\n  getNextComponentID: getNextComponentID$1\n} = Recoil_Keys;\n\nconst {\n  getNode: getNode$2,\n  getNodeMaybe: getNodeMaybe$2\n} = Recoil_Node;\n\nconst {\n  DefaultValue: DefaultValue$1,\n  RecoilValueNotReady: RecoilValueNotReady$1\n} = Recoil_Node;\n\nconst {\n  reactMode: reactMode$1\n} = Recoil_ReactMode;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  isRecoilValue: isRecoilValue$1\n} = Recoil_RecoilValue$1;\n\n\n\n\n\nfunction getRecoilValueAsLoadable(store, {\n  key\n}, treeState = store.getState().currentTree) {\n  var _storeState$nextTree, _storeState$previousT;\n\n  // Reading from an older tree can cause bugs because the dependencies that we\n  // discover during the read are lost.\n  const storeState = store.getState();\n\n  if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to read from a discarded tree');\n  }\n\n  const loadable = getNodeLoadable$1(store, treeState, key);\n\n  if (loadable.state === 'loading') {\n    loadable.contents.catch(() => {\n      /**\n       * HACK: intercept thrown error here to prevent an uncaught promise exception. Ideally this would happen closer to selector\n       * execution (perhaps introducing a new ERROR class to be resolved by async selectors that are in an error state)\n       */\n      return;\n    });\n  }\n\n  return loadable;\n}\n\nfunction applyAtomValueWrites(atomValues, writes) {\n  const result = atomValues.clone();\n  writes.forEach((v, k) => {\n    if (v.state === 'hasValue' && v.contents instanceof DefaultValue$1) {\n      result.delete(k);\n    } else {\n      result.set(k, v);\n    }\n  });\n  return result;\n}\n\nfunction valueFromValueOrUpdater(store, state, {\n  key\n}, valueOrUpdater) {\n  if (typeof valueOrUpdater === 'function') {\n    // Updater form: pass in the current value. Throw if the current value\n    // is unavailable (namely when updating an async selector that's\n    // pending or errored):\n    const current = getNodeLoadable$1(store, state, key);\n\n    if (current.state === 'loading') {\n      throw new RecoilValueNotReady$1(key);\n    } else if (current.state === 'hasError') {\n      throw current.contents;\n    } // T itself may be a function, so our refinement is not sufficient:\n\n\n    return valueOrUpdater(current.contents); // flowlint-line unclear-type:off\n  } else {\n    return valueOrUpdater;\n  }\n}\n\nfunction applyAction(store, state, action) {\n  if (action.type === 'set') {\n    const {\n      recoilValue,\n      valueOrUpdater\n    } = action;\n    const newValue = valueFromValueOrUpdater(store, state, recoilValue, valueOrUpdater);\n    const writes = setNodeValue$1(store, state, recoilValue.key, newValue);\n\n    for (const [key, loadable] of writes.entries()) {\n      writeLoadableToTreeState(state, key, loadable);\n    }\n  } else if (action.type === 'setLoadable') {\n    const {\n      recoilValue: {\n        key\n      },\n      loadable\n    } = action;\n    writeLoadableToTreeState(state, key, loadable);\n  } else if (action.type === 'markModified') {\n    const {\n      recoilValue: {\n        key\n      }\n    } = action;\n    state.dirtyAtoms.add(key);\n  } else if (action.type === 'setUnvalidated') {\n    var _node$invalidate;\n\n    // Write value directly to state bypassing the Node interface as the node\n    // definitions may not have been loaded yet when processing the initial snapshot.\n    const {\n      recoilValue: {\n        key\n      },\n      unvalidatedValue\n    } = action;\n    const node = getNodeMaybe$2(key);\n    node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n    state.atomValues.delete(key);\n    state.nonvalidatedAtoms.set(key, unvalidatedValue);\n    state.dirtyAtoms.add(key);\n  } else {\n    Recoil_recoverableViolation(`Unknown action ${action.type}`);\n  }\n}\n\nfunction writeLoadableToTreeState(state, key, loadable) {\n  if (loadable.state === 'hasValue' && loadable.contents instanceof DefaultValue$1) {\n    state.atomValues.delete(key);\n  } else {\n    state.atomValues.set(key, loadable);\n  }\n\n  state.dirtyAtoms.add(key);\n  state.nonvalidatedAtoms.delete(key);\n}\n\nfunction applyActionsToStore(store, actions) {\n  store.replaceState(state => {\n    const newState = copyTreeState(state);\n\n    for (const action of actions) {\n      applyAction(store, newState, action);\n    }\n\n    invalidateDownstreams(store, newState);\n    return newState;\n  });\n}\n\nfunction queueOrPerformStateUpdate(store, action) {\n  if (batchStack.length) {\n    const actionsByStore = batchStack[batchStack.length - 1];\n    let actions = actionsByStore.get(store);\n\n    if (!actions) {\n      actionsByStore.set(store, actions = []);\n    }\n\n    actions.push(action);\n  } else {\n    applyActionsToStore(store, [action]);\n  }\n}\n\nconst batchStack = [];\n\nfunction batchStart() {\n  const actionsByStore = new Map();\n  batchStack.push(actionsByStore);\n  return () => {\n    for (const [store, actions] of actionsByStore) {\n      applyActionsToStore(store, actions);\n    }\n\n    const popped = batchStack.pop();\n\n    if (popped !== actionsByStore) {\n      Recoil_recoverableViolation('Incorrect order of batch popping');\n    }\n  };\n}\n\nfunction copyTreeState(state) {\n  return { ...state,\n    atomValues: state.atomValues.clone(),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone(),\n    dirtyAtoms: new Set(state.dirtyAtoms)\n  };\n}\n\nfunction invalidateDownstreams(store, state) {\n  // Inform any nodes that were changed or downstream of changes so that they\n  // can clear out any caches as needed due to the update:\n  const downstreams = getDownstreamNodes$1(store, state, state.dirtyAtoms);\n\n  for (const key of downstreams) {\n    var _getNodeMaybe, _getNodeMaybe$invalid;\n\n    (_getNodeMaybe = getNodeMaybe$2(key)) === null || _getNodeMaybe === void 0 ? void 0 : (_getNodeMaybe$invalid = _getNodeMaybe.invalidate) === null || _getNodeMaybe$invalid === void 0 ? void 0 : _getNodeMaybe$invalid.call(_getNodeMaybe, state);\n  }\n}\n\nfunction setRecoilValue(store, recoilValue, valueOrUpdater) {\n  queueOrPerformStateUpdate(store, {\n    type: 'set',\n    recoilValue,\n    valueOrUpdater\n  });\n}\n\nfunction setRecoilValueLoadable(store, recoilValue, loadable) {\n  if (loadable instanceof DefaultValue$1) {\n    return setRecoilValue(store, recoilValue, loadable);\n  }\n\n  queueOrPerformStateUpdate(store, {\n    type: 'setLoadable',\n    recoilValue,\n    loadable: loadable\n  });\n}\n\nfunction markRecoilValueModified(store, recoilValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'markModified',\n    recoilValue\n  });\n}\n\nfunction setUnvalidatedRecoilValue(store, recoilValue, unvalidatedValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'setUnvalidated',\n    recoilValue,\n    unvalidatedValue\n  });\n}\n\nfunction subscribeToRecoilValue(store, {\n  key\n}, callback, componentDebugName = null) {\n  const subID = getNextComponentID$1();\n  const storeState = store.getState();\n\n  if (!storeState.nodeToComponentSubscriptions.has(key)) {\n    storeState.nodeToComponentSubscriptions.set(key, new Map());\n  }\n\n  Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, [componentDebugName !== null && componentDebugName !== void 0 ? componentDebugName : '<not captured>', callback]); // Handle the case that, during the same tick that we are subscribing, an atom\n  // has been updated by some effect handler. Otherwise we will miss the update.\n\n  const mode = reactMode$1();\n\n  if (mode.early && (mode.mode === 'LEGACY' || mode.mode === 'MUTABLE_SOURCE')) {\n    const nextTree = store.getState().nextTree;\n\n    if (nextTree && nextTree.dirtyAtoms.has(key)) {\n      callback(nextTree);\n    }\n  }\n\n  return {\n    release: () => {\n      const releaseStoreState = store.getState();\n      const subs = releaseStoreState.nodeToComponentSubscriptions.get(key);\n\n      if (subs === undefined || !subs.has(subID)) {\n        Recoil_recoverableViolation(`Subscription missing at release time for atom ${key}. This is a bug in Recoil.`);\n        return;\n      }\n\n      subs.delete(subID);\n\n      if (subs.size === 0) {\n        releaseStoreState.nodeToComponentSubscriptions.delete(key);\n      }\n    }\n  };\n}\n\nfunction refreshRecoilValue(store, recoilValue) {\n  var _node$clearCache;\n\n  const {\n    currentTree\n  } = store.getState();\n  const node = getNode$2(recoilValue.key);\n  (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, currentTree);\n}\n\nvar Recoil_RecoilValueInterface = {\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  getRecoilValueAsLoadable,\n  setRecoilValue,\n  setRecoilValueLoadable,\n  markRecoilValueModified,\n  setUnvalidatedRecoilValue,\n  subscribeToRecoilValue,\n  isRecoilValue: isRecoilValue$1,\n  applyAtomValueWrites,\n  // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot\n  batchStart,\n  writeLoadableToTreeState,\n  invalidateDownstreams,\n  copyTreeState,\n  refreshRecoilValue,\n  invalidateDownstreams_FOR_TESTING: invalidateDownstreams\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * The someSet() method tests whether some elements in the given Set pass the\n * test implemented by the provided function.\n */\n\nfunction someSet(set, callback, context) {\n  const iterator = set.entries();\n  let current = iterator.next();\n\n  while (!current.done) {\n    const entry = current.value;\n\n    if (callback.call(context, entry[1], entry[0], set)) {\n      return true;\n    }\n\n    current = iterator.next();\n  }\n\n  return false;\n}\n\nvar Recoil_someSet = someSet;\n\nconst {\n  cleanUpNode: cleanUpNode$1\n} = Recoil_FunctionalCore;\n\nconst {\n  deleteNodeConfigIfPossible: deleteNodeConfigIfPossible$1,\n  getNode: getNode$3\n} = Recoil_Node;\n\nconst {\n  RetentionZone: RetentionZone$2\n} = Recoil_RetentionZone;\n\n\n\n\n\n\n\n // Components that aren't mounted after suspending for this long will be assumed\n// to be discarded and their resources released.\n\n\nconst SUSPENSE_TIMEOUT_MS = 120000;\nconst emptySet$1 = new Set();\n\nfunction releaseRetainablesNowOnCurrentTree(store, retainables) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree;\n\n  if (storeState.nextTree) {\n    Recoil_recoverableViolation('releaseNodesNowOnCurrentTree should only be called at the end of a batch');\n    return; // leak memory rather than erase something that's about to be used.\n  }\n\n  const nodes = new Set();\n\n  for (const r of retainables) {\n    if (r instanceof RetentionZone$2) {\n      for (const n of nodesRetainedByZone(storeState, r)) {\n        nodes.add(n);\n      }\n    } else {\n      nodes.add(r);\n    }\n  }\n\n  const releasableNodes = findReleasableNodes(store, nodes);\n\n  for (const node of releasableNodes) {\n    releaseNode(store, treeState, node);\n  }\n}\n\nfunction findReleasableNodes(store, searchFromNodes) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree;\n  const graph = store.getGraph(treeState.version);\n  const releasableNodes = new Set(); // mutated to collect answer\n\n  const nonReleasableNodes = new Set();\n  findReleasableNodesInner(searchFromNodes);\n  return releasableNodes;\n\n  function findReleasableNodesInner(searchFromNodes) {\n    const releasableNodesFoundThisIteration = new Set();\n    const downstreams = getDownstreamNodesInTopologicalOrder(store, treeState, searchFromNodes, releasableNodes, // don't descend into these\n    nonReleasableNodes // don't descend into these\n    ); // Find which of the downstream nodes are releasable and which are not:\n\n    for (const node of downstreams) {\n      var _storeState$retention;\n\n      // Not releasable if configured to be retained forever:\n      if (getNode$3(node).retainedBy === 'recoilRoot') {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if retained directly by a component:\n\n\n      if (((_storeState$retention = storeState.retention.referenceCounts.get(node)) !== null && _storeState$retention !== void 0 ? _storeState$retention : 0) > 0) {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if retained by a zone:\n\n\n      if (zonesThatCouldRetainNode(node).some(z => storeState.retention.referenceCounts.get(z))) {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if it has a non-releasable child (which will already be in\n      // nonReleasableNodes because we are going in topological order):\n\n\n      const nodeChildren = graph.nodeToNodeSubscriptions.get(node);\n\n      if (nodeChildren && Recoil_someSet(nodeChildren, child => nonReleasableNodes.has(child))) {\n        nonReleasableNodes.add(node);\n        continue;\n      }\n\n      releasableNodes.add(node);\n      releasableNodesFoundThisIteration.add(node);\n    } // If we found any releasable nodes, we need to walk UP from those nodes to\n    // find whether their parents can now be released as well:\n\n\n    const parents = new Set();\n\n    for (const node of releasableNodesFoundThisIteration) {\n      for (const parent of (_graph$nodeDeps$get = graph.nodeDeps.get(node)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : emptySet$1) {\n        var _graph$nodeDeps$get;\n\n        if (!releasableNodes.has(parent)) {\n          parents.add(parent);\n        }\n      }\n    }\n\n    if (parents.size) {\n      findReleasableNodesInner(parents);\n    }\n  }\n} // Children before parents\n\n\nfunction getDownstreamNodesInTopologicalOrder(store, treeState, nodes, // Mutable set is destroyed in place\ndoNotDescendInto1, doNotDescendInto2) {\n  const graph = store.getGraph(treeState.version);\n  const answer = [];\n  const visited = new Set();\n\n  while (nodes.size > 0) {\n    visit(Recoil_nullthrows(nodes.values().next().value));\n  }\n\n  return answer;\n\n  function visit(node) {\n    if (doNotDescendInto1.has(node) || doNotDescendInto2.has(node)) {\n      nodes.delete(node);\n      return;\n    }\n\n    if (visited.has(node)) {\n      return;\n    }\n\n    const children = graph.nodeToNodeSubscriptions.get(node);\n\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n\n    visited.add(node);\n    nodes.delete(node);\n    answer.push(node);\n  }\n}\n\nfunction releaseNode(store, treeState, node) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  } // Atom effects, in-closure caches, etc.:\n\n\n  cleanUpNode$1(store, node); // Delete from store state:\n\n  const storeState = store.getState();\n  storeState.knownAtoms.delete(node);\n  storeState.knownSelectors.delete(node);\n  storeState.nodeTransactionSubscriptions.delete(node);\n  storeState.retention.referenceCounts.delete(node);\n  const zones = zonesThatCouldRetainNode(node);\n\n  for (const zone of zones) {\n    var _storeState$retention2;\n\n    (_storeState$retention2 = storeState.retention.nodesRetainedByZone.get(zone)) === null || _storeState$retention2 === void 0 ? void 0 : _storeState$retention2.delete(node);\n  } // Note that we DO NOT delete from nodeToComponentSubscriptions because this\n  // already happens when the last component that was retaining the node unmounts,\n  // and this could happen either before or after that.\n  // Delete from TreeState and dep graph:\n\n\n  treeState.atomValues.delete(node);\n  treeState.dirtyAtoms.delete(node);\n  treeState.nonvalidatedAtoms.delete(node);\n  const graph = storeState.graphsByVersion.get(treeState.version);\n\n  if (graph) {\n    const deps = graph.nodeDeps.get(node);\n\n    if (deps !== undefined) {\n      graph.nodeDeps.delete(node);\n\n      for (const dep of deps) {\n        var _graph$nodeToNodeSubs;\n\n        (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(dep)) === null || _graph$nodeToNodeSubs === void 0 ? void 0 : _graph$nodeToNodeSubs.delete(node);\n      }\n    } // No need to delete sub's deps as there should be no subs at this point.\n    // But an invariant would require deleting nodes in topological order.\n\n\n    graph.nodeToNodeSubscriptions.delete(node);\n  } // Node config (for family members only as their configs can be recreated, and\n  // only if they are not retained within any other Stores):\n\n\n  deleteNodeConfigIfPossible$1(node);\n}\n\nfunction nodesRetainedByZone(storeState, zone) {\n  var _storeState$retention3;\n\n  return (_storeState$retention3 = storeState.retention.nodesRetainedByZone.get(zone)) !== null && _storeState$retention3 !== void 0 ? _storeState$retention3 : emptySet$1;\n}\n\nfunction zonesThatCouldRetainNode(node) {\n  const retainedBy = getNode$3(node).retainedBy;\n\n  if (retainedBy === undefined || retainedBy === 'components' || retainedBy === 'recoilRoot') {\n    return [];\n  } else if (retainedBy instanceof RetentionZone$2) {\n    return [retainedBy];\n  } else {\n    return retainedBy; // it's an array of zones\n  }\n}\n\nfunction scheduleOrPerformPossibleReleaseOfRetainable(store, retainable) {\n  const state = store.getState();\n\n  if (state.nextTree) {\n    state.retention.retainablesToCheckForRelease.add(retainable);\n  } else {\n    releaseRetainablesNowOnCurrentTree(store, new Set([retainable]));\n  }\n}\n\nfunction updateRetainCount(store, retainable, delta) {\n  var _map$get;\n\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const map = store.getState().retention.referenceCounts;\n  const newCount = ((_map$get = map.get(retainable)) !== null && _map$get !== void 0 ? _map$get : 0) + delta;\n\n  if (newCount === 0) {\n    updateRetainCountToZero(store, retainable);\n  } else {\n    map.set(retainable, newCount);\n  }\n}\n\nfunction updateRetainCountToZero(store, retainable) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const map = store.getState().retention.referenceCounts;\n  map.delete(retainable);\n  scheduleOrPerformPossibleReleaseOfRetainable(store, retainable);\n}\n\nfunction releaseScheduledRetainablesNow(store) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const state = store.getState();\n  releaseRetainablesNowOnCurrentTree(store, state.retention.retainablesToCheckForRelease);\n  state.retention.retainablesToCheckForRelease.clear();\n}\n\nfunction retainedByOptionWithDefault(r) {\n  // The default will change from 'recoilRoot' to 'components' in the future.\n  return r === undefined ? 'recoilRoot' : r;\n}\n\nvar Recoil_Retention = {\n  SUSPENSE_TIMEOUT_MS,\n  updateRetainCount,\n  updateRetainCountToZero,\n  releaseScheduledRetainablesNow,\n  retainedByOptionWithDefault\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\nconst {\n  unstable_batchedUpdates\n} = reactDom;\n\nvar ReactBatchedUpdates = {\n  unstable_batchedUpdates\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\n// @fb-only: const {unstable_batchedUpdates} = require('ReactDOMComet');\n// prettier-ignore\nconst {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n} = ReactBatchedUpdates; // @oss-only\n\n\nvar Recoil_ReactBatchedUpdates = {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\nconst {\n  batchStart: batchStart$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  unstable_batchedUpdates: unstable_batchedUpdates$2\n} = Recoil_ReactBatchedUpdates;\n\nlet batcher = unstable_batchedUpdates$2; // flowlint-next-line unclear-type:off\n\n/**\n * Sets the provided batcher function as the batcher function used by Recoil.\n *\n * Set the batcher to a custom batcher for your renderer,\n * if you use a renderer other than React DOM or React Native.\n */\nconst setBatcher = newBatcher => {\n  batcher = newBatcher;\n};\n/**\n * Returns the current batcher function.\n */\n\n\nconst getBatcher = () => batcher;\n/**\n * Calls the current batcher function and passes the\n * provided callback function.\n */\n\n\nconst batchUpdates = callback => {\n  batcher(() => {\n    let batchEnd = () => undefined;\n\n    try {\n      batchEnd = batchStart$1();\n      callback();\n    } finally {\n      batchEnd();\n    }\n  });\n};\n\nvar Recoil_Batching = {\n  getBatcher,\n  setBatcher,\n  batchUpdates\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Combines multiple Iterables into a single Iterable.\n * Traverses the input Iterables in the order provided and maintains the order\n * of their elements.\n *\n * Example:\n * ```\n * const r = Array.from(concatIterables(['a', 'b'], ['c'], ['d', 'e', 'f']));\n * r == ['a', 'b', 'c', 'd', 'e', 'f'];\n * ```\n */\n\nfunction* concatIterables(iters) {\n  for (const iter of iters) {\n    for (const val of iter) {\n      yield val;\n    }\n  }\n}\n\nvar Recoil_concatIterables = concatIterables;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nconst isSSR = typeof window === 'undefined';\nconst isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'; // eslint-disable-line fb-www/typeof-undefined\n\nvar Recoil_Environment = {\n  isSSR,\n  isReactNative\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Caches a function's results based on the key returned by the passed\n * hashFunction.\n */\n\nfunction memoizeWithArgsHash(fn, hashFunction) {\n  let cache;\n\n  const memoizedFn = (...args) => {\n    if (!cache) {\n      cache = {};\n    }\n\n    const key = hashFunction(...args);\n\n    if (!Object.hasOwnProperty.call(cache, key)) {\n      cache[key] = fn.apply(this, args);\n    }\n\n    return cache[key];\n  };\n\n  return memoizedFn;\n}\n/**\n * Caches a function's results based on a comparison of the arguments.\n * Only caches the last return of the function.\n * Defaults to reference equality\n */\n\n\nfunction memoizeOneWithArgsHash(fn, hashFunction) {\n  let lastKey;\n  let lastResult; // breaking cache when arguments change\n\n  const memoizedFn = (...args) => {\n    const key = hashFunction(...args);\n\n    if (lastKey === key) {\n      return lastResult;\n    }\n\n    lastKey = key;\n    lastResult = fn.apply(this, args);\n    return lastResult;\n  };\n\n  return memoizedFn;\n}\n/**\n * Caches a function's results based on a comparison of the arguments.\n * Only caches the last return of the function.\n * Defaults to reference equality\n */\n\n\nfunction memoizeOneWithArgsHashAndInvalidation(fn, hashFunction) {\n  let lastKey;\n  let lastResult; // breaking cache when arguments change\n\n  const memoizedFn = (...args) => {\n    const key = hashFunction(...args);\n\n    if (lastKey === key) {\n      return lastResult;\n    }\n\n    lastKey = key;\n    lastResult = fn.apply(this, args);\n    return lastResult;\n  };\n\n  const invalidate = () => {\n    lastKey = null;\n  };\n\n  return [memoizedFn, invalidate];\n}\n\nvar Recoil_Memoize = {\n  memoizeWithArgsHash,\n  memoizeOneWithArgsHash,\n  memoizeOneWithArgsHashAndInvalidation\n};\n\nconst {\n  batchUpdates: batchUpdates$1\n} = Recoil_Batching;\n\nconst {\n  initializeNode: initializeNode$1,\n  peekNodeInfo: peekNodeInfo$1\n} = Recoil_FunctionalCore;\n\nconst {\n  graph: graph$1\n} = Recoil_Graph;\n\nconst {\n  getNextStoreID: getNextStoreID$1\n} = Recoil_Keys;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$1,\n  recoilValues: recoilValues$1,\n  recoilValuesForKeys: recoilValuesForKeys$2\n} = Recoil_Node;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$2,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$1,\n  setRecoilValue: setRecoilValue$1,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  updateRetainCount: updateRetainCount$1\n} = Recoil_Retention;\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$2,\n  makeEmptyStoreState: makeEmptyStoreState$1\n} = Recoil_State;\n\n\n\nconst {\n  isSSR: isSSR$1\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\nconst {\n  memoizeOneWithArgsHashAndInvalidation: memoizeOneWithArgsHashAndInvalidation$1\n} = Recoil_Memoize;\n\n\n\n // Opaque at this surface because it's part of the public API from here.\n\n\nconst retainWarning = `\nRecoil Snapshots only last for the duration of the callback they are provided to. To keep a Snapshot longer, do this:\n\n  const release = snapshot.retain();\n  try {\n    await doSomethingWithSnapshot(snapshot);\n  } finally {\n    release();\n  }\n\nThis is currently a DEV-only warning but will become a thrown exception in the next release of Recoil.\n`; // A \"Snapshot\" is \"read-only\" and captures a specific set of values of atoms.\n// However, the data-flow-graph and selector values may evolve as selector\n// evaluation functions are executed and async selectors resolve.\n\nclass Snapshot {\n  // eslint-disable-next-line fb-www/no-uninitialized-properties\n  constructor(storeState) {\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_refCount\", 1);\n\n    _defineProperty(this, \"getLoadable\", recoilValue => {\n      this.checkRefCount_INTERNAL();\n      return getRecoilValueAsLoadable$1(this._store, recoilValue);\n    });\n\n    _defineProperty(this, \"getPromise\", recoilValue => {\n      this.checkRefCount_INTERNAL();\n      return this.getLoadable(recoilValue).toPromise();\n    });\n\n    _defineProperty(this, \"getNodes_UNSTABLE\", opt => {\n      this.checkRefCount_INTERNAL(); // TODO Deal with modified selectors\n\n      if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {\n        if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {\n          return [];\n        }\n\n        const state = this._store.getState().currentTree;\n\n        return recoilValuesForKeys$2(state.dirtyAtoms);\n      }\n\n      const knownAtoms = this._store.getState().knownAtoms;\n\n      const knownSelectors = this._store.getState().knownSelectors;\n\n      return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys$2(Recoil_concatIterables([this._store.getState().knownAtoms, this._store.getState().knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), ({\n        key\n      }) => !knownAtoms.has(key) && !knownSelectors.has(key));\n    });\n\n    _defineProperty(this, \"getInfo_UNSTABLE\", ({\n      key\n    }) => {\n      this.checkRefCount_INTERNAL(); // $FlowFixMe[escaped-generic]\n\n      return peekNodeInfo$1(this._store, this._store.getState().currentTree, key);\n    });\n\n    _defineProperty(this, \"map\", mapper => {\n      this.checkRefCount_INTERNAL();\n      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n      mapper(mutableSnapshot); // if removing batchUpdates from `set` add it here\n\n      return mutableSnapshot;\n    });\n\n    _defineProperty(this, \"asyncMap\", async mapper => {\n      this.checkRefCount_INTERNAL();\n      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n      mutableSnapshot.retain(); // Retain new snapshot during async mapper\n\n      await mapper(mutableSnapshot); // Continue to retain the new snapshot for the user, but auto-release it\n      // after the next tick, the same as a new synchronous snapshot.\n\n      mutableSnapshot.autoRelease_INTERNAL();\n      return mutableSnapshot;\n    });\n\n    this._store = {\n      storeID: getNextStoreID$1(),\n      getState: () => storeState,\n      replaceState: replacer => {\n        storeState.currentTree = replacer(storeState.currentTree); // no batching so nextTree is never active\n      },\n      getGraph: version => {\n        const graphs = storeState.graphsByVersion;\n\n        if (graphs.has(version)) {\n          return Recoil_nullthrows(graphs.get(version));\n        }\n\n        const newGraph = graph$1();\n        graphs.set(version, newGraph);\n        return newGraph;\n      },\n      subscribeToTransactions: () => ({\n        release: () => {}\n      }),\n      addTransactionMetadata: () => {\n        throw Recoil_err('Cannot subscribe to Snapshots');\n      }\n    }; // Initialize any nodes that are live in the parent store (primarily so that\n    // this snapshot gets counted towards the node's live stores count).\n    // TODO Optimize this when cloning snapshots for callbacks\n\n    for (const nodeKey of this._store.getState().knownAtoms) {\n      initializeNode$1(this._store, nodeKey, 'get');\n      updateRetainCount$1(this._store, nodeKey, 1);\n    }\n\n    this.autoRelease_INTERNAL();\n  }\n\n  retain() {\n    if (this._refCount <= 0) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw Recoil_err('Snapshot has already been released.');\n      } else {\n        Recoil_recoverableViolation('Attempt to retain() Snapshot that was already released.');\n      }\n    }\n\n    this._refCount++;\n    let released = false;\n    return () => {\n      if (!released) {\n        released = true;\n\n        this._release();\n      }\n    };\n  }\n  /**\n   * Release the snapshot on the next tick.  This means the snapshot is retained\n   * during the execution of the current function using it.\n   */\n\n\n  autoRelease_INTERNAL() {\n    if (!isSSR$1) {\n      window.setTimeout(() => this._release(), 0);\n    }\n  }\n\n  _release() {\n    this._refCount--;\n\n    if (this._refCount === 0) {\n      this._store.getState().nodeCleanupFunctions.forEach(cleanup => cleanup());\n\n      this._store.getState().nodeCleanupFunctions.clear();\n\n      if (!Recoil_gkx('recoil_memory_managament_2020')) {\n        return;\n      } // Temporarily nerfing this to allow us to find broken call sites without\n      // actually breaking anybody yet.\n      // for (const k of this._store.getState().knownAtoms) {\n      //   updateRetainCountToZero(this._store, k);\n      // }\n\n    } else if (this._refCount < 0) {\n      if (process.env.NODE_ENV !== \"production\") {\n        Recoil_recoverableViolation('Snapshot released an extra time.');\n      }\n    }\n  }\n\n  isRetained() {\n    return this._refCount > 0;\n  }\n\n  checkRefCount_INTERNAL() {\n    if (Recoil_gkx('recoil_memory_managament_2020') && this._refCount <= 0) {\n      if (process.env.NODE_ENV !== \"production\") {\n        Recoil_recoverableViolation(retainWarning);\n      } // What we will ship later:\n      // throw err(retainWarning);\n\n    }\n  }\n\n  getStore_INTERNAL() {\n    this.checkRefCount_INTERNAL();\n    return this._store;\n  }\n\n  getID() {\n    this.checkRefCount_INTERNAL();\n    return this._store.getState().currentTree.stateID;\n  } // We want to allow the methods to be destructured and used as accessors\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n}\n\nfunction cloneStoreState(store, treeState, bumpVersion = false) {\n  const storeState = store.getState();\n  const version = bumpVersion ? getNextTreeStateVersion$2() : treeState.version;\n  return {\n    currentTree: bumpVersion ? {\n      // TODO snapshots shouldn't really have versions because a new version number\n      // is always assigned when the snapshot is gone to.\n      version,\n      stateID: version,\n      transactionMetadata: { ...treeState.transactionMetadata\n      },\n      dirtyAtoms: new Set(treeState.dirtyAtoms),\n      atomValues: treeState.atomValues.clone(),\n      nonvalidatedAtoms: treeState.nonvalidatedAtoms.clone()\n    } : treeState,\n    commitDepth: 0,\n    nextTree: null,\n    previousTree: null,\n    knownAtoms: new Set(storeState.knownAtoms),\n    // FIXME here's a copy\n    knownSelectors: new Set(storeState.knownSelectors),\n    // FIXME here's a copy\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    // FIXME here's a copy\n    // Create blank cleanup handlers for atoms so snapshots don't re-run\n    // atom effects.\n    nodeCleanupFunctions: new Map(Recoil_mapIterable(storeState.nodeCleanupFunctions.entries(), ([key]) => [key, () => {}]))\n  };\n} // Factory to build a fresh snapshot\n\n\nfunction freshSnapshot(initializeState) {\n  const snapshot = new Snapshot(makeEmptyStoreState$1());\n  return initializeState != null ? snapshot.map(initializeState) : snapshot;\n} // Factory to clone a snapahot state\n\n\nconst [memoizedCloneSnapshot, invalidateMemoizedSnapshot] = memoizeOneWithArgsHashAndInvalidation$1((store, version) => {\n  const storeState = store.getState();\n  const treeState = version === 'current' ? storeState.currentTree : Recoil_nullthrows(storeState.previousTree);\n  return new Snapshot(cloneStoreState(store, treeState));\n}, (store, version) => {\n  var _store$getState$previ;\n\n  return String(version) + String(store.storeID) + String(store.getState().currentTree.version) + String((_store$getState$previ = store.getState().previousTree) === null || _store$getState$previ === void 0 ? void 0 : _store$getState$previ.version);\n});\n\nfunction cloneSnapshot(store, version = 'current') {\n  const snapshot = memoizedCloneSnapshot(store, version);\n\n  if (!snapshot.isRetained()) {\n    invalidateMemoizedSnapshot();\n    return memoizedCloneSnapshot(store, version);\n  }\n\n  return snapshot;\n}\n\nclass MutableSnapshot extends Snapshot {\n  constructor(snapshot, batch) {\n    super(cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true));\n\n    _defineProperty(this, \"_batch\", void 0);\n\n    _defineProperty(this, \"set\", (recoilState, newValueOrUpdater) => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // This batchUpdates ensures this `set` is applied immediately and you can\n      // read the written value after calling `set`. I would like to remove this\n      // behavior and only batch in `Snapshot.map`, but this would be a breaking\n      // change potentially.\n\n      this._batch(() => {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, newValueOrUpdater);\n      });\n    });\n\n    _defineProperty(this, \"reset\", recoilState => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n      this._batch(() => {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n      });\n    });\n\n    _defineProperty(this, \"setUnvalidatedAtomValues_DEPRECATED\", values => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n      batchUpdates$1(() => {\n        for (const [k, v] of values.entries()) {\n          updateRetainCount$1(store, k, 1);\n          setUnvalidatedRecoilValue$1(store, new AbstractRecoilValue$2(k), v);\n        }\n      });\n    });\n\n    this._batch = batch;\n  } // We want to allow the methods to be destructured and used as accessors\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n}\n\nvar Recoil_Snapshot = {\n  Snapshot,\n  MutableSnapshot,\n  freshSnapshot,\n  cloneSnapshot\n};\n\nvar Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;\nvar Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;\nvar Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;\nvar Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\n\nvar Recoil_Snapshot$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Snapshot: Recoil_Snapshot_1,\n  MutableSnapshot: Recoil_Snapshot_2,\n  freshSnapshot: Recoil_Snapshot_3,\n  cloneSnapshot: Recoil_Snapshot_4\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction unionSets(...sets) {\n  const result = new Set();\n\n  for (const set of sets) {\n    for (const value of set) {\n      result.add(value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_unionSets = unionSets;\n\nconst {\n  useRef\n} = react;\n/**\n * The same as `useRef()` except that if a function is specified then it will\n * call that function to get the value to initialize the reference with.\n * This is similar to how `useState()` behaves when given a function.  It allows\n * the user to avoid generating the initial value for subsequent renders.\n * The tradeoff is that to set the reference to a function itself you need to\n * nest it: useRefInitOnce(() => () => {...});\n */\n\n\nfunction useRefInitOnce(initialValue) {\n  // $FlowExpectedError[incompatible-call]\n  const ref = useRef(initialValue);\n\n  if (ref.current === initialValue && typeof initialValue === 'function') {\n    // $FlowExpectedError[incompatible-use]\n    ref.current = initialValue();\n  }\n\n  return ref;\n}\n\nvar Recoil_useRefInitOnce = useRefInitOnce;\n\n// @fb-only: const RecoilusagelogEvent = require('RecoilusagelogEvent');\n// @fb-only: const RecoilUsageLogFalcoEvent = require('RecoilUsageLogFalcoEvent');\n// @fb-only: const URI = require('URI');\n\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$3,\n  makeEmptyStoreState: makeEmptyStoreState$2\n} = Recoil_State;\n\nconst {\n  cleanUpNode: cleanUpNode$2,\n  getDownstreamNodes: getDownstreamNodes$2,\n  initializeNode: initializeNode$2,\n  setNodeValue: setNodeValue$2,\n  setUnvalidatedAtomValue_DEPRECATED: setUnvalidatedAtomValue_DEPRECATED$1\n} = Recoil_FunctionalCore;\n\nconst {\n  graph: graph$2\n} = Recoil_Graph;\n\nconst {\n  cloneGraph: cloneGraph$1\n} = Recoil_Graph;\n\nconst {\n  getNextStoreID: getNextStoreID$2\n} = Recoil_Keys;\n\nconst {\n  createMutableSource: createMutableSource$1,\n  reactMode: reactMode$2\n} = Recoil_ReactMode;\n\nconst {\n  applyAtomValueWrites: applyAtomValueWrites$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  releaseScheduledRetainablesNow: releaseScheduledRetainablesNow$1\n} = Recoil_Retention;\n\nconst {\n  freshSnapshot: freshSnapshot$1\n} = Recoil_Snapshot$1;\n\n\n\nconst {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef: useRef$1,\n  useState\n} = react;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction notInAContext() {\n  throw Recoil_err('This component must be used inside a <RecoilRoot> component.');\n}\n\nconst defaultStore = Object.freeze({\n  storeID: getNextStoreID$2(),\n  getState: notInAContext,\n  replaceState: notInAContext,\n  getGraph: notInAContext,\n  subscribeToTransactions: notInAContext,\n  addTransactionMetadata: notInAContext\n});\nlet stateReplacerIsBeingExecuted = false;\n\nfunction startNextTreeIfNeeded(store) {\n  if (stateReplacerIsBeingExecuted) {\n    throw Recoil_err('An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.');\n  }\n\n  const storeState = store.getState();\n\n  if (storeState.nextTree === null) {\n    if (Recoil_gkx('recoil_memory_managament_2020') && Recoil_gkx('recoil_release_on_cascading_update_killswitch_2021')) {\n      // If this is a cascading update (that is, rendering due to one state change\n      // invokes a second state change), we won't have cleaned up retainables yet\n      // because this normally happens after notifying components. Do it before\n      // proceeding with the cascading update so that it remains predictable:\n      if (storeState.commitDepth > 0) {\n        releaseScheduledRetainablesNow$1(store);\n      }\n    }\n\n    const version = storeState.currentTree.version;\n    const nextVersion = getNextTreeStateVersion$3();\n    storeState.nextTree = { ...storeState.currentTree,\n      version: nextVersion,\n      stateID: nextVersion,\n      dirtyAtoms: new Set(),\n      transactionMetadata: {}\n    };\n    storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));\n  }\n}\n\nconst AppContext = react.createContext({\n  current: defaultStore\n});\n\nconst useStoreRef = () => useContext(AppContext); // $FlowExpectedError[incompatible-call]\n\n\nconst MutableSourceContext = react.createContext(null);\n\nfunction useRecoilMutableSource() {\n  const mutableSource = useContext(MutableSourceContext);\n\n  if (mutableSource == null) {\n    Recoil_expectationViolation('Attempted to use a Recoil hook outside of a <RecoilRoot>. ' + '<RecoilRoot> must be an ancestor of any component that uses ' + 'Recoil hooks.');\n  }\n\n  return mutableSource;\n}\n\nfunction notifyComponents(store, storeState, treeState) {\n  const dependentNodes = getDownstreamNodes$2(store, treeState, treeState.dirtyAtoms);\n\n  for (const key of dependentNodes) {\n    const comps = storeState.nodeToComponentSubscriptions.get(key);\n\n    if (comps) {\n      for (const [_subID, [_debugName, callback]] of comps) {\n        callback(treeState);\n      }\n    }\n  }\n}\n\nfunction sendEndOfBatchNotifications(store) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:\n\n  const dirtyAtoms = treeState.dirtyAtoms;\n\n  if (dirtyAtoms.size) {\n    // Execute Node-specific subscribers before global subscribers\n    for (const [key, subscriptions] of storeState.nodeTransactionSubscriptions) {\n      if (dirtyAtoms.has(key)) {\n        for (const [_, subscription] of subscriptions) {\n          subscription(store);\n        }\n      }\n    }\n\n    for (const [_, subscription] of storeState.transactionSubscriptions) {\n      subscription(store);\n    }\n\n    if (!reactMode$2().early || storeState.suspendedComponentResolvers.size > 0) {\n      // Notifying components is needed to wake from suspense, even when using\n      // early rendering.\n      notifyComponents(store, storeState, treeState); // Wake all suspended components so the right one(s) can try to re-render.\n      // We need to wake up components not just when some asynchronous selector\n      // resolved, but also when changing synchronous values because this may cause\n      // a selector to change from asynchronous to synchronous, in which case there\n      // would be no follow-up asynchronous resolution to wake us up.\n      // TODO OPTIMIZATION Only wake up related downstream components\n\n      storeState.suspendedComponentResolvers.forEach(cb => cb());\n      storeState.suspendedComponentResolvers.clear();\n    }\n  } // Special behavior ONLY invoked by useInterface.\n  // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n\n  storeState.queuedComponentCallbacks_DEPRECATED.forEach(cb => cb(treeState));\n  storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);\n}\n\nfunction endBatch(store) {\n  const storeState = store.getState();\n  storeState.commitDepth++;\n\n  try {\n    const {\n      nextTree\n    } = storeState; // Ignore commits that are not because of Recoil transactions -- namely,\n    // because something above RecoilRoot re-rendered:\n\n    if (nextTree === null) {\n      return;\n    } // nextTree is now committed -- note that copying and reset occurs when\n    // a transaction begins, in startNextTreeIfNeeded:\n\n\n    storeState.previousTree = storeState.currentTree;\n    storeState.currentTree = nextTree;\n    storeState.nextTree = null;\n    sendEndOfBatchNotifications(store);\n\n    if (storeState.previousTree != null) {\n      storeState.graphsByVersion.delete(storeState.previousTree.version);\n    } else {\n      Recoil_recoverableViolation('Ended batch with no previous state, which is unexpected', 'recoil');\n    }\n\n    storeState.previousTree = null;\n\n    if (Recoil_gkx('recoil_memory_managament_2020')) {\n      releaseScheduledRetainablesNow$1(store);\n    }\n  } finally {\n    storeState.commitDepth--;\n  }\n}\n/*\n * The purpose of the Batcher is to observe when React batches end so that\n * Recoil state changes can be batched. Whenever Recoil state changes, we call\n * setState on the batcher. Then we wait for that change to be committed, which\n * signifies the end of the batch. That's when we respond to the Recoil change.\n */\n\n\nfunction Batcher({\n  setNotifyBatcherOfChange\n}) {\n  const storeRef = useStoreRef();\n  const [, setState] = useState([]);\n  setNotifyBatcherOfChange(() => setState({}));\n  useEffect(() => {\n    setNotifyBatcherOfChange(() => setState({})); // If an asynchronous selector resolves after the Batcher is unmounted,\n    // notifyBatcherOfChange will still be called. An error gets thrown whenever\n    // setState is called after a component is already unmounted, so this sets\n    // notifyBatcherOfChange to be a no-op.\n\n    return () => {\n      setNotifyBatcherOfChange(() => {});\n    };\n  }, [setNotifyBatcherOfChange]);\n  useEffect(() => {\n    // enqueueExecution runs this function immediately; it is only used to\n    // manipulate the order of useEffects during tests, since React seems to\n    // call useEffect in an unpredictable order sometimes.\n    Recoil_Queue.enqueueExecution('Batcher', () => {\n      endBatch(storeRef.current);\n    });\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== 'undefined' && !window.$recoilDebugStates) {\n    window.$recoilDebugStates = [];\n  }\n} // When removing this deprecated function, remove stateBySettingRecoilValue\n// which will no longer be needed.\n\n\nfunction initialStoreState_DEPRECATED(store, initializeState) {\n  const initial = makeEmptyStoreState$2();\n  initializeState({\n    // $FlowFixMe[escaped-generic]\n    set: (atom, value) => {\n      const state = initial.currentTree;\n      const writes = setNodeValue$2(store, state, atom.key, value);\n      const writtenNodes = new Set(writes.keys());\n      const nonvalidatedAtoms = state.nonvalidatedAtoms.clone();\n\n      for (const n of writtenNodes) {\n        nonvalidatedAtoms.delete(n);\n      }\n\n      initial.currentTree = { ...state,\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),\n        atomValues: applyAtomValueWrites$1(state.atomValues, writes),\n        // NB: PLEASE un-export applyAtomValueWrites when deleting this code\n        nonvalidatedAtoms\n      };\n    },\n    setUnvalidatedAtomValues: atomValues => {\n      // FIXME replace this with a mutative loop\n      atomValues.forEach((v, k) => {\n        initial.currentTree = setUnvalidatedAtomValue_DEPRECATED$1(initial.currentTree, k, v);\n      });\n    }\n  });\n  return initial;\n} // Initialize state snapshot for <RecoilRoot> for the initializeState prop.\n// Atom effect initialization takes precedence over this prop.\n// Any atom effects will be run before initialization, but then cleaned up,\n// they are then re-run when used as part of rendering.  These semantics are\n// compatible with React StrictMode where effects may be re-run multiple times\n// but state initialization only happens once the first time.\n\n\nfunction initialStoreState(initializeState) {\n  // Initialize a snapshot and get its store\n  const snapshot = freshSnapshot$1().map(initializeState);\n  const storeState = snapshot.getStore_INTERNAL().getState(); // Counteract the snapshot auto-release\n\n  snapshot.retain(); // Cleanup any effects run during initialization and clear the handlers so\n  // they will re-initialize if used during rendering.  This allows atom effect\n  // initialization to take precedence over initializeState and be compatible\n  // with StrictMode semantics.\n\n  storeState.nodeCleanupFunctions.forEach(cleanup => cleanup());\n  storeState.nodeCleanupFunctions.clear();\n  return storeState;\n}\n\nlet nextID = 0;\n\nfunction RecoilRoot_INTERNAL({\n  initializeState_DEPRECATED,\n  initializeState,\n  store_INTERNAL: storeProp,\n  // For use with React \"context bridging\"\n  children\n}) {\n  // prettier-ignore\n  // @fb-only: useEffect(() => {\n  // @fb-only: if (gkx('recoil_usage_logging')) {\n  // @fb-only: try {\n  // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({\n  // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,\n  // @fb-only: path: URI.getRequestURI().getPath(),\n  // @fb-only: }));\n  // @fb-only: } catch {\n  // @fb-only: recoverableViolation(\n  // @fb-only: 'Error when logging Recoil Usage event',\n  // @fb-only: 'recoil',\n  // @fb-only: );\n  // @fb-only: }\n  // @fb-only: }\n  // @fb-only: }, []);\n  let storeStateRef; // eslint-disable-line prefer-const\n\n  const getGraph = version => {\n    const graphs = storeStateRef.current.graphsByVersion;\n\n    if (graphs.has(version)) {\n      return Recoil_nullthrows(graphs.get(version));\n    }\n\n    const newGraph = graph$2();\n    graphs.set(version, newGraph);\n    return newGraph;\n  };\n\n  const subscribeToTransactions = (callback, key) => {\n    if (key == null) {\n      // Global transaction subscriptions\n      const {\n        transactionSubscriptions\n      } = storeRef.current.getState();\n      const id = nextID++;\n      transactionSubscriptions.set(id, callback);\n      return {\n        release: () => {\n          transactionSubscriptions.delete(id);\n        }\n      };\n    } else {\n      // Node-specific transaction subscriptions:\n      const {\n        nodeTransactionSubscriptions\n      } = storeRef.current.getState();\n\n      if (!nodeTransactionSubscriptions.has(key)) {\n        nodeTransactionSubscriptions.set(key, new Map());\n      }\n\n      const id = nextID++;\n      Recoil_nullthrows(nodeTransactionSubscriptions.get(key)).set(id, callback);\n      return {\n        release: () => {\n          const subs = nodeTransactionSubscriptions.get(key);\n\n          if (subs) {\n            subs.delete(id);\n\n            if (subs.size === 0) {\n              nodeTransactionSubscriptions.delete(key);\n            }\n          }\n        }\n      };\n    }\n  };\n\n  const addTransactionMetadata = metadata => {\n    startNextTreeIfNeeded(storeRef.current);\n\n    for (const k of Object.keys(metadata)) {\n      Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n    }\n  };\n\n  const replaceState = replacer => {\n    startNextTreeIfNeeded(storeRef.current); // Use replacer to get the next state:\n\n    const nextTree = Recoil_nullthrows(storeStateRef.current.nextTree);\n    let replaced;\n\n    try {\n      stateReplacerIsBeingExecuted = true;\n      replaced = replacer(nextTree);\n    } finally {\n      stateReplacerIsBeingExecuted = false;\n    }\n\n    if (replaced === nextTree) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof window !== 'undefined') {\n        window.$recoilDebugStates.push(replaced); // TODO this shouldn't happen here because it's not batched\n      }\n    } // Save changes to nextTree and schedule a React update:\n\n\n    storeStateRef.current.nextTree = replaced;\n\n    if (reactMode$2().early) {\n      notifyComponents(storeRef.current, storeStateRef.current, replaced);\n    }\n\n    Recoil_nullthrows(notifyBatcherOfChange.current)();\n  };\n\n  const notifyBatcherOfChange = useRef$1(null);\n  const setNotifyBatcherOfChange = useCallback(x => {\n    notifyBatcherOfChange.current = x;\n  }, [notifyBatcherOfChange]);\n  const storeRef = Recoil_useRefInitOnce(() => storeProp !== null && storeProp !== void 0 ? storeProp : {\n    storeID: getNextStoreID$2(),\n    getState: () => storeStateRef.current,\n    replaceState,\n    getGraph,\n    subscribeToTransactions,\n    addTransactionMetadata\n  });\n\n  if (storeProp != null) {\n    storeRef.current = storeProp;\n  }\n\n  storeStateRef = Recoil_useRefInitOnce(() => initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(storeRef.current, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());\n  const mutableSource = useMemo(() => createMutableSource$1 === null || createMutableSource$1 === void 0 ? void 0 : createMutableSource$1(storeStateRef, () => storeStateRef.current.currentTree.version), [storeStateRef]); // Cleanup when the <RecoilRoot> is unmounted\n\n  useEffect(() => {\n    // React is free to call effect cleanup handlers and effects at will, the\n    // deps array is only an optimization.  For example, React strict mode\n    // will execute each effect twice for testing.  Therefore, we need symmetry\n    // to re-initialize all known atoms after they were cleaned up.\n    const store = storeRef.current;\n\n    for (const atomKey of new Set(store.getState().knownAtoms)) {\n      initializeNode$2(store, atomKey, 'get');\n    }\n\n    return () => {\n      for (const atomKey of store.getState().knownAtoms) {\n        cleanUpNode$2(store, atomKey);\n      }\n    };\n  }, [storeRef]);\n  return /*#__PURE__*/react.createElement(AppContext.Provider, {\n    value: storeRef\n  }, /*#__PURE__*/react.createElement(MutableSourceContext.Provider, {\n    value: mutableSource\n  }, /*#__PURE__*/react.createElement(Batcher, {\n    setNotifyBatcherOfChange: setNotifyBatcherOfChange\n  }), children));\n}\n\nfunction RecoilRoot(props) {\n  const {\n    override,\n    ...propsExceptOverride\n  } = props;\n  const ancestorStoreRef = useStoreRef();\n\n  if (override === false && ancestorStoreRef.current !== defaultStore) {\n    // If ancestorStoreRef.current !== defaultStore, it means that this\n    // RecoilRoot is not nested within another.\n    return props.children;\n  }\n\n  return /*#__PURE__*/react.createElement(RecoilRoot_INTERNAL, propsExceptOverride);\n}\n\nfunction useRecoilStoreID() {\n  return useStoreRef().current.storeID;\n}\n\nvar Recoil_RecoilRoot = {\n  RecoilRoot,\n  useStoreRef,\n  useRecoilMutableSource,\n  useRecoilStoreID,\n  notifyComponents_FOR_TESTING: notifyComponents,\n  sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction shallowArrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar Recoil_shallowArrayEqual = shallowArrayEqual;\n\nconst {\n  useEffect: useEffect$1,\n  useRef: useRef$2\n} = react;\n\nfunction usePrevious(value) {\n  const ref = useRef$2();\n  useEffect$1(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar Recoil_usePrevious = usePrevious;\n\nconst {\n  useStoreRef: useStoreRef$1\n} = Recoil_RecoilRoot;\n\nconst {\n  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$1\n} = Recoil_Retention;\n\nconst {\n  updateRetainCount: updateRetainCount$2\n} = Recoil_Retention;\n\nconst {\n  RetentionZone: RetentionZone$3\n} = Recoil_RetentionZone;\n\nconst {\n  useEffect: useEffect$2,\n  useRef: useRef$3\n} = react;\n\nconst {\n  isSSR: isSSR$2\n} = Recoil_Environment;\n\n\n\n\n\n // I don't see a way to avoid the any type here because we want to accept readable\n// and writable values with any type parameter, but normally with writable ones\n// RecoilState<SomeT> is not a subtype of RecoilState<mixed>.\n\n\n// flowlint-line unclear-type:off\nfunction useRetain(toRetain) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  } // eslint-disable-next-line fb-www/react-hooks\n\n\n  return useRetain_ACTUAL(toRetain);\n}\n\nfunction useRetain_ACTUAL(toRetain) {\n  const array = Array.isArray(toRetain) ? toRetain : [toRetain];\n  const retainables = array.map(a => a instanceof RetentionZone$3 ? a : a.key);\n  const storeRef = useStoreRef$1();\n  useEffect$2(() => {\n    if (!Recoil_gkx('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    const store = storeRef.current;\n\n    if (timeoutID.current && !isSSR$2) {\n      // Already performed a temporary retain on render, simply cancel the release\n      // of that temporary retain.\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n    } else {\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, 1);\n      }\n    }\n\n    return () => {\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }; // eslint-disable-next-line fb-www/react-hooks-deps\n  }, [storeRef, ...retainables]); // We want to retain if the component suspends. This is terrible but the Suspense\n  // API affords us no better option. If we suspend and never commit after some\n  // seconds, then release. The 'actual' retain/release in the effect above\n  // cancels this.\n\n  const timeoutID = useRef$3();\n  const previousRetainables = Recoil_usePrevious(retainables);\n\n  if (!isSSR$2 && (previousRetainables === undefined || !Recoil_shallowArrayEqual(previousRetainables, retainables))) {\n    const store = storeRef.current;\n\n    for (const r of retainables) {\n      updateRetainCount$2(store, r, 1);\n    }\n\n    if (previousRetainables) {\n      for (const r of previousRetainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }\n\n    if (timeoutID.current) {\n      window.clearTimeout(timeoutID.current);\n    }\n\n    timeoutID.current = window.setTimeout(() => {\n      timeoutID.current = null;\n\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }, SUSPENSE_TIMEOUT_MS$1);\n  }\n}\n\nvar Recoil_useRetain = useRetain;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * MIT License\n *\n * Copyright (c) 2014-2019 Georg Tavonius\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nconst UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction stackTraceParser(stackString) {\n  const lines = stackString.split('\\n');\n  return lines.reduce((stack, line) => {\n    const parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\n\nconst chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  const parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  const submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nconst winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  const parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nconst geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  const parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  const submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nconst javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  const parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nconst nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  const parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar Recoil_stackTraceParser = stackTraceParser;\n\nconst {\n  useRef: useRef$4\n} = react;\n\n\n\n\n\nfunction useComponentName() {\n  const nameRef = useRef$4();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (Recoil_gkx('recoil_infer_component_names')) {\n      var _nameRef$current;\n\n      if (nameRef.current === undefined) {\n        // There is no blessed way to determine the calling React component from\n        // within a hook. This hack uses the fact that hooks must start with 'use'\n        // and that hooks are either called by React Components or other hooks. It\n        // follows therefore, that to find the calling component, you simply need\n        // to look down the stack and find the first function which doesn't start\n        // with 'use'. We are only enabling this in dev for now, since once the\n        // codebase is minified, the naming assumptions no longer hold true.\n        // eslint-disable-next-line fb-www/no-new-error\n        const frames = Recoil_stackTraceParser(new Error().stack);\n\n        for (const {\n          methodName\n        } of frames) {\n          // I observed cases where the frame was of the form 'Object.useXXX'\n          // hence why I'm searching for hooks following a word boundary\n          if (!methodName.match(/\\buse[^\\b]+$/)) {\n            return nameRef.current = methodName;\n          }\n        }\n\n        nameRef.current = null;\n      }\n\n      return (_nameRef$current = nameRef.current) !== null && _nameRef$current !== void 0 ? _nameRef$current : '<unable to determine component name>';\n    }\n  } // @fb-only: return \"<component name only available when both in dev mode and when passing GK 'recoil_infer_component_names'>\";\n\n\n  return '<component name not available>'; // @oss-only\n}\n\nvar Recoil_useComponentName = useComponentName;\n\nconst {\n  batchUpdates: batchUpdates$2\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$2\n} = Recoil_Node;\n\nconst {\n  reactMode: reactMode$3,\n  useMutableSource: useMutableSource$1,\n  useSyncExternalStore: useSyncExternalStore$1\n} = Recoil_ReactMode;\n\nconst {\n  useRecoilMutableSource: useRecoilMutableSource$1,\n  useStoreRef: useStoreRef$2\n} = Recoil_RecoilRoot;\n\nconst {\n  isRecoilValue: isRecoilValue$2\n} = Recoil_RecoilValue$1;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$3,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$2,\n  setRecoilValue: setRecoilValue$2,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$2,\n  subscribeToRecoilValue: subscribeToRecoilValue$1\n} = Recoil_RecoilValueInterface;\n\n\n\nconst {\n  useCallback: useCallback$1,\n  useEffect: useEffect$3,\n  useMemo: useMemo$1,\n  useRef: useRef$5,\n  useState: useState$1\n} = react;\n\nconst {\n  setByAddingToSet: setByAddingToSet$2\n} = Recoil_CopyOnWrite;\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction handleLoadable(loadable, recoilValue, storeRef) {\n  // We can't just throw the promise we are waiting on to Suspense.  If the\n  // upstream dependencies change it may produce a state in which the component\n  // can render, but it would still be suspended on a Promise that may never resolve.\n  if (loadable.state === 'hasValue') {\n    return loadable.contents;\n  } else if (loadable.state === 'loading') {\n    const promise = new Promise(resolve => {\n      storeRef.current.getState().suspendedComponentResolvers.add(resolve);\n    }); // $FlowFixMe Flow(prop-missing) for integrating with tools that inspect thrown promises @fb-only\n    // @fb-only: promise.displayName = `Recoil State: ${recoilValue.key}`;\n\n    throw promise;\n  } else if (loadable.state === 'hasError') {\n    throw loadable.contents;\n  } else {\n    throw Recoil_err(`Invalid value of loadable atom \"${recoilValue.key}\"`);\n  }\n}\n\nfunction validateRecoilValue(recoilValue, hookName) {\n  if (!isRecoilValue$2(recoilValue)) {\n    throw Recoil_err(`Invalid argument to ${hookName}: expected an atom or selector but got ${String(recoilValue)}`);\n  }\n}\n\n/**\n * Various things are broken with useRecoilInterface, particularly concurrent\n * mode, React strict mode, and memory management. They will not be fixed.\n * */\nfunction useRecoilInterface_DEPRECATED() {\n  const componentName = Recoil_useComponentName();\n  const storeRef = useStoreRef$2();\n  const [, forceUpdate] = useState$1([]);\n  const recoilValuesUsed = useRef$5(new Set());\n  recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render\n\n  const previousSubscriptions = useRef$5(new Set());\n  const subscriptions = useRef$5(new Map());\n  const unsubscribeFrom = useCallback$1(key => {\n    const sub = subscriptions.current.get(key);\n\n    if (sub) {\n      sub.release();\n      subscriptions.current.delete(key);\n    }\n  }, [subscriptions]);\n  const updateState = useCallback$1((_state, key) => {\n    if (subscriptions.current.has(key)) {\n      forceUpdate([]);\n    }\n  }, []); // Effect to add/remove subscriptions as nodes are used\n\n  useEffect$3(() => {\n    const store = storeRef.current;\n    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(key => {\n      if (subscriptions.current.has(key)) {\n        Recoil_expectationViolation(`Double subscription to RecoilValue \"${key}\"`);\n        return;\n      }\n\n      const sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);\n      subscriptions.current.set(key, sub);\n      /**\n       * Since we're subscribing in an effect we need to update to the latest\n       * value of the atom since it may have changed since we rendered. We can\n       * go ahead and do that now, unless we're in the middle of a batch --\n       * in which case we should do it at the end of the batch, due to the\n       * following edge case: Suppose an atom is updated in another useEffect\n       * of this same component. Then the following sequence of events occur:\n       * 1. Atom is updated and subs fired (but we may not be subscribed\n       *    yet depending on order of effects, so we miss this) Updated value\n       *    is now in nextTree, but not currentTree.\n       * 2. This effect happens. We subscribe and update.\n       * 3. From the update we re-render and read currentTree, with old value.\n       * 4. Batcher's effect sets currentTree to nextTree.\n       * In this sequence we miss the update. To avoid that, add the update\n       * to queuedComponentCallback if a batch is in progress.\n       */\n      // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n      const state = store.getState();\n\n      if (state.nextTree) {\n        store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {\n          updateState(store.getState(), key);\n        });\n      } else {\n        updateState(store.getState(), key);\n      }\n    });\n    Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(key => {\n      unsubscribeFrom(key);\n    });\n    previousSubscriptions.current = recoilValuesUsed.current;\n  }); // Effect to unsubscribe from all when unmounting\n\n  useEffect$3(() => {\n    const currentSubscriptions = subscriptions.current; // Restore subscriptions that were cleared due to StrictMode running this effect twice\n\n    Recoil_differenceSets(recoilValuesUsed.current, new Set(currentSubscriptions.keys())).forEach(key => {\n      const sub = subscribeToRecoilValue$1(storeRef.current, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);\n      currentSubscriptions.set(key, sub);\n    });\n    return () => currentSubscriptions.forEach((_, key) => unsubscribeFrom(key));\n  }, [componentName, storeRef, unsubscribeFrom, updateState]);\n  return useMemo$1(() => {\n    // eslint-disable-next-line no-shadow\n    function useSetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useSetRecoilState');\n      }\n\n      return newValueOrUpdater => {\n        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n      };\n    } // eslint-disable-next-line no-shadow\n\n\n    function useResetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useResetRecoilState');\n      }\n\n      return () => setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilValueLoadable(recoilValue) {\n      var _storeState$nextTree;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n      }\n\n      if (!recoilValuesUsed.current.has(recoilValue.key)) {\n        recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);\n      } // TODO Restore optimization to memoize lookup\n\n\n      const storeState = storeRef.current.getState();\n      return getRecoilValueAsLoadable$2(storeRef.current, recoilValue, reactMode$3().early ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : storeState.currentTree);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilValue(recoilValue) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilValue, 'useRecoilValue');\n      }\n\n      const loadable = useRecoilValueLoadable(recoilValue);\n      return handleLoadable(loadable, recoilValue, storeRef);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useRecoilState');\n      }\n\n      return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilStateLoadable(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n      }\n\n      return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    return {\n      getRecoilValue: useRecoilValue,\n      getRecoilValueLoadable: useRecoilValueLoadable,\n      getRecoilState: useRecoilState,\n      getRecoilStateLoadable: useRecoilStateLoadable,\n      getSetRecoilState: useSetRecoilState,\n      getResetRecoilState: useResetRecoilState\n    };\n  }, [recoilValuesUsed, storeRef]);\n}\n\nconst recoilComponentGetRecoilValueCount_FOR_TESTING = {\n  current: 0\n};\n\nfunction useRecoilValueLoadable_SYNC_EXTERNAL_STORE(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const componentName = Recoil_useComponentName();\n  const getSnapshot = useCallback$1(() => {\n    var _storeState$nextTree2;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree2 = storeState.nextTree) !== null && _storeState$nextTree2 !== void 0 ? _storeState$nextTree2 : storeState.currentTree : storeState.currentTree;\n    const loadable = getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n    return {\n      loadable,\n      key: recoilValue.key\n    };\n  }, [storeRef, recoilValue]); // Memoize the state to avoid unnecessary rerenders\n\n  const memoizePreviousSnapshot = useCallback$1(getState => {\n    let prevState;\n    return () => {\n      var _prevState, _prevState2;\n\n      const nextState = getState();\n\n      if ((_prevState = prevState) !== null && _prevState !== void 0 && _prevState.loadable.is(nextState.loadable) && ((_prevState2 = prevState) === null || _prevState2 === void 0 ? void 0 : _prevState2.key) === nextState.key) {\n        return prevState;\n      }\n\n      prevState = nextState;\n      return nextState;\n    };\n  }, []);\n  const getMemoizedSnapshot = useMemo$1(() => memoizePreviousSnapshot(getSnapshot), [getSnapshot, memoizePreviousSnapshot]);\n  const subscribe = useCallback$1(notify => {\n    const store = storeRef.current;\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, notify, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName]);\n  return useSyncExternalStore$1(subscribe, getMemoizedSnapshot, // getSnapshot()\n  getMemoizedSnapshot // getServerSnapshot() for SSR support\n  ).loadable;\n}\n\nfunction useRecoilValueLoadable_MUTABLE_SOURCE(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree3;\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree3 = storeState.nextTree) !== null && _storeState$nextTree3 !== void 0 ? _storeState$nextTree3 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const getLoadableWithTesting = useCallback$1(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    return getLoadable();\n  }, [getLoadable]);\n  const componentName = Recoil_useComponentName();\n  const subscribe = useCallback$1((_storeState, notify) => {\n    const store = storeRef.current;\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, () => {\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return notify();\n      } // Only re-render if the value has changed.\n      // This will evaluate the atom/selector now as well as when the\n      // component renders, but that may help with prefetching.\n\n\n      const newLoadable = getLoadable();\n\n      if (!prevLoadableRef.current.is(newLoadable)) {\n        notify();\n      } // If the component is suspended then the effect setting prevLoadableRef\n      // will not run.  So, set the previous value here when its subscription\n      // is fired to wake it up.  We can't just rely on this, though, because\n      // this only executes when an atom/selector is dirty and the atom/selector\n      // passed to the hook can dynamically change.\n\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName, getLoadable]);\n  const source = useRecoilMutableSource$1();\n\n  if (source == null) {\n    throw Recoil_err('Recoil hooks must be used in components contained within a <RecoilRoot> component.');\n  }\n\n  const loadable = useMutableSource$1(source, getLoadableWithTesting, subscribe);\n  const prevLoadableRef = useRef$5(loadable);\n  useEffect$3(() => {\n    prevLoadableRef.current = loadable;\n  });\n  return loadable;\n}\n\nfunction useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const componentName = Recoil_useComponentName(); // Accessors to get the current state\n\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree4;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree4 = storeState.nextTree) !== null && _storeState$nextTree4 !== void 0 ? _storeState$nextTree4 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const getState = useCallback$1(() => ({\n    loadable: getLoadable(),\n    key: recoilValue.key\n  }), [getLoadable, recoilValue.key]); // Memoize state snapshots\n\n  const updateState = useCallback$1(prevState => {\n    const nextState = getState();\n    return prevState.loadable.is(nextState.loadable) && prevState.key === nextState.key ? prevState : nextState;\n  }, [getState]); // Subscribe to Recoil state changes\n\n  useEffect$3(() => {\n    const subscription = subscribeToRecoilValue$1(storeRef.current, recoilValue, _state => {\n      setState(updateState);\n    }, componentName); // Update state in case we are using a different key\n\n    setState(updateState);\n    return subscription.release;\n  }, [componentName, recoilValue, storeRef, updateState]); // Get the current state\n\n  const [state, setState] = useState$1(getState); // If we changed keys, then return the state for the new key.\n  // This is important in case the old key would cause the component to suspend.\n  // We don't have to set the new state here since the subscribing effect above\n  // will do that.\n\n  return state.key !== recoilValue.key ? getState().loadable : state.loadable;\n}\n\nfunction useRecoilValueLoadable_LEGACY(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const [, forceUpdate] = useState$1([]);\n  const componentName = Recoil_useComponentName();\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree5;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree5 = storeState.nextTree) !== null && _storeState$nextTree5 !== void 0 ? _storeState$nextTree5 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const loadable = getLoadable();\n  const prevLoadableRef = useRef$5(loadable);\n  useEffect$3(() => {\n    prevLoadableRef.current = loadable;\n  });\n  useEffect$3(() => {\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, _state => {\n      var _prevLoadableRef$curr;\n\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      const newLoadable = getLoadable();\n\n      if (!((_prevLoadableRef$curr = prevLoadableRef.current) !== null && _prevLoadableRef$curr !== void 0 && _prevLoadableRef$curr.is(newLoadable))) {\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    /**\n     * Since we're subscribing in an effect we need to update to the latest\n     * value of the atom since it may have changed since we rendered. We can\n     * go ahead and do that now, unless we're in the middle of a batch --\n     * in which case we should do it at the end of the batch, due to the\n     * following edge case: Suppose an atom is updated in another useEffect\n     * of this same component. Then the following sequence of events occur:\n     * 1. Atom is updated and subs fired (but we may not be subscribed\n     *    yet depending on order of effects, so we miss this) Updated value\n     *    is now in nextTree, but not currentTree.\n     * 2. This effect happens. We subscribe and update.\n     * 3. From the update we re-render and read currentTree, with old value.\n     * 4. Batcher's effect sets currentTree to nextTree.\n     * In this sequence we miss the update. To avoid that, add the update\n     * to queuedComponentCallback if a batch is in progress.\n     */\n\n    if (storeState.nextTree) {\n      store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {\n        prevLoadableRef.current = null;\n        forceUpdate([]);\n      });\n    } else {\n      var _prevLoadableRef$curr2;\n\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      const newLoadable = getLoadable();\n\n      if (!((_prevLoadableRef$curr2 = prevLoadableRef.current) !== null && _prevLoadableRef$curr2 !== void 0 && _prevLoadableRef$curr2.is(newLoadable))) {\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }\n\n    return subscription.release;\n  }, [componentName, getLoadable, recoilValue, storeRef]);\n  return loadable;\n}\n/**\n  Like useRecoilValue(), but either returns the value if available or\n  just undefined if not available for any reason, such as pending or error.\n*/\n\n\nfunction useRecoilValueLoadable(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n  }\n\n  if (Recoil_gkx('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    Recoil_useRetain(recoilValue);\n  }\n\n  return {\n    TRANSITION_SUPPORT: useRecoilValueLoadable_TRANSITION_SUPPORT,\n    SYNC_EXTERNAL_STORE: useRecoilValueLoadable_SYNC_EXTERNAL_STORE,\n    MUTABLE_SOURCE: useRecoilValueLoadable_MUTABLE_SOURCE,\n    LEGACY: useRecoilValueLoadable_LEGACY\n  }[reactMode$3().mode](recoilValue);\n}\n/**\n  Returns the value represented by the RecoilValue.\n  If the value is pending, it will throw a Promise to suspend the component,\n  if the value is an error it will throw it for the nearest React error boundary.\n  This will also subscribe the component for any updates in the value.\n  */\n\n\nfunction useRecoilValue(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValue');\n  }\n\n  const storeRef = useStoreRef$2();\n  const loadable = useRecoilValueLoadable(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n/**\n  Returns a function that allows the value of a RecoilState to be updated, but does\n  not subscribe the component to changes to that RecoilState.\n*/\n\n\nfunction useSetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useSetRecoilState');\n  }\n\n  const storeRef = useStoreRef$2();\n  return useCallback$1(newValueOrUpdater => {\n    setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n  }, [storeRef, recoilState]);\n}\n/**\n  Returns a function that will reset the value of a RecoilState to its default\n*/\n\n\nfunction useResetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useResetRecoilState');\n  }\n\n  const storeRef = useStoreRef$2();\n  return useCallback$1(() => {\n    setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n  }, [storeRef, recoilState]);\n}\n/**\n  Equivalent to useState(). Allows the value of the RecoilState to be read and written.\n  Subsequent updates to the RecoilState will cause the component to re-render. If the\n  RecoilState is pending, this will suspend the component and initiate the\n  retrieval of the value. If evaluating the RecoilState resulted in an error, this will\n  throw the error so that the nearest React error boundary can catch it.\n*/\n\n\nfunction useRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilState');\n  }\n\n  return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n}\n/**\n  Like useRecoilState(), but does not cause Suspense or React error handling. Returns\n  an object that indicates whether the RecoilState is available, pending, or\n  unavailable due to an error.\n*/\n\n\nfunction useRecoilStateLoadable(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n  }\n\n  return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n}\n\nfunction useSetUnvalidatedAtomValues() {\n  const storeRef = useStoreRef$2();\n  return (values, transactionMetadata = {}) => {\n    batchUpdates$2(() => {\n      storeRef.current.addTransactionMetadata(transactionMetadata);\n      values.forEach((value, key) => setUnvalidatedRecoilValue$2(storeRef.current, new AbstractRecoilValue$3(key), value));\n    });\n  };\n}\n/**\n * Experimental variants of hooks with support for useTransition()\n */\n\n\nfunction useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE');\n\n    if (!reactMode$3().early) {\n      Recoil_recoverableViolation('Attepmt to use a hook with UNSTABLE_TRANSITION_SUPPORT in a rendering mode incompatible with concurrent rendering.  Try enabling the recoil_sync_external_store or recoil_transition_support GKs.');\n    }\n  }\n\n  if (Recoil_gkx('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    Recoil_useRetain(recoilValue);\n  }\n\n  return useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue);\n}\n\nfunction useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValue_TRANSITION_SUPPORT_UNSTABLE');\n  }\n\n  const storeRef = useStoreRef$2();\n  const loadable = useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n\nfunction useRecoilState_TRANSITION_SUPPORT_UNSTABLE(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilState_TRANSITION_SUPPORT_UNSTABLE');\n  }\n\n  return [useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilState), useSetRecoilState(recoilState)];\n}\n\nvar Recoil_Hooks = {\n  recoilComponentGetRecoilValueCount_FOR_TESTING,\n  useRecoilInterface: useRecoilInterface_DEPRECATED,\n  useRecoilState,\n  useRecoilStateLoadable,\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useResetRecoilState,\n  useSetRecoilState,\n  useSetUnvalidatedAtomValues,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a map containing all of the keys + values from the original map where\n * the given callback returned true.\n */\n\nfunction filterMap(map, callback) {\n  const result = new Map();\n\n  for (const [key, value] of map) {\n    if (callback(value, key)) {\n      result.set(key, value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_filterMap = filterMap;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a set containing all of the values from the original set where\n * the given callback returned true.\n */\n\nfunction filterSet(set, callback) {\n  const result = new Set();\n\n  for (const value of set) {\n    if (callback(value)) {\n      result.add(value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_filterSet = filterSet;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction mergeMaps(...maps) {\n  const result = new Map();\n\n  for (let i = 0; i < maps.length; i++) {\n    const iterator = maps[i].keys();\n    let nextKey;\n\n    while (!(nextKey = iterator.next()).done) {\n      // $FlowFixMe[incompatible-call] - map/iterator knows nothing about flow types\n      result.set(nextKey.value, maps[i].get(nextKey.value));\n    }\n  }\n  /* $FlowFixMe[incompatible-return] (>=0.66.0 site=www,mobile) This comment\n   * suppresses an error found when Flow v0.66 was deployed. To see the error\n   * delete this comment and run Flow. */\n\n\n  return result;\n}\n\nvar Recoil_mergeMaps = mergeMaps;\n\nconst {\n  batchUpdates: batchUpdates$3\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$3,\n  getNode: getNode$4,\n  nodes: nodes$1\n} = Recoil_Node;\n\nconst {\n  useStoreRef: useStoreRef$3\n} = Recoil_RecoilRoot;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$4,\n  setRecoilValueLoadable: setRecoilValueLoadable$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$2\n} = Recoil_Retention;\n\nconst {\n  cloneSnapshot: cloneSnapshot$1\n} = Recoil_Snapshot$1;\n\nconst {\n  useCallback: useCallback$2,\n  useEffect: useEffect$4,\n  useRef: useRef$6,\n  useState: useState$2\n} = react;\n\nconst {\n  isSSR: isSSR$3\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useTransactionSubscription(callback) {\n  const storeRef = useStoreRef$3();\n  useEffect$4(() => {\n    const sub = storeRef.current.subscribeToTransactions(callback);\n    return sub.release;\n  }, [callback, storeRef]);\n}\n\nfunction externallyVisibleAtomValuesInState(state) {\n  const atomValues = state.atomValues.toMap();\n  const persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, (v, k) => {\n    const node = getNode$4(k);\n    const persistence = node.persistence_UNSTABLE;\n    return persistence != null && persistence.type !== 'none' && v.state === 'hasValue';\n  }), v => v.contents); // Merge in nonvalidated atoms; we may not have defs for them but they will\n  // all have persistence on or they wouldn't be there in the first place.\n\n  return Recoil_mergeMaps(state.nonvalidatedAtoms.toMap(), persistedAtomContentsValues);\n}\n\n/**\n  Calls the given callback after any atoms have been modified and the consequent\n  component re-renders have been committed. This is intended for persisting\n  the values of the atoms to storage. The stored values can then be restored\n  using the useSetUnvalidatedAtomValues hook.\n\n  The callback receives the following info:\n\n  atomValues: The current value of every atom that is both persistable (persistence\n              type not set to 'none') and whose value is available (not in an\n              error or loading state).\n\n  previousAtomValues: The value of every persistable and available atom before\n               the transaction began.\n\n  atomInfo: A map containing the persistence settings for each atom. Every key\n            that exists in atomValues will also exist in atomInfo.\n\n  modifiedAtoms: The set of atoms that were written to during the transaction.\n\n  transactionMetadata: Arbitrary information that was added via the\n          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n          transaction, to avoid loops.\n*/\nfunction useTransactionObservation_DEPRECATED(callback) {\n  useTransactionSubscription(useCallback$2(store => {\n    let previousTree = store.getState().previousTree;\n    const currentTree = store.getState().currentTree;\n\n    if (!previousTree) {\n      Recoil_recoverableViolation('Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil');\n      previousTree = store.getState().currentTree; // attempt to trundle on\n    }\n\n    const atomValues = externallyVisibleAtomValuesInState(currentTree);\n    const previousAtomValues = externallyVisibleAtomValuesInState(previousTree);\n    const atomInfo = Recoil_mapMap(nodes$1, node => {\n      var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;\n\n      return {\n        persistence_UNSTABLE: {\n          type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : 'none',\n          backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false\n        }\n      };\n    }); // Filter on existance in atomValues so that externally-visible rules\n    // are also applied to modified atoms (specifically exclude selectors):\n\n    const modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, k => atomValues.has(k) || previousAtomValues.has(k));\n    callback({\n      atomValues,\n      previousAtomValues,\n      atomInfo,\n      modifiedAtoms,\n      transactionMetadata: { ...currentTree.transactionMetadata\n      }\n    });\n  }, [callback]));\n}\n\nfunction useRecoilTransactionObserver(callback) {\n  useTransactionSubscription(useCallback$2(store => {\n    const snapshot = cloneSnapshot$1(store, 'current');\n    const previousSnapshot = cloneSnapshot$1(store, 'previous');\n    callback({\n      snapshot,\n      previousSnapshot\n    });\n  }, [callback]));\n} // Return a snapshot of the current state and subscribe to all state changes\n\n\nfunction useRecoilSnapshot() {\n  const storeRef = useStoreRef$3();\n  const [snapshot, setSnapshot] = useState$2(() => cloneSnapshot$1(storeRef.current));\n  const previousSnapshot = Recoil_usePrevious(snapshot);\n  const timeoutID = useRef$6();\n  const releaseRef = useRef$6();\n  useTransactionSubscription(useCallback$2(store => setSnapshot(cloneSnapshot$1(store)), [])); // Retain snapshot for duration component is mounted\n\n  useEffect$4(() => {\n    const release = snapshot.retain(); // Release the retain from the rendering call\n\n    if (timeoutID.current && !isSSR$3) {\n      var _releaseRef$current;\n\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n      (_releaseRef$current = releaseRef.current) === null || _releaseRef$current === void 0 ? void 0 : _releaseRef$current.call(releaseRef);\n      releaseRef.current = null;\n    }\n\n    return release;\n  }, [snapshot]); // Retain snapshot until above effect is run.\n  // Release after a threshold in case component is suspended.\n\n  if (previousSnapshot !== snapshot && !isSSR$3) {\n    // Release the previous snapshot\n    if (timeoutID.current) {\n      var _releaseRef$current2;\n\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n      (_releaseRef$current2 = releaseRef.current) === null || _releaseRef$current2 === void 0 ? void 0 : _releaseRef$current2.call(releaseRef);\n      releaseRef.current = null;\n    }\n\n    releaseRef.current = snapshot.retain();\n    timeoutID.current = window.setTimeout(() => {\n      var _releaseRef$current3;\n\n      timeoutID.current = null;\n      (_releaseRef$current3 = releaseRef.current) === null || _releaseRef$current3 === void 0 ? void 0 : _releaseRef$current3.call(releaseRef);\n      releaseRef.current = null;\n    }, SUSPENSE_TIMEOUT_MS$2);\n  }\n\n  return snapshot;\n}\n\nfunction gotoSnapshot(store, snapshot) {\n  var _storeState$nextTree;\n\n  const storeState = store.getState();\n  const prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;\n  const next = snapshot.getStore_INTERNAL().getState().currentTree;\n  batchUpdates$3(() => {\n    const keysToUpdate = new Set();\n\n    for (const keys of [prev.atomValues.keys(), next.atomValues.keys()]) {\n      for (const key of keys) {\n        var _prev$atomValues$get, _next$atomValues$get;\n\n        if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$4(key).shouldRestoreFromSnapshots) {\n          keysToUpdate.add(key);\n        }\n      }\n    }\n\n    keysToUpdate.forEach(key => {\n      setRecoilValueLoadable$1(store, new AbstractRecoilValue$4(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$3);\n    });\n    store.replaceState(state => ({ ...state,\n      stateID: snapshot.getID()\n    }));\n  });\n}\n\nfunction useGotoRecoilSnapshot() {\n  const storeRef = useStoreRef$3();\n  return useCallback$2(snapshot => gotoSnapshot(storeRef.current, snapshot), [storeRef]);\n}\n\nvar Recoil_SnapshotHooks = {\n  useRecoilSnapshot,\n  gotoSnapshot,\n  useGotoRecoilSnapshot,\n  useRecoilTransactionObserver,\n  useTransactionObservation_DEPRECATED,\n  useTransactionSubscription_DEPRECATED: useTransactionSubscription\n};\n\nconst {\n  peekNodeInfo: peekNodeInfo$2\n} = Recoil_FunctionalCore;\n\nconst {\n  useStoreRef: useStoreRef$4\n} = Recoil_RecoilRoot;\n\nfunction useGetRecoilValueInfo() {\n  const storeRef = useStoreRef$4();\n  return ({\n    key\n  }) => peekNodeInfo$2(storeRef.current, storeRef.current.getState().currentTree, key);\n}\n\nvar Recoil_useGetRecoilValueInfo = useGetRecoilValueInfo;\n\nconst {\n  reactMode: reactMode$4\n} = Recoil_ReactMode;\n\nconst {\n  RecoilRoot: RecoilRoot$1,\n  useStoreRef: useStoreRef$5\n} = Recoil_RecoilRoot;\n\n\n\nconst {\n  useMemo: useMemo$2\n} = react;\n\nfunction useRecoilBridgeAcrossReactRoots() {\n  // The test fails when using useMutableSource(), but only if act() is used\n  // for the nested root.  So, this may only be a testing environment issue.\n  if (reactMode$4().mode === 'MUTABLE_SOURCE') {\n    // eslint-disable-next-line fb-www/no-console\n    console.warn('Warning: There are known issues using useRecoilBridgeAcrossReactRoots() in recoil_mutable_source rendering mode.  Please consider upgrading to recoil_sync_external_store mode.');\n  }\n\n  const store = useStoreRef$5().current;\n  return useMemo$2(() => {\n    // eslint-disable-next-line no-shadow\n    function RecoilBridge({\n      children\n    }) {\n      return /*#__PURE__*/react.createElement(RecoilRoot$1, {\n        store_INTERNAL: store\n      }, children);\n    }\n\n    return RecoilBridge;\n  }, [store]);\n}\n\nvar Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;\n\nconst {\n  loadableWithValue: loadableWithValue$1\n} = Recoil_Loadable$1;\n\nconst {\n  initializeNode: initializeNode$3\n} = Recoil_FunctionalCore;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$4,\n  getNode: getNode$5\n} = Recoil_Node;\n\nconst {\n  copyTreeState: copyTreeState$1,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$3,\n  invalidateDownstreams: invalidateDownstreams$1,\n  writeLoadableToTreeState: writeLoadableToTreeState$1\n} = Recoil_RecoilValueInterface;\n\n\n\nfunction isAtom(recoilValue) {\n  return getNode$5(recoilValue.key).nodeType === 'atom';\n}\n\nclass TransactionInterfaceImpl {\n  constructor(store, treeState) {\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_treeState\", void 0);\n\n    _defineProperty(this, \"_changes\", void 0);\n\n    _defineProperty(this, \"get\", recoilValue => {\n      if (this._changes.has(recoilValue.key)) {\n        // $FlowFixMe[incompatible-return]\n        return this._changes.get(recoilValue.key);\n      }\n\n      if (!isAtom(recoilValue)) {\n        throw Recoil_err('Reading selectors within atomicUpdate is not supported');\n      }\n\n      const loadable = getRecoilValueAsLoadable$3(this._store, recoilValue, this._treeState);\n\n      if (loadable.state === 'hasValue') {\n        return loadable.contents;\n      } else if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      } else {\n        throw Recoil_err(`Expected Recoil atom ${recoilValue.key} to have a value, but it is in a loading state.`);\n      }\n    });\n\n    _defineProperty(this, \"set\", (recoilState, valueOrUpdater) => {\n      if (!isAtom(recoilState)) {\n        throw Recoil_err('Setting selectors within atomicUpdate is not supported');\n      }\n\n      if (typeof valueOrUpdater === 'function') {\n        const current = this.get(recoilState);\n\n        this._changes.set(recoilState.key, valueOrUpdater(current)); // flowlint-line unclear-type:off\n\n      } else {\n        // Initialize atom and run effects if not initialized yet\n        initializeNode$3(this._store, recoilState.key, 'set');\n\n        this._changes.set(recoilState.key, valueOrUpdater);\n      }\n    });\n\n    _defineProperty(this, \"reset\", recoilState => {\n      this.set(recoilState, DEFAULT_VALUE$4);\n    });\n\n    this._store = store;\n    this._treeState = treeState;\n    this._changes = new Map();\n  } // Allow destructing\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n  newTreeState_INTERNAL() {\n    if (this._changes.size === 0) {\n      return this._treeState;\n    }\n\n    const newState = copyTreeState$1(this._treeState);\n\n    for (const [k, v] of this._changes) {\n      writeLoadableToTreeState$1(newState, k, loadableWithValue$1(v));\n    }\n\n    invalidateDownstreams$1(this._store, newState);\n    return newState;\n  }\n\n}\n\nfunction atomicUpdater(store) {\n  return fn => {\n    store.replaceState(treeState => {\n      const changeset = new TransactionInterfaceImpl(store, treeState);\n      fn(changeset);\n      return changeset.newTreeState_INTERNAL();\n    });\n  };\n}\n\nvar Recoil_AtomicUpdates = {\n  atomicUpdater\n};\n\nvar Recoil_AtomicUpdates_1 = Recoil_AtomicUpdates.atomicUpdater;\n\nvar Recoil_AtomicUpdates$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  atomicUpdater: Recoil_AtomicUpdates_1\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar invariant_1 = invariant;\n\n// @oss-only\n\n\nvar Recoil_invariant = invariant_1;\n\nconst {\n  atomicUpdater: atomicUpdater$1\n} = Recoil_AtomicUpdates$1;\n\nconst {\n  batchUpdates: batchUpdates$4\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$5\n} = Recoil_Node;\n\nconst {\n  useStoreRef: useStoreRef$6\n} = Recoil_RecoilRoot;\n\nconst {\n  refreshRecoilValue: refreshRecoilValue$1,\n  setRecoilValue: setRecoilValue$3\n} = Recoil_RecoilValueInterface;\n\nconst {\n  Snapshot: Snapshot$1,\n  cloneSnapshot: cloneSnapshot$2\n} = Recoil_Snapshot$1;\n\nconst {\n  gotoSnapshot: gotoSnapshot$1\n} = Recoil_SnapshotHooks;\n\nconst {\n  useCallback: useCallback$3\n} = react;\n\n\n\n\n\n\n\nclass Sentinel {}\n\nconst SENTINEL = new Sentinel();\n\nfunction recoilCallback(store, fn, args, extraInterface) {\n  let ret = SENTINEL;\n  batchUpdates$4(() => {\n    const errMsg = 'useRecoilCallback() expects a function that returns a function: ' + 'it accepts a function of the type (RecoilInterface) => (Args) => ReturnType ' + 'and returns a callback function (Args) => ReturnType, where RecoilInterface is ' + 'an object {snapshot, set, ...} and Args and ReturnType are the argument and return ' + 'types of the callback you want to create.  Please see the docs ' + 'at recoiljs.org for details.';\n\n    if (typeof fn !== 'function') {\n      throw Recoil_err(errMsg);\n    } // Clone the snapshot lazily to avoid overhead if the callback does not use it.\n    // Note that this means the snapshot may represent later state from when\n    // the callback was called if it first accesses the snapshot asynchronously.\n\n\n    const callbackInterface = Recoil_lazyProxy({ ...(extraInterface !== null && extraInterface !== void 0 ? extraInterface : {}),\n      // flowlint-line unclear-type:off\n      set: (node, newValue) => setRecoilValue$3(store, node, newValue),\n      reset: node => setRecoilValue$3(store, node, DEFAULT_VALUE$5),\n      refresh: node => refreshRecoilValue$1(store, node),\n      gotoSnapshot: snapshot => gotoSnapshot$1(store, snapshot),\n      transact_UNSTABLE: transaction => atomicUpdater$1(store)(transaction)\n    }, {\n      snapshot: () => cloneSnapshot$2(store)\n    });\n    const callback = fn(callbackInterface);\n\n    if (typeof callback !== 'function') {\n      throw Recoil_err(errMsg);\n    }\n\n    ret = callback(...args);\n  });\n  !!(ret instanceof Sentinel) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'batchUpdates should return immediately') : Recoil_invariant(false) : void 0;\n  return ret;\n}\n\nfunction useRecoilCallback(fn, deps) {\n  const storeRef = useStoreRef$6();\n  return useCallback$3( // $FlowIssue[incompatible-call]\n  (...args) => {\n    return recoilCallback(storeRef.current, fn, args);\n  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_useRecoilCallback = {\n  recoilCallback,\n  useRecoilCallback\n};\n\nconst {\n  useStoreRef: useStoreRef$7\n} = Recoil_RecoilRoot;\n\nconst {\n  refreshRecoilValue: refreshRecoilValue$2\n} = Recoil_RecoilValueInterface;\n\nconst {\n  useCallback: useCallback$4\n} = react;\n\nfunction useRecoilRefresher(recoilValue) {\n  const storeRef = useStoreRef$7();\n  return useCallback$4(() => {\n    const store = storeRef.current;\n    refreshRecoilValue$2(store, recoilValue);\n  }, [recoilValue, storeRef]);\n}\n\nvar Recoil_useRecoilRefresher = useRecoilRefresher;\n\nconst {\n  atomicUpdater: atomicUpdater$2\n} = Recoil_AtomicUpdates$1;\n\nconst {\n  useStoreRef: useStoreRef$8\n} = Recoil_RecoilRoot;\n\nconst {\n  useMemo: useMemo$3\n} = react;\n\nfunction useRecoilTransaction(fn, deps) {\n  const storeRef = useStoreRef$8();\n  return useMemo$3(() => (...args) => {\n    const atomicUpdate = atomicUpdater$2(storeRef.current);\n    atomicUpdate(transactionInterface => {\n      fn(transactionInterface)(...args);\n    });\n  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_useRecoilTransaction = useRecoilTransaction;\n\nclass TreeCache {\n  constructor(options) {\n    var _options$onHit, _options$onSet, _options$mapNodeValue;\n\n    _defineProperty(this, \"_numLeafs\", void 0);\n\n    _defineProperty(this, \"_root\", void 0);\n\n    _defineProperty(this, \"_onHit\", void 0);\n\n    _defineProperty(this, \"_onSet\", void 0);\n\n    _defineProperty(this, \"_mapNodeValue\", void 0);\n\n    this._numLeafs = 0;\n    this._root = null;\n    this._onHit = (_options$onHit = options === null || options === void 0 ? void 0 : options.onHit) !== null && _options$onHit !== void 0 ? _options$onHit : () => {};\n    this._onSet = (_options$onSet = options === null || options === void 0 ? void 0 : options.onSet) !== null && _options$onSet !== void 0 ? _options$onSet : () => {};\n    this._mapNodeValue = (_options$mapNodeValue = options === null || options === void 0 ? void 0 : options.mapNodeValue) !== null && _options$mapNodeValue !== void 0 ? _options$mapNodeValue : val => val;\n  }\n\n  size() {\n    return this._numLeafs;\n  } // TODO: nodeCount(): number\n\n\n  root() {\n    return this._root;\n  }\n\n  get(getNodeValue, handlers) {\n    var _this$getLeafNode;\n\n    return (_this$getLeafNode = this.getLeafNode(getNodeValue, handlers)) === null || _this$getLeafNode === void 0 ? void 0 : _this$getLeafNode.value;\n  }\n\n  getLeafNode(getNodeValue, handlers) {\n    return findLeaf(this.root(), nodeKey => this._mapNodeValue(getNodeValue(nodeKey)), {\n      onNodeVisit: node => {\n        handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n        if (node.type === 'leaf') {\n          this._onHit(node);\n        }\n      }\n    });\n  }\n\n  set(route, value, handlers) {\n    let leafNode;\n    let newRoot = null;\n\n    const setRetryablePart = () => {\n      newRoot = addLeaf(this.root(), route.map(([nodeKey, nodeValue]) => [nodeKey, this._mapNodeValue(nodeValue)]), null, value, null, {\n        onNodeVisit: node => {\n          handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n          if (node.type === 'leaf') {\n            leafNode = node;\n          }\n        }\n      }, () => {\n        this.clear();\n        setRetryablePart();\n      });\n    };\n\n    setRetryablePart();\n\n    if (!this.root()) {\n      this._root = newRoot;\n    }\n\n    this._numLeafs++;\n\n    this._onSet(Recoil_nullthrows(leafNode));\n  }\n\n  delete(node) {\n    if (!this.root()) {\n      return false;\n    }\n\n    const root = Recoil_nullthrows(this.root());\n    const existsInTree = pruneNodeFromTree(root, node, node.parent);\n\n    if (!existsInTree) {\n      return false;\n    }\n\n    if (node === root || root.type === 'branch' && !root.branches.size) {\n      this._root = null;\n      this._numLeafs = 0;\n      return true;\n    }\n\n    this._numLeafs -= countDownstreamLeaves(node);\n    return true;\n  }\n\n  clear() {\n    this._numLeafs = 0;\n    this._root = null;\n  }\n\n}\n\nconst findLeaf = (root, getNodeValue, handlers) => {\n  var _handlers$onNodeVisit;\n\n  if (root == null) {\n    return undefined;\n  }\n\n  handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit = handlers.onNodeVisit) === null || _handlers$onNodeVisit === void 0 ? void 0 : _handlers$onNodeVisit.call(handlers, root);\n\n  if (root.type === 'leaf') {\n    return root;\n  }\n\n  const nodeValue = getNodeValue(root.nodeKey);\n  return findLeaf(root.branches.get(nodeValue), getNodeValue, handlers);\n};\n\nconst addLeaf = (root, route, parent, value, branchKey, handlers, onAbort) => {\n  var _handlers$onNodeVisit2;\n\n  let node;\n\n  if (root == null) {\n    if (route.length === 0) {\n      node = {\n        type: 'leaf',\n        value,\n        parent,\n        branchKey\n      };\n    } else {\n      const [path, ...rest] = route;\n      const [nodeKey, nodeValue] = path;\n      node = {\n        type: 'branch',\n        nodeKey,\n        parent,\n        branches: new Map(),\n        branchKey\n      };\n      node.branches.set(nodeValue, addLeaf(null, rest, node, value, nodeValue, handlers, onAbort));\n    }\n  } else {\n    node = root;\n\n    if (route.length) {\n      const [path, ...rest] = route;\n      const [nodeKey, nodeValue] = path;\n\n      if (root.type !== 'branch' || root.nodeKey !== nodeKey) {\n        Recoil_recoverableViolation('Existing cache must have a branch midway through the ' + 'route with matching node key. Resetting cache.');\n        onAbort();\n        return node; // ignored\n      }\n\n      root.branches.set(nodeValue, addLeaf(root.branches.get(nodeValue), rest, root, value, nodeValue, handlers, onAbort));\n    }\n  }\n\n  handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit2 = handlers.onNodeVisit) === null || _handlers$onNodeVisit2 === void 0 ? void 0 : _handlers$onNodeVisit2.call(handlers, node);\n  return node;\n};\n\nconst pruneNodeFromTree = (root, node, parent) => {\n  if (!parent) {\n    return root === node;\n  }\n\n  parent.branches.delete(node.branchKey);\n  return pruneUpstreamBranches(root, parent, parent.parent);\n};\n\nconst pruneUpstreamBranches = (root, branchNode, parent) => {\n  if (!parent) {\n    return root === branchNode;\n  }\n\n  if (branchNode.branches.size === 0) {\n    parent.branches.delete(branchNode.branchKey);\n  }\n\n  return pruneUpstreamBranches(root, parent, parent.parent);\n};\n\nconst countDownstreamLeaves = node => node.type === 'leaf' ? 1 : Array.from(node.branches.values()).reduce((sum, currNode) => sum + countDownstreamLeaves(currNode), 0);\n\nvar Recoil_TreeCache = {\n  TreeCache\n};\n\nvar Recoil_TreeCache_1 = Recoil_TreeCache.TreeCache;\n\nvar Recoil_TreeCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TreeCache: Recoil_TreeCache_1\n});\n\nclass LRUCache {\n  constructor(options) {\n    var _options$mapKey;\n\n    _defineProperty(this, \"_maxSize\", void 0);\n\n    _defineProperty(this, \"_size\", void 0);\n\n    _defineProperty(this, \"_head\", void 0);\n\n    _defineProperty(this, \"_tail\", void 0);\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._maxSize = options.maxSize;\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;\n  }\n\n  head() {\n    return this._head;\n  }\n\n  tail() {\n    return this._tail;\n  }\n\n  size() {\n    return this._size;\n  }\n\n  maxSize() {\n    return this._maxSize;\n  }\n\n  has(key) {\n    return this._map.has(this._keyMapper(key));\n  }\n\n  get(key) {\n    const mappedKey = this._keyMapper(key);\n\n    const node = this._map.get(mappedKey);\n\n    if (!node) {\n      return undefined;\n    }\n\n    this.set(key, node.value);\n    return node.value;\n  }\n\n  set(key, val) {\n    const mappedKey = this._keyMapper(key);\n\n    const existingNode = this._map.get(mappedKey);\n\n    if (existingNode) {\n      this.delete(key);\n    }\n\n    const head = this.head();\n    const node = {\n      key,\n      right: head,\n      left: null,\n      value: val\n    };\n\n    if (head) {\n      head.left = node;\n    } else {\n      this._tail = node;\n    }\n\n    this._map.set(mappedKey, node);\n\n    this._head = node;\n    this._size++;\n\n    this._maybeDeleteLRU();\n  }\n\n  _maybeDeleteLRU() {\n    if (this.size() > this.maxSize()) {\n      this.deleteLru();\n    }\n  }\n\n  deleteLru() {\n    const tail = this.tail();\n\n    if (tail) {\n      this.delete(tail.key);\n    }\n  }\n\n  delete(key) {\n    const mappedKey = this._keyMapper(key);\n\n    if (!this._size || !this._map.has(mappedKey)) {\n      return;\n    }\n\n    const node = Recoil_nullthrows(this._map.get(mappedKey));\n    const right = node.right;\n    const left = node.left;\n\n    if (right) {\n      right.left = node.left;\n    }\n\n    if (left) {\n      left.right = node.right;\n    }\n\n    if (node === this.head()) {\n      this._head = right;\n    }\n\n    if (node === this.tail()) {\n      this._tail = left;\n    }\n\n    this._map.delete(mappedKey);\n\n    this._size--;\n  }\n\n  clear() {\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n  }\n\n}\n\nvar Recoil_LRUCache = {\n  LRUCache\n};\n\nvar Recoil_LRUCache_1 = Recoil_LRUCache.LRUCache;\n\nvar Recoil_LRUCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LRUCache: Recoil_LRUCache_1\n});\n\nconst {\n  LRUCache: LRUCache$1\n} = Recoil_LRUCache$1;\n\nconst {\n  TreeCache: TreeCache$1\n} = Recoil_TreeCache$1;\n\nfunction treeCacheLRU(maxSize, mapNodeValue = v => v) {\n  const lruCache = new LRUCache$1({\n    maxSize\n  });\n  const cache = new TreeCache$1({\n    mapNodeValue,\n    onHit: node => {\n      lruCache.set(node, true);\n    },\n    onSet: node => {\n      const lruNode = lruCache.tail();\n      lruCache.set(node, true);\n\n      if (lruNode && cache.size() > maxSize) {\n        cache.delete(lruNode.key);\n      }\n    }\n  }); // $FlowFixMe[method-unbinding]\n\n  return cache;\n}\n\nvar Recoil_treeCacheLRU = treeCacheLRU;\n\nconst TIME_WARNING_THRESHOLD_MS = 15;\n\nfunction stringify(x, opt, key) {\n  // A optimization to avoid the more expensive JSON.stringify() for simple strings\n  // This may lose protection for u2028 and u2029, though.\n  if (typeof x === 'string' && !x.includes('\"') && !x.includes('\\\\')) {\n    return `\"${x}\"`;\n  } // Handle primitive types\n\n\n  switch (typeof x) {\n    case 'undefined':\n      return '';\n    // JSON.stringify(undefined) returns undefined, but we always want to return a string\n\n    case 'boolean':\n      return x ? 'true' : 'false';\n\n    case 'number':\n    case 'symbol':\n      // case 'bigint': // BigInt is not supported in www\n      return String(x);\n\n    case 'string':\n      // Add surrounding quotes and escape internal quotes\n      return JSON.stringify(x);\n\n    case 'function':\n      if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {\n        throw Recoil_err('Attempt to serialize function in a Recoil cache key');\n      }\n\n      return `__FUNCTION(${x.name})__`;\n  }\n\n  if (x === null) {\n    return 'null';\n  } // Fallback case for unknown types\n\n\n  if (typeof x !== 'object') {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n  } // Deal with all promises as equivalent for now.\n\n\n  if (Recoil_isPromise(x)) {\n    return '__PROMISE__';\n  } // Arrays handle recursive stringification\n\n\n  if (Array.isArray(x)) {\n    return `[${x.map((v, i) => stringify(v, opt, i.toString()))}]`;\n  } // If an object defines a toJSON() method, then use that to override the\n  // serialization.  This matches the behavior of JSON.stringify().\n  // Pass the key for compatibility.\n  // Immutable.js collections define this method to allow us to serialize them.\n\n\n  if (typeof x.toJSON === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(x.toJSON(key), opt, key);\n  } // For built-in Maps, sort the keys in a stable order instead of the\n  // default insertion order.  Support non-string keys.\n\n\n  if (x instanceof Map) {\n    const obj = {};\n\n    for (const [k, v] of x) {\n      // Stringify will escape any nested quotes\n      obj[typeof k === 'string' ? k : stringify(k, opt)] = v;\n    }\n\n    return stringify(obj, opt, key);\n  } // For built-in Sets, sort the keys in a stable order instead of the\n  // default insertion order.\n\n\n  if (x instanceof Set) {\n    return stringify(Array.from(x).sort((a, b) => stringify(a, opt).localeCompare(stringify(b, opt))), opt, key);\n  } // Anything else that is iterable serialize as an Array.\n\n\n  if (Symbol !== undefined && x[Symbol.iterator] != null && typeof x[Symbol.iterator] === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(Array.from(x), opt, key);\n  } // For all other Objects, sort the keys in a stable order.\n\n\n  return `{${Object.keys(x).filter(k => x[k] !== undefined).sort() // stringify the key to add quotes and escape any nested slashes or quotes.\n  .map(k => `${stringify(k, opt)}:${stringify(x[k], opt, k)}`).join(',')}}`;\n} // Utility similar to JSON.stringify() except:\n// * Serialize built-in Sets as an Array\n// * Serialize built-in Maps as an Object.  Supports non-string keys.\n// * Serialize other iterables as arrays\n// * Sort the keys of Objects and Maps to have a stable order based on string conversion.\n//    This overrides their default insertion order.\n// * Still uses toJSON() of any object to override serialization\n// * Support Symbols (though don't guarantee uniqueness)\n// * We could support BigInt, but Flow doesn't seem to like it.\n// See Recoil_stableStringify-test.js for examples\n\n\nfunction stableStringify(x, opt = {\n  allowFunctions: false\n}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof window !== 'undefined') {\n      const startTime = window.performance ? window.performance.now() : 0;\n      const str = stringify(x, opt);\n      const endTime = window.performance ? window.performance.now() : 0;\n\n      if (endTime - startTime > TIME_WARNING_THRESHOLD_MS) {\n        /* eslint-disable fb-www/no-console */\n        console.groupCollapsed(`Recoil: Spent ${endTime - startTime}ms computing a cache key`);\n        console.warn(x, str);\n        console.groupEnd();\n        /* eslint-enable fb-www/no-console */\n      }\n\n      return str;\n    }\n  }\n\n  return stringify(x, opt);\n}\n\nvar Recoil_stableStringify = stableStringify;\n\nconst {\n  TreeCache: TreeCache$2\n} = Recoil_TreeCache$1;\n\n\n\n\n\n\n\n\n\nconst defaultPolicy = {\n  equality: 'reference',\n  eviction: 'keep-all',\n  maxSize: Infinity\n};\n\nfunction treeCacheFromPolicy({\n  equality = defaultPolicy.equality,\n  eviction = defaultPolicy.eviction,\n  maxSize = defaultPolicy.maxSize\n} = defaultPolicy) {\n  const valueMapper = getValueMapper(equality);\n  const treeCache = getTreeCache(eviction, maxSize, valueMapper);\n  return treeCache;\n}\n\nfunction getValueMapper(equality) {\n  switch (equality) {\n    case 'reference':\n      return val => val;\n\n    case 'value':\n      return val => Recoil_stableStringify(val);\n  }\n\n  throw Recoil_err(`Unrecognized equality policy ${equality}`);\n}\n\nfunction getTreeCache(eviction, maxSize, mapNodeValue) {\n  switch (eviction) {\n    case 'keep-all':\n      // $FlowFixMe[method-unbinding]\n      return new TreeCache$2({\n        mapNodeValue\n      });\n\n    case 'lru':\n      return Recoil_treeCacheLRU(Recoil_nullthrows(maxSize), mapNodeValue);\n\n    case 'most-recent':\n      return Recoil_treeCacheLRU(1, mapNodeValue);\n  }\n\n  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);\n}\n\nvar Recoil_treeCacheFromPolicy = treeCacheFromPolicy;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction isNode(object) {\n  var _ownerDocument, _doc$defaultView;\n\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  const doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;\n  const defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;\n  return !!(object != null && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nvar Recoil_isNode = isNode;\n\nconst {\n  isReactNative: isReactNative$1,\n  isSSR: isSSR$4\n} = Recoil_Environment;\n\n\n\n\n\nfunction shouldNotBeFrozen(value) {\n  // Primitives and functions:\n  if (value === null || typeof value !== 'object') {\n    return true;\n  } // React elements:\n\n\n  switch (typeof value.$$typeof) {\n    case 'symbol':\n      return true;\n\n    case 'number':\n      return true;\n  } // Immutable structures:\n\n\n  if (value['@@__IMMUTABLE_ITERABLE__@@'] != null || value['@@__IMMUTABLE_KEYED__@@'] != null || value['@@__IMMUTABLE_INDEXED__@@'] != null || value['@@__IMMUTABLE_ORDERED__@@'] != null || value['@@__IMMUTABLE_RECORD__@@'] != null) {\n    return true;\n  } // DOM nodes:\n\n\n  if (Recoil_isNode(value)) {\n    return true;\n  }\n\n  if (Recoil_isPromise(value)) {\n    return true;\n  }\n\n  if (value instanceof Error) {\n    return true;\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return true;\n  } // Some environments, just as Jest, don't work with the instanceof check\n\n\n  if (!isSSR$4 && !isReactNative$1 && ( // $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709\n  value === window || value instanceof Window)) {\n    return true;\n  }\n\n  return false;\n} // Recursively freeze a value to enforce it is read-only.\n// This may also have minimal performance improvements for enumerating\n// objects (based on browser implementations, of course)\n\n\nfunction deepFreezeValue(value) {\n  if (typeof value !== 'object' || shouldNotBeFrozen(value)) {\n    return;\n  }\n\n  Object.freeze(value); // Make all properties read-only\n\n  for (const key in value) {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      const prop = value[key]; // Prevent infinite recurssion for circular references.\n\n      if (typeof prop === 'object' && prop != null && !Object.isFrozen(prop)) {\n        deepFreezeValue(prop);\n      }\n    }\n  }\n\n  Object.seal(value); // This also makes existing properties non-configurable.\n}\n\nvar Recoil_deepFreezeValue = deepFreezeValue;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is a stub for some integration into FB internal stuff\n */\nfunction startPerfBlock(_id) {\n  return () => null;\n}\n\nvar Recoil_PerformanceTimings = {\n  startPerfBlock\n};\n\nconst {\n  loadableWithError: loadableWithError$1,\n  loadableWithPromise: loadableWithPromise$1,\n  loadableWithValue: loadableWithValue$2\n} = Recoil_Loadable$1;\n\n\n\nconst {\n  getNodeLoadable: getNodeLoadable$2,\n  peekNodeLoadable: peekNodeLoadable$1,\n  setNodeValue: setNodeValue$3\n} = Recoil_FunctionalCore;\n\nconst {\n  saveDependencyMapToStore: saveDependencyMapToStore$1\n} = Recoil_Graph;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$6,\n  RecoilValueNotReady: RecoilValueNotReady$2,\n  getConfigDeletionHandler: getConfigDeletionHandler$1,\n  getNode: getNode$6,\n  registerNode: registerNode$1\n} = Recoil_Node;\n\nconst {\n  isRecoilValue: isRecoilValue$3\n} = Recoil_RecoilValue$1;\n\nconst {\n  markRecoilValueModified: markRecoilValueModified$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  retainedByOptionWithDefault: retainedByOptionWithDefault$1\n} = Recoil_Retention;\n\nconst {\n  recoilCallback: recoilCallback$1\n} = Recoil_useRecoilCallback;\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  startPerfBlock: startPerfBlock$1\n} = Recoil_PerformanceTimings;\n\nclass Canceled {}\n\nconst CANCELED = new Canceled();\n/**\n * An ExecutionId is an arbitrary ID that lets us distinguish executions from\n * each other. This is necessary as we need a way of solving this problem:\n * \"given 3 async executions, only update state for the 'latest' execution when\n * it finishes running regardless of when the other 2 finish\". ExecutionIds\n * provide a convenient way of identifying executions so that we can track and\n * manage them over time.\n */\n\nconst dependencyStack = []; // for detecting circular dependencies.\n\nconst waitingStores = new Map();\n\nconst getNewExecutionId = (() => {\n  let executionId = 0;\n  return () => executionId++;\n})();\n/* eslint-disable no-redeclare */\n\n\nfunction selector(options) {\n  let recoilValue = null;\n  const {\n    key,\n    get,\n    cachePolicy_UNSTABLE: cachePolicy\n  } = options;\n  const set = options.set != null ? options.set : undefined; // flow\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof key !== 'string') {\n      throw Recoil_err('A key option with a unique string value must be provided when creating a selector.');\n    }\n\n    if (typeof get !== 'function') {\n      throw Recoil_err('Selectors must specify a get callback option to get the selector value.');\n    }\n  } // This is every discovered dependency across all executions\n\n\n  const discoveredDependencyNodeKeys = new Set();\n  const cache = Recoil_treeCacheFromPolicy(cachePolicy !== null && cachePolicy !== void 0 ? cachePolicy : {\n    equality: 'reference',\n    eviction: 'keep-all'\n  });\n  const retainedBy = retainedByOptionWithDefault$1(options.retainedBy_UNSTABLE);\n  const executionInfoMap = new Map();\n  let liveStoresCount = 0;\n\n  function selectorIsLive() {\n    return !Recoil_gkx('recoil_memory_managament_2020') || liveStoresCount > 0;\n  }\n\n  function selectorInit(store) {\n    store.getState().knownSelectors.add(key);\n    liveStoresCount++;\n    return () => {\n      liveStoresCount--;\n    };\n  }\n\n  function selectorShouldDeleteConfigOnRelease() {\n    return getConfigDeletionHandler$1(key) !== undefined && !selectorIsLive();\n  }\n\n  function resolveAsync(store, state, executionId, loadable, depValues) {\n    setCache(state, loadable, depValues);\n    setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n    notifyStoresOfResolvedAsync(store, executionId);\n  }\n\n  function notifyStoresOfResolvedAsync(store, executionId) {\n    if (isLatestExecution(store, executionId)) {\n      clearExecutionInfo(store);\n    }\n\n    const stores = waitingStores.get(executionId);\n\n    if (stores !== undefined) {\n      for (const waitingStore of stores) {\n        markRecoilValueModified$1(waitingStore, Recoil_nullthrows(recoilValue));\n      }\n\n      waitingStores.delete(executionId);\n    }\n  }\n\n  function markStoreWaitingForResolvedAsync(store, executionId) {\n    let stores = waitingStores.get(executionId);\n\n    if (stores == null) {\n      waitingStores.set(executionId, stores = new Set());\n    }\n\n    stores.add(store);\n  }\n\n  function getCachedNodeLoadable(store, state, nodeKey) {\n    const isKeyPointingToSelector = store.getState().knownSelectors.has(nodeKey);\n    /**\n     * It's important that we don't bypass calling getNodeLoadable for atoms\n     * as getNodeLoadable has side effects in state\n     */\n\n    if (isKeyPointingToSelector && state.atomValues.has(nodeKey)) {\n      return Recoil_nullthrows(state.atomValues.get(nodeKey));\n    }\n\n    const loadable = getNodeLoadable$2(store, state, nodeKey);\n\n    if (loadable.state !== 'loading' && isKeyPointingToSelector) {\n      state.atomValues.set(nodeKey, loadable);\n    }\n\n    return loadable;\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * returned from a selector's get() (either explicitly or implicitly by\n   * running a function that uses the \"async\" keyword). If a selector's get()\n   * returns a promise, we have two possibilities:\n   *\n   * 1. The promise will resolve, in which case it will have completely finished\n   *    executing without any remaining pending dependencies. No more retries\n   *    are needed and we can proceed with updating the cache and notifying\n   *    subscribers (if it is the latest execution, otherwise only the cache\n   *    will be updated and subscriptions will not be fired). This is the case\n   *    handled by the attached then() handler.\n   *\n   * 2. The promise will throw because it either has an error or it came across\n   *    an async dependency that has not yet resolved, in which case we will\n   *    call wrapDepdencyPromise(), whose responsibility is to handle dependency\n   *    promises. This case is handled by the attached catch() handler.\n   *\n   * Both branches will eventually resolve to the final result of the selector\n   * (or an error if a real error occurred).\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was thrown--AKA a\n   * dependency promise. Dependency promises should be passed to\n   * wrapPendingDependencyPromise()).\n   */\n\n\n  function wrapPendingPromise(store, promise, state, depValues, executionId, loadingDepsState) {\n    return promise.then(value => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      const loadable = loadableWithValue$2(value);\n      resolveAsync(store, state, executionId, loadable, depValues);\n      return value;\n    }).catch(errorOrPromise => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      updateExecutionInfoDepValues(store, executionId, depValues);\n\n      if (Recoil_isPromise(errorOrPromise)) {\n        return wrapPendingDependencyPromise(store, errorOrPromise, state, depValues, executionId, loadingDepsState);\n      }\n\n      const loadable = loadableWithError$1(errorOrPromise);\n      resolveAsync(store, state, executionId, loadable, depValues);\n      throw errorOrPromise;\n    });\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * thrown from a selector's get(). If a selector's get() throws a promise,\n   * we have two possibilities:\n   *\n   * 1. The promise will resolve, meaning one of our selector's dependencies is\n   *    now available and we should \"retry\" our get() by running it again. This\n   *    is the case handled by the attached then() handler.\n   *\n   * 2. The promise will throw because something went wrong with the dependency\n   *    promise (in other words a real error occurred). This case is handled by\n   *    the attached catch() handler. If the dependency promise throws, it is\n   *    _always_ a real error and not another dependency promise (any dependency\n   *    promises would have been handled upstream).\n   *\n   * The then() branch will eventually resolve to the final result of the\n   * selector (or an error if a real error occurs), and the catch() will always\n   * resolve to an error because the dependency promise is a promise that was\n   * wrapped upstream, meaning it will only resolve to its real value or to a\n   * real error.\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was returned from\n   * get(). The intention is that this function is only passed promises that\n   * were thrown due to a pending dependency. Promises returned by get() should\n   * be passed to wrapPendingPromise() instead.\n   */\n\n\n  function wrapPendingDependencyPromise(store, promise, state, existingDeps, executionId, loadingDepsState) {\n    return promise.then(resolvedDep => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      } // Check if we are handling a pending Recoil dependency or if the user\n      // threw their own Promise to \"suspend\" a selector evaluation.  We need\n      // to check that the loadingDepPromise actually matches the promise that\n      // we caught in case the selector happened to catch the promise we threw\n      // for a pending Recoil dependency from `getRecoilValue()` and threw\n      // their own promise instead.\n\n\n      if (loadingDepsState.loadingDepKey != null && loadingDepsState.loadingDepPromise === promise) {\n        /**\n         * Note for async atoms, this means we are changing the atom's value\n         * in the store for the given version. This should be alright because\n         * the version of state is now stale and a new version will have\n         * already been triggered by the atom being resolved (see this logic\n         * in Recoil_atom.js)\n         */\n        state.atomValues.set(loadingDepsState.loadingDepKey, loadableWithValue$2(resolvedDep));\n      } else {\n        /**\n         * If resolvedDepKey is not defined, the promise was a user-thrown\n         * promise. User-thrown promises are an advanced feature and they\n         * should be avoided in almost all cases. Using `loadable.map()` inside\n         * of selectors for loading loadables and then throwing that mapped\n         * loadable's promise is an example of a user-thrown promise.\n         *\n         * When we hit a user-thrown promise, we have to bail out of an optimization\n         * where we bypass calculating selector cache keys for selectors that\n         * have been previously seen for a given state (these selectors are saved in\n         * state.atomValues) to avoid stale state as we have no way of knowing\n         * what state changes happened (if any) in result to the promise resolving.\n         *\n         * Ideally we would only bail out selectors that are in the chain of\n         * dependencies for this selector, but there's currently no way to get\n         * a full list of a selector's downstream nodes because the state that\n         * is executing may be a discarded tree (so store.getGraph(state.version)\n         * will be empty), and the full dep tree may not be in the selector\n         * caches in the case where the selector's cache was cleared. To solve\n         * for this we would have to keep track of all running selector\n         * executions and their downstream deps. Because this only covers edge\n         * cases, that complexity might not be justifyable.\n         */\n        store.getState().knownSelectors.forEach(nodeKey => {\n          state.atomValues.delete(nodeKey);\n        });\n      }\n      /**\n       * Optimization: Now that the dependency has resolved, let's try hitting\n       * the cache in case the dep resolved to a value we have previously seen.\n       *\n       * TODO:\n       * Note this optimization is not perfect because it only prevents re-executions\n       * _after_ the point where an async dependency is found. Any code leading\n       * up to the async dependency may have run unnecessarily. The ideal case\n       * would be to wait for the async dependency to resolve first, check the\n       * cache, and prevent _any_ execution of the selector if the resulting\n       * value of the dependency leads to a path that is found in the cache.\n       * The ideal case is more difficult to implement as it would require that\n       * we capture and wait for the the async dependency right after checking\n       * the cache. The current approach takes advantage of the fact that running\n       * the selector already has a code path that lets us exit early when\n       * an async dep resolves.\n       */\n\n\n      const cachedLoadable = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n\n      if (cachedLoadable && cachedLoadable.state !== 'loading') {\n        /**\n         * This has to notify stores of a resolved async, even if there is no\n         * current pending execution for the following case:\n         * 1) A component renders with this pending loadable.\n         * 2) The upstream dependency resolves.\n         * 3) While processing some other selector it reads this one, such as\n         *    while traversing its dependencies.  At this point it gets the\n         *    new resolved value synchronously and clears the current\n         *    execution ID.  The component wasn't getting the value itself,\n         *    though, so it still has the pending loadable.\n         * 4) When this code executes the current execution id was cleared\n         *    and it wouldn't notify the component of the new value.\n         *\n         * I think this is only an issue with \"early\" rendering since the\n         * components got their value using the in-progress execution.\n         * We don't have a unit test for this case yet.  I'm not sure it is\n         * necessary with recoil_concurrent_support mode.\n         */\n        if (isLatestExecution(store, executionId) || getExecutionInfo(store) == null) {\n          notifyStoresOfResolvedAsync(store, executionId);\n        }\n\n        if (cachedLoadable.state === 'hasValue') {\n          return cachedLoadable.contents;\n        } else {\n          throw cachedLoadable.contents;\n        }\n      }\n      /**\n       * If this execution is stale, let's check to see if there is some in\n       * progress execution with a matching state. If we find a match, then\n       * we can take the value from that in-progress execution. Note this may\n       * sound like an edge case, but may be very common in cases where a\n       * loading dependency resolves from loading to having a value (thus\n       * possibly triggering a re-render), and React re-renders before the\n       * chained .then() functions run, thus starting a new execution as the\n       * dep has changed value. Without this check we will run the selector\n       * twice (once in the new execution and once again in this .then(), so\n       * this check is necessary to keep unnecessary re-executions to a\n       * minimum).\n       *\n       * Also note this code does not check across all executions that may be\n       * running. It only optimizes for the _latest_ execution per store as\n       * we currently do not maintain a list of all currently running executions.\n       * This means in some cases we may run selectors more than strictly\n       * necessary when there are multiple executions running for the same\n       * selector. This may be a valid tradeoff as checking for dep changes\n       * across all in-progress executions may take longer than just\n       * re-running the selector. This will be app-dependent, and maybe in the\n       * future we can make the behavior configurable. An ideal fix may be\n       * to extend the tree cache to support caching loading states.\n       */\n\n\n      if (!isLatestExecution(store, executionId)) {\n        const executionInfo = getExecutionInfoOfInProgressExecution(state);\n\n        if ((executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.latestLoadable.state) === 'loading') {\n          /**\n           * Returning promise here without wrapping as the wrapper logic was\n           * already done upstream when this promise was generated.\n           */\n          return executionInfo.latestLoadable.contents;\n        }\n      } // Retry the selector evaluation now that the dependency has resolved\n\n\n      const [loadable, depValues] = evaluateSelectorGetter(store, state, executionId);\n      updateExecutionInfoDepValues(store, executionId, depValues);\n\n      if (loadable.state !== 'loading') {\n        resolveAsync(store, state, executionId, loadable, depValues);\n      }\n\n      if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      }\n\n      return loadable.contents;\n    }).catch(error => {\n      // The selector was released since the request began; ignore the response.\n      if (error instanceof Canceled) {\n        throw CANCELED;\n      }\n\n      if (!selectorIsLive()) {\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      const loadable = loadableWithError$1(error);\n      resolveAsync(store, state, executionId, loadable, existingDeps);\n      throw error;\n    });\n  }\n\n  function setDepsInStore(store, state, deps, executionId) {\n    var _store$getState, _store$getState$curre, _store$getState2, _store$getState2$next;\n\n    if (isLatestExecution(store, executionId) || state.version === ((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$curre = _store$getState.currentTree) === null || _store$getState$curre === void 0 ? void 0 : _store$getState$curre.version) || state.version === ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$next = _store$getState2.nextTree) === null || _store$getState2$next === void 0 ? void 0 : _store$getState2$next.version)) {\n      var _store$getState$nextT, _store$getState3, _store$getState3$next;\n\n      saveDependencyMapToStore$1(new Map([[key, deps]]), store, (_store$getState$nextT = (_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$next = _store$getState3.nextTree) === null || _store$getState3$next === void 0 ? void 0 : _store$getState3$next.version) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree.version);\n      deps.forEach(nodeKey => discoveredDependencyNodeKeys.add(nodeKey));\n    }\n  }\n\n  function setNewDepInStore(store, state, deps, newDepKey, executionId) {\n    deps.add(newDepKey);\n    setDepsInStore(store, state, deps, executionId);\n  }\n\n  function evaluateSelectorGetter(store, state, executionId) {\n    const endPerfBlock = startPerfBlock$1(key); // TODO T63965866: use execution ID here\n\n    let gateCallback = true;\n\n    const finishEvaluation = () => {\n      endPerfBlock();\n      gateCallback = false;\n    };\n\n    let result;\n    let resultIsError = false;\n    let loadable;\n    const loadingDepsState = {\n      loadingDepKey: null,\n      loadingDepPromise: null\n    };\n    const depValues = new Map();\n    /**\n     * Starting a fresh set of deps that we'll be using to update state. We're\n     * starting a new set versus adding it in existing state deps because\n     * the version of state that we update deps for may be a more recent version\n     * than the version the selector was called with. This is because the latest\n     * execution will update the deps of the current/latest version of state (\n     * this is safe to do because the fact that the selector is the latest\n     * execution means the deps we discover below are our best guess at the\n     * deps for the current/latest state in the store)\n     */\n\n    const deps = new Set();\n    setDepsInStore(store, state, deps, executionId);\n\n    function getRecoilValue(dep) {\n      const {\n        key: depKey\n      } = dep;\n      setNewDepInStore(store, state, deps, depKey, executionId);\n      const depLoadable = getCachedNodeLoadable(store, state, depKey);\n      depValues.set(depKey, depLoadable);\n\n      switch (depLoadable.state) {\n        case 'hasValue':\n          return depLoadable.contents;\n\n        case 'hasError':\n          throw depLoadable.contents;\n\n        case 'loading':\n          loadingDepsState.loadingDepKey = depKey;\n          loadingDepsState.loadingDepPromise = depLoadable.contents;\n          throw depLoadable.contents;\n      }\n\n      throw Recoil_err('Invalid Loadable state');\n    }\n\n    const getCallback = fn => {\n      return (...args) => {\n        if (gateCallback) {\n          throw Recoil_err('Callbacks from getCallback() should only be called asynchronously after the selector is evalutated.  It can be used for selectors to return objects with callbacks that can work with Recoil state without a subscription.');\n        }\n\n        !(recoilValue != null) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Recoil Value can never be null') : Recoil_invariant(false) : void 0;\n        return recoilCallback$1(store, fn, args, {\n          node: recoilValue\n        } // flowlint-line unclear-type:off\n        );\n      };\n    };\n\n    try {\n      result = get({\n        get: getRecoilValue,\n        getCallback\n      });\n      result = isRecoilValue$3(result) ? getRecoilValue(result) : result;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingPromise(store, result, state, depValues, executionId, loadingDepsState).finally(finishEvaluation);\n      } else {\n        finishEvaluation();\n      }\n    } catch (errorOrDepPromise) {\n      result = errorOrDepPromise;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingDependencyPromise(store, result, state, depValues, executionId, loadingDepsState).finally(finishEvaluation);\n      } else {\n        resultIsError = true;\n        finishEvaluation();\n      }\n    }\n\n    if (resultIsError) {\n      loadable = loadableWithError$1(result);\n    } else if (Recoil_isPromise(result)) {\n      loadable = loadableWithPromise$1(result);\n    } else {\n      loadable = loadableWithValue$2(result);\n    }\n\n    return [loadable, depValues];\n  }\n\n  function getValFromCacheAndUpdatedDownstreamDeps(store, state) {\n    const depsAfterCacheDone = new Set();\n    const executionInfo = getExecutionInfo(store);\n    let cachedVal;\n\n    try {\n      cachedVal = cache.get(nodeKey => {\n        !(typeof nodeKey === 'string') ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Cache nodeKey is type string') : Recoil_invariant(false) : void 0;\n        const loadable = getCachedNodeLoadable(store, state, nodeKey);\n        return loadable.contents;\n      }, {\n        onNodeVisit: node => {\n          if (node.type === 'branch' && node.nodeKey !== key) {\n            depsAfterCacheDone.add(node.nodeKey);\n          }\n        }\n      });\n    } catch (error) {\n      throw Recoil_err(`Problem with cache lookup for selector \"${key}\": ${error.message}`);\n    }\n    /**\n     * Ensure store contains correct dependencies if we hit the cache so that\n     * the store deps and cache are in sync for a given state. This is important\n     * because store deps are normally updated when new executions are created,\n     * but cache hits don't trigger new executions but they still _may_ signifiy\n     * a change in deps in the store if the store deps for this state are empty\n     * or stale.\n     */\n\n\n    if (cachedVal) {\n      setDepsInStore(store, state, depsAfterCacheDone, executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.latestExecutionId);\n    }\n\n    return cachedVal;\n  }\n  /**\n   * FIXME: dep keys should take into account the state of the loadable to\n   * prevent the edge case where a loadable with an error and a loadable with\n   * an error as a value are treated as the same thing incorrectly. For example\n   * these two should be treated differently:\n   *\n   * selector({key: '', get: () => new Error('hi')});\n   * selector({key: '', get () => {throw new Error('hi')}});\n   *\n   * With current implementation they are treated the same\n   */\n\n\n  function depValuesToDepRoute(depValues) {\n    return Array.from(depValues.entries()).map(([depKey, valLoadable]) => [depKey, valLoadable.contents]);\n  }\n\n  function getValFromRunningNewExecutionAndUpdatedDeps(store, state) {\n    const newExecutionId = getNewExecutionId();\n    const [loadable, newDepValues] = evaluateSelectorGetter(store, state, newExecutionId);\n    /**\n     * Conditionally updates the cache with a given loadable.\n     *\n     * We only cache loadables that are not loading because our cache keys are\n     * based on dep values, which are in an unfinished state for loadables that\n     * have a 'loading' state (new deps may be discovered while the selector\n     * runs its async code). We never want to cache partial dependencies b/c it\n     * could lead to errors, such as prematurely returning the result based on a\n     * partial list of deps-- we need the full list of deps to ensure that we\n     * are returning the correct result from cache.\n     */\n\n    if (loadable.state === 'loading') {\n      setExecutionInfo(store, newExecutionId, loadable, newDepValues, state);\n      markStoreWaitingForResolvedAsync(store, newExecutionId);\n    } else {\n      clearExecutionInfo(store);\n      setCache(state, loadable, newDepValues);\n    }\n\n    return loadable;\n  }\n  /**\n   * Given a tree state, this function returns the \"selector result\", which is\n   * defined as a size-2 tuple of [DependencyMap, Loadable<T>].\n   *\n   * The selector's get() function will only be re-evaluated if _both_ of the\n   * following statements are true:\n   *\n   * 1. The current dep values from the given state produced a cache key that\n   *    was not found in the cache.\n   * 2. There is no currently running async execution OR there is an\n   *    async execution that is running, but after comparing the dep values in\n   *    the given state with the dep values that the execution has discovered so\n   *    far we find that at least one dep value has changed, in which case we\n   *    start a new execution (the previously running execution will continue to\n   *    run to completion, but only the new execution will be deemed the\n   *    'latest' execution, meaning it will be the only execution that will\n   *    update global state when it is finished. Any non-latest executions will\n   *    run to completion and update the selector cache but not global state).\n   */\n\n\n  function getSelectorValAndUpdatedDeps(store, state) {\n    const cachedVal = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n\n    if (cachedVal != null) {\n      clearExecutionInfo(store);\n      return cachedVal;\n    }\n\n    const inProgressExecutionInfo = getExecutionInfoOfInProgressExecution(state); // FIXME: this won't work with custom caching b/c it uses separate cache\n\n    if (inProgressExecutionInfo != null) {\n      var _inProgressExecutionI;\n\n      if (((_inProgressExecutionI = inProgressExecutionInfo.latestLoadable) === null || _inProgressExecutionI === void 0 ? void 0 : _inProgressExecutionI.state) === 'loading') {\n        markStoreWaitingForResolvedAsync(store, Recoil_nullthrows(inProgressExecutionInfo.latestExecutionId));\n      } // FIXME: check after the fact to see if we made the right choice by waiting\n\n\n      return Recoil_nullthrows(inProgressExecutionInfo.latestLoadable);\n    }\n\n    return getValFromRunningNewExecutionAndUpdatedDeps(store, state);\n  }\n  /**\n   * Searches execution info across all stores to see if there is an in-progress\n   * execution whose dependency values match the values of the requesting store.\n   */\n\n\n  function getExecutionInfoOfInProgressExecution(state) {\n    var _Array$from$find;\n\n    const [, executionInfo] = (_Array$from$find = Array.from(executionInfoMap.entries()).find(([store, execInfo]) => {\n      return execInfo.latestLoadable != null && execInfo.latestExecutionId != null && !haveAsyncDepsChanged(store, state);\n    })) !== null && _Array$from$find !== void 0 ? _Array$from$find : [];\n    return executionInfo;\n  }\n\n  const mapOfCheckedVersions = new Map();\n\n  function haveAsyncDepsChanged(store, state) {\n    var _executionInfo$depVal, _mapOfCheckedVersions;\n\n    const executionInfo = getExecutionInfo(store);\n    const oldDepValues = (_executionInfo$depVal = executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.depValuesDiscoveredSoFarDuringAsyncWork) !== null && _executionInfo$depVal !== void 0 ? _executionInfo$depVal : new Map();\n    const cachedDepValuesCheckedForThisVersion = Array(((_mapOfCheckedVersions = mapOfCheckedVersions.get(state.version)) !== null && _mapOfCheckedVersions !== void 0 ? _mapOfCheckedVersions : new Map()).entries());\n    const isCachedVersionSame = mapOfCheckedVersions.has(state.version) && cachedDepValuesCheckedForThisVersion.length === oldDepValues.size && cachedDepValuesCheckedForThisVersion.every(([nodeKey, nodeVal]) => {\n      return oldDepValues.get(nodeKey) === nodeVal;\n    });\n\n    if (oldDepValues == null || state.version === (executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.stateVersion) || isCachedVersionSame) {\n      return false;\n    }\n\n    mapOfCheckedVersions.set(state.version, new Map(oldDepValues));\n    return Array.from(oldDepValues).some(([nodeKey, oldVal]) => {\n      const loadable = getCachedNodeLoadable(store, state, nodeKey);\n      return loadable.contents !== oldVal.contents;\n    });\n  }\n\n  function getExecutionInfo(store) {\n    return executionInfoMap.get(store);\n  }\n  /**\n   * This function will update the selector's execution info when the selector\n   * has either finished running an execution or has started a new execution. If\n   * the given loadable is in a 'loading' state, the intention is that a new\n   * execution has started. Otherwise, the intention is that an execution has\n   * just finished.\n   */\n\n\n  function setExecutionInfo(store, newExecutionId, loadable, depValues, state) {\n    executionInfoMap.set(store, {\n      depValuesDiscoveredSoFarDuringAsyncWork: depValues,\n      latestExecutionId: newExecutionId,\n      latestLoadable: loadable,\n      stateVersion: state.version\n    });\n  }\n\n  function updateExecutionInfoDepValues(store, executionId, depValues) {\n    if (isLatestExecution(store, executionId)) {\n      const executionInfo = getExecutionInfo(store);\n\n      if (executionInfo != null) {\n        executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n      }\n    }\n  }\n\n  function clearExecutionInfo(store) {\n    executionInfoMap.delete(store);\n  }\n\n  function isLatestExecution(store, executionId) {\n    var _getExecutionInfo;\n\n    return executionId === ((_getExecutionInfo = getExecutionInfo(store)) === null || _getExecutionInfo === void 0 ? void 0 : _getExecutionInfo.latestExecutionId);\n  }\n\n  function setCache(state, loadable, depValues) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (loadable.state !== 'loading' && Boolean(options.dangerouslyAllowMutability) === false) {\n        Recoil_deepFreezeValue(loadable.contents);\n      }\n    }\n\n    state.atomValues.set(key, loadable);\n\n    try {\n      cache.set(depValuesToDepRoute(depValues), loadable);\n    } catch (error) {\n      throw Recoil_err(`Problem with setting cache for selector \"${key}\": ${error.message}`);\n    }\n  }\n\n  function detectCircularDependencies(fn) {\n    if (dependencyStack.includes(key)) {\n      const message = `Recoil selector has circular dependencies: ${dependencyStack.slice(dependencyStack.indexOf(key)).join(' \\u2192 ')}`;\n      return loadableWithError$1(Recoil_err(message));\n    }\n\n    dependencyStack.push(key);\n\n    try {\n      return fn();\n    } finally {\n      dependencyStack.pop();\n    }\n  }\n\n  function selectorPeek(store, state) {\n    return cache.get(nodeKey => {\n      var _peekNodeLoadable;\n\n      !(typeof nodeKey === 'string') ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Cache nodeKey is type string') : Recoil_invariant(false) : void 0;\n      return (_peekNodeLoadable = peekNodeLoadable$1(store, state, nodeKey)) === null || _peekNodeLoadable === void 0 ? void 0 : _peekNodeLoadable.contents;\n    });\n  }\n\n  function selectorGet(store, state) {\n    return detectCircularDependencies(() => getSelectorValAndUpdatedDeps(store, state));\n  }\n\n  function invalidateSelector(state) {\n    state.atomValues.delete(key);\n  }\n\n  function clearSelectorCache(store, treeState) {\n    !(recoilValue != null) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Recoil Value can never be null') : Recoil_invariant(false) : void 0;\n\n    for (const nodeKey of discoveredDependencyNodeKeys) {\n      var _node$clearCache;\n\n      const node = getNode$6(nodeKey);\n      (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, treeState);\n    }\n\n    discoveredDependencyNodeKeys.clear();\n    invalidateSelector(treeState);\n    cache.clear();\n    markRecoilValueModified$1(store, recoilValue);\n  }\n\n  if (set != null) {\n    /**\n     * ES5 strict mode prohibits defining non-top-level function declarations,\n     * so don't use function declaration syntax here\n     */\n    const selectorSet = (store, state, newValue) => {\n      let syncSelectorSetFinished = false;\n      const writes = new Map();\n\n      function getRecoilValue({\n        key: depKey\n      }) {\n        if (syncSelectorSetFinished) {\n          throw Recoil_err('Recoil: Async selector sets are not currently supported.');\n        }\n\n        const loadable = getCachedNodeLoadable(store, state, depKey);\n\n        if (loadable.state === 'hasValue') {\n          return loadable.contents;\n        } else if (loadable.state === 'loading') {\n          throw new RecoilValueNotReady$2(depKey);\n        } else {\n          throw loadable.contents;\n        }\n      }\n\n      function setRecoilState(recoilState, valueOrUpdater) {\n        if (syncSelectorSetFinished) {\n          throw Recoil_err('Recoil: Async selector sets are not currently supported.');\n        }\n\n        const setValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict type S from being a function itself without losing support for opaque types\n        // flowlint-next-line unclear-type:off\n        valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n        const upstreamWrites = setNodeValue$3(store, state, recoilState.key, setValue);\n        upstreamWrites.forEach((v, k) => writes.set(k, v));\n      }\n\n      function resetRecoilState(recoilState) {\n        setRecoilState(recoilState, DEFAULT_VALUE$6);\n      }\n\n      const ret = set( // $FlowFixMe[incompatible-call]\n      {\n        set: setRecoilState,\n        get: getRecoilValue,\n        reset: resetRecoilState\n      }, newValue); // set should be a void method, but if the user makes it `async`, then it\n      // will return a Promise, which we don't currently support.\n\n      if (ret !== undefined) {\n        throw Recoil_isPromise(ret) ? Recoil_err('Recoil: Async selector sets are not currently supported.') : Recoil_err('Recoil: selector set should be a void function.');\n      }\n\n      syncSelectorSetFinished = true;\n      return writes;\n    };\n\n    return recoilValue = registerNode$1({\n      key,\n      nodeType: 'selector',\n      peek: selectorPeek,\n      get: selectorGet,\n      set: selectorSet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      clearCache: clearSelectorCache,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy\n    });\n  } else {\n    return recoilValue = registerNode$1({\n      key,\n      nodeType: 'selector',\n      peek: selectorPeek,\n      get: selectorGet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      clearCache: clearSelectorCache,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy\n    });\n  }\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selector = selector;\n\n// @fb-only: import type {ScopeRules} from 'Recoil_ScopedAtom';\n// @fb-only: const {scopedAtom} = require('Recoil_ScopedAtom');\nconst {\n  loadableWithError: loadableWithError$2,\n  loadableWithPromise: loadableWithPromise$2,\n  loadableWithValue: loadableWithValue$3\n} = Recoil_Loadable$1;\n\nconst {\n  peekNodeInfo: peekNodeInfo$3\n} = Recoil_FunctionalCore;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$7,\n  DefaultValue: DefaultValue$2,\n  getConfigDeletionHandler: getConfigDeletionHandler$2,\n  registerNode: registerNode$2,\n  setConfigDeletionHandler: setConfigDeletionHandler$1\n} = Recoil_Node;\n\nconst {\n  isRecoilValue: isRecoilValue$4\n} = Recoil_RecoilValue$1;\n\nconst {\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$4,\n  markRecoilValueModified: markRecoilValueModified$2,\n  setRecoilValue: setRecoilValue$4,\n  setRecoilValueLoadable: setRecoilValueLoadable$2\n} = Recoil_RecoilValueInterface;\n\nconst {\n  retainedByOptionWithDefault: retainedByOptionWithDefault$2\n} = Recoil_Retention;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction baseAtom(options) {\n  const {\n    key,\n    persistence_UNSTABLE: persistence\n  } = options;\n  const retainedBy = retainedByOptionWithDefault$2(options.retainedBy_UNSTABLE);\n  let liveStoresCount = 0;\n  let defaultLoadable = Recoil_isPromise(options.default) ? loadableWithPromise$2(options.default.then(value => {\n    defaultLoadable = loadableWithValue$3(value);\n    return value;\n  }).catch(error => {\n    defaultLoadable = loadableWithError$2(error);\n    throw error;\n  })) : loadableWithValue$3(options.default);\n  maybeFreezeValueOrPromise(options.default);\n  let cachedAnswerForUnvalidatedValue = undefined; // Cleanup handlers for this atom\n  // Rely on stable reference equality of the store to use it as a key per <RecoilRoot>\n\n  const cleanupEffectsByStore = new Map();\n\n  function maybeFreezeValueOrPromise(valueOrPromise) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (options.dangerouslyAllowMutability !== true) {\n        if (Recoil_isPromise(valueOrPromise)) {\n          return valueOrPromise.then(value => {\n            Recoil_deepFreezeValue(value);\n            return value;\n          });\n        } else {\n          Recoil_deepFreezeValue(valueOrPromise);\n          return valueOrPromise;\n        }\n      }\n    }\n\n    return valueOrPromise;\n  }\n\n  function wrapPendingPromise(store, promise) {\n    const wrappedPromise = promise.then(value => {\n      var _store$getState$nextT, _state$atomValues$get;\n\n      const state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;\n\n      if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {\n        setRecoilValue$4(store, node, value);\n      }\n\n      return value;\n    }).catch(error => {\n      var _store$getState$nextT2, _state$atomValues$get2;\n\n      const state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;\n\n      if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {\n        setRecoilValueLoadable$2(store, node, loadableWithError$2(error));\n      }\n\n      throw error;\n    });\n    return wrappedPromise;\n  }\n\n  function initAtom(store, initState, trigger) {\n    var _options$effects;\n\n    liveStoresCount++;\n\n    const cleanupAtom = () => {\n      var _cleanupEffectsByStor;\n\n      liveStoresCount--;\n      (_cleanupEffectsByStor = cleanupEffectsByStore.get(store)) === null || _cleanupEffectsByStor === void 0 ? void 0 : _cleanupEffectsByStor.forEach(cleanup => cleanup());\n      cleanupEffectsByStore.delete(store);\n    };\n\n    store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve\n\n    if (defaultLoadable.state === 'loading') {\n      const notifyDefaultSubscribers = () => {\n        var _store$getState$nextT3;\n\n        const state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;\n\n        if (!state.atomValues.has(key)) {\n          markRecoilValueModified$2(store, node);\n        }\n      };\n\n      defaultLoadable.contents.finally(notifyDefaultSubscribers);\n    } ///////////////////\n    // Run Atom Effects\n    ///////////////////\n\n\n    const effects = (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE;\n\n    if (effects != null) {\n      // This state is scoped by Store, since this is in the initAtom() closure\n      let duringInit = true;\n      let initValue = DEFAULT_VALUE$7;\n      let isInitError = false;\n      let pendingSetSelf = null;\n\n      function getLoadable(recoilValue) {\n        // Normally we can just get the current value of another atom.\n        // But for our own value we need to check if there is a pending\n        // initialized value or get the fallback default value.\n        if (duringInit && recoilValue.key === key) {\n          // Cast T to S\n          const retValue = initValue; // flowlint-line unclear-type:off\n\n          return retValue instanceof DefaultValue$2 ? peekAtom(store, initState) // flowlint-line unclear-type:off\n          : Recoil_isPromise(retValue) ? loadableWithPromise$2(retValue.then(v => v instanceof DefaultValue$2 ? // Cast T to S\n          defaultLoadable.toPromise() // flowlint-line unclear-type:off\n          : v)) : loadableWithValue$3(retValue);\n        }\n\n        return getRecoilValueAsLoadable$4(store, recoilValue);\n      }\n\n      function getPromise(recoilValue) {\n        return getLoadable(recoilValue).toPromise();\n      }\n\n      function getInfo_UNSTABLE(recoilValue) {\n        var _store$getState$nextT4;\n\n        const info = peekNodeInfo$3(store, (_store$getState$nextT4 = store.getState().nextTree) !== null && _store$getState$nextT4 !== void 0 ? _store$getState$nextT4 : store.getState().currentTree, recoilValue.key);\n        return duringInit && recoilValue.key === key && !(initValue instanceof DefaultValue$2) ? { ...info,\n          isSet: true,\n          loadable: getLoadable(recoilValue)\n        } : info;\n      }\n\n      const setSelf = effect => valueOrUpdater => {\n        if (duringInit) {\n          const currentLoadable = getLoadable(node);\n          const currentValue = currentLoadable.state === 'hasValue' ? currentLoadable.contents : DEFAULT_VALUE$7;\n          initValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict T from being a function without losing support for opaque types\n          valueOrUpdater(currentValue) // flowlint-line unclear-type:off\n          : valueOrUpdater;\n\n          if (Recoil_isPromise(initValue)) {\n            initValue = initValue.then(value => {\n              // Avoid calling onSet() when setSelf() initializes with a Promise\n              pendingSetSelf = {\n                effect,\n                value\n              };\n              return value;\n            });\n          }\n        } else {\n          if (Recoil_isPromise(valueOrUpdater)) {\n            throw Recoil_err('Setting atoms to async values is not implemented.');\n          }\n\n          if (typeof valueOrUpdater !== 'function') {\n            pendingSetSelf = {\n              effect,\n              value: valueOrUpdater\n            };\n          }\n\n          setRecoilValue$4(store, node, typeof valueOrUpdater === 'function' ? currentValue => {\n            const newValue = // cast to any because we can't restrict T from being a function without losing support for opaque types\n            valueOrUpdater(currentValue); // flowlint-line unclear-type:off\n\n            pendingSetSelf = {\n              effect,\n              value: newValue\n            };\n            return newValue;\n          } : valueOrUpdater);\n        }\n      };\n\n      const resetSelf = effect => () => setSelf(effect)(DEFAULT_VALUE$7);\n\n      const onSet = effect => handler => {\n        var _cleanupEffectsByStor2;\n\n        const {\n          release\n        } = store.subscribeToTransactions(currentStore => {\n          var _currentTree$atomValu;\n\n          // eslint-disable-next-line prefer-const\n          let {\n            currentTree,\n            previousTree\n          } = currentStore.getState();\n\n          if (!previousTree) {\n            Recoil_recoverableViolation('Transaction subscribers notified without a next tree being present -- this is a bug in Recoil');\n            previousTree = currentTree; // attempt to trundle on\n          }\n\n          const newLoadable = (_currentTree$atomValu = currentTree.atomValues.get(key)) !== null && _currentTree$atomValu !== void 0 ? _currentTree$atomValu : defaultLoadable;\n\n          if (newLoadable.state === 'hasValue') {\n            var _previousTree$atomVal, _pendingSetSelf, _pendingSetSelf2, _pendingSetSelf3;\n\n            const newValue = newLoadable.contents;\n            const oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;\n            const oldValue = oldLoadable.state === 'hasValue' ? oldLoadable.contents : DEFAULT_VALUE$7; // TODO This isn't actually valid, use as a placeholder for now.\n            // Ignore atom value changes that were set via setSelf() in the same effect.\n            // We will still properly call the handler if there was a subsequent\n            // set from something other than an atom effect which was batched\n            // with the `setSelf()` call.  However, we may incorrectly ignore\n            // the handler if the subsequent batched call happens to set the\n            // atom to the exact same value as the `setSelf()`.   But, in that\n            // case, it was kind of a noop, so the semantics are debatable..\n\n            if (((_pendingSetSelf = pendingSetSelf) === null || _pendingSetSelf === void 0 ? void 0 : _pendingSetSelf.effect) !== effect || ((_pendingSetSelf2 = pendingSetSelf) === null || _pendingSetSelf2 === void 0 ? void 0 : _pendingSetSelf2.value) !== newValue) {\n              handler(newValue, oldValue, !currentTree.atomValues.has(key));\n            } else if (((_pendingSetSelf3 = pendingSetSelf) === null || _pendingSetSelf3 === void 0 ? void 0 : _pendingSetSelf3.effect) === effect) {\n              pendingSetSelf = null;\n            }\n          }\n        }, key);\n        cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor2 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor2 !== void 0 ? _cleanupEffectsByStor2 : []), release]);\n      };\n\n      for (const effect of effects) {\n        try {\n          const cleanup = effect({\n            node,\n            storeID: store.storeID,\n            trigger,\n            setSelf: setSelf(effect),\n            resetSelf: resetSelf(effect),\n            onSet: onSet(effect),\n            getPromise,\n            getLoadable,\n            getInfo_UNSTABLE\n          });\n\n          if (cleanup != null) {\n            var _cleanupEffectsByStor3;\n\n            cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor3 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor3 !== void 0 ? _cleanupEffectsByStor3 : []), cleanup]);\n          }\n        } catch (error) {\n          initValue = error;\n          isInitError = true;\n        }\n      }\n\n      duringInit = false; // Mutate initial state in place since we know there are no other subscribers\n      // since we are the ones initializing on first use.\n\n      if (!(initValue instanceof DefaultValue$2)) {\n        var _store$getState$nextT5;\n\n        const frozenInitValue = maybeFreezeValueOrPromise(initValue);\n        const initLoadable = isInitError ? loadableWithError$2(initValue) : Recoil_isPromise(frozenInitValue) ? loadableWithPromise$2(wrapPendingPromise(store, frozenInitValue)) : loadableWithValue$3(frozenInitValue);\n        initState.atomValues.set(key, initLoadable); // If there is a pending transaction, then also mutate the next state tree.\n        // This could happen if the atom was first initialized in an action that\n        // also updated some other atom's state.\n\n        (_store$getState$nextT5 = store.getState().nextTree) === null || _store$getState$nextT5 === void 0 ? void 0 : _store$getState$nextT5.atomValues.set(key, initLoadable);\n      }\n    }\n\n    return cleanupAtom;\n  }\n\n  function peekAtom(_store, state) {\n    var _ref, _state$atomValues$get3;\n\n    return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : cachedAnswerForUnvalidatedValue) !== null && _ref !== void 0 ? _ref : defaultLoadable;\n  }\n\n  function getAtom(_store, state) {\n    if (state.atomValues.has(key)) {\n      // Atom value is stored in state:\n      return Recoil_nullthrows(state.atomValues.get(key));\n    } else if (state.nonvalidatedAtoms.has(key)) {\n      // Atom value is stored but needs validation before use.\n      // We might have already validated it and have a cached validated value:\n      if (cachedAnswerForUnvalidatedValue != null) {\n        return cachedAnswerForUnvalidatedValue;\n      }\n\n      if (persistence == null) {\n        Recoil_expectationViolation(`Tried to restore a persisted value for atom ${key} but it has no persistence settings.`);\n        return defaultLoadable;\n      }\n\n      const nonvalidatedValue = state.nonvalidatedAtoms.get(key);\n      const validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$7);\n      const validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$3(validatorResult);\n      cachedAnswerForUnvalidatedValue = validatedValueLoadable;\n      return cachedAnswerForUnvalidatedValue;\n    } else {\n      return defaultLoadable;\n    }\n  }\n\n  function invalidateAtom() {\n    cachedAnswerForUnvalidatedValue = undefined;\n  }\n\n  function setAtom(_store, state, newValue) {\n    // Bail out if we're being set to the existing value, or if we're being\n    // reset but have no stored value (validated or unvalidated) to reset from:\n    if (state.atomValues.has(key)) {\n      const existing = Recoil_nullthrows(state.atomValues.get(key));\n\n      if (existing.state === 'hasValue' && newValue === existing.contents) {\n        return new Map();\n      }\n    } else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {\n      return new Map();\n    }\n\n    maybeFreezeValueOrPromise(newValue);\n    cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use\n\n    return new Map().set(key, loadableWithValue$3(newValue));\n  }\n\n  function shouldDeleteConfigOnReleaseAtom() {\n    return getConfigDeletionHandler$2(key) !== undefined && liveStoresCount <= 0;\n  }\n\n  const node = registerNode$2({\n    key,\n    nodeType: 'atom',\n    peek: peekAtom,\n    get: getAtom,\n    set: setAtom,\n    init: initAtom,\n    invalidate: invalidateAtom,\n    shouldDeleteConfigOnRelease: shouldDeleteConfigOnReleaseAtom,\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n    persistence_UNSTABLE: options.persistence_UNSTABLE ? {\n      type: options.persistence_UNSTABLE.type,\n      backButton: options.persistence_UNSTABLE.backButton\n    } : undefined,\n    shouldRestoreFromSnapshots: true,\n    retainedBy\n  });\n  return node;\n} // prettier-ignore\n\n\nfunction atom(options) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options.key !== 'string') {\n      throw Recoil_err('A key option with a unique string value must be provided when creating an atom.');\n    }\n\n    if (!('default' in options)) {\n      throw Recoil_err('A default value must be specified when creating an atom.');\n    }\n  }\n\n  const {\n    default: optionsDefault,\n    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    ...restOptions\n  } = options;\n\n  if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms\n  // for now, since scoped atoms don't support async defaults\n  // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n  ) {\n    return atomWithFallback({ ...restOptions,\n      default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n\n    }); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS && !isPromise(optionsDefault)) {\n    // @fb-only: return scopedAtom<T>({\n    // @fb-only: ...restOptions,\n    // @fb-only: default: optionsDefault,\n    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    // @fb-only: });\n  } else {\n    return baseAtom({ ...restOptions,\n      default: optionsDefault\n    });\n  }\n}\n\nfunction atomWithFallback(options) {\n  const base = atom({ ...options,\n    default: DEFAULT_VALUE$7,\n    persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : { ...options.persistence_UNSTABLE,\n      validator: storedValue => storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$7)\n    },\n    // TODO Hack for now.\n    effects: options.effects,\n    // flowlint-line unclear-type: off\n    effects_UNSTABLE: options.effects_UNSTABLE // flowlint-line unclear-type: off\n\n  });\n  const sel = Recoil_selector({\n    key: `${options.key}__withFallback`,\n    get: ({\n      get\n    }) => {\n      const baseValue = get(base);\n      return baseValue instanceof DefaultValue$2 ? options.default : baseValue;\n    },\n    set: ({\n      set\n    }, newValue) => set(base, newValue),\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  });\n  setConfigDeletionHandler$1(sel.key, getConfigDeletionHandler$2(options.key));\n  return sel;\n}\n\nvar Recoil_atom = atom;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nclass MapCache {\n  constructor(options) {\n    var _options$mapKey;\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options === null || options === void 0 ? void 0 : options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;\n  }\n\n  size() {\n    return this._map.size;\n  }\n\n  has(key) {\n    return this._map.has(this._keyMapper(key));\n  }\n\n  get(key) {\n    return this._map.get(this._keyMapper(key));\n  }\n\n  set(key, val) {\n    this._map.set(this._keyMapper(key), val);\n  }\n\n  delete(key) {\n    this._map.delete(this._keyMapper(key));\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n}\n\nvar Recoil_MapCache = {\n  MapCache\n};\n\nvar Recoil_MapCache_1 = Recoil_MapCache.MapCache;\n\nvar Recoil_MapCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MapCache: Recoil_MapCache_1\n});\n\nconst {\n  LRUCache: LRUCache$2\n} = Recoil_LRUCache$1;\n\nconst {\n  MapCache: MapCache$1\n} = Recoil_MapCache$1;\n\n\n\n\n\n\n\nconst defaultPolicy$1 = {\n  equality: 'reference',\n  eviction: 'none',\n  maxSize: Infinity\n};\n\nfunction cacheFromPolicy({\n  equality = defaultPolicy$1.equality,\n  eviction = defaultPolicy$1.eviction,\n  maxSize = defaultPolicy$1.maxSize\n} = defaultPolicy$1) {\n  const valueMapper = getValueMapper$1(equality);\n  const cache = getCache(eviction, maxSize, valueMapper);\n  return cache;\n}\n\nfunction getValueMapper$1(equality) {\n  switch (equality) {\n    case 'reference':\n      return val => val;\n\n    case 'value':\n      return val => Recoil_stableStringify(val);\n  }\n\n  throw Recoil_err(`Unrecognized equality policy ${equality}`);\n}\n\nfunction getCache(eviction, maxSize, mapKey) {\n  switch (eviction) {\n    case 'keep-all':\n      // $FlowFixMe[method-unbinding]\n      return new MapCache$1({\n        mapKey\n      });\n\n    case 'lru':\n      // $FlowFixMe[method-unbinding]\n      return new LRUCache$2({\n        mapKey,\n        maxSize: Recoil_nullthrows(maxSize)\n      });\n\n    case 'most-recent':\n      // $FlowFixMe[method-unbinding]\n      return new LRUCache$2({\n        mapKey,\n        maxSize: 1\n      });\n  }\n\n  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);\n}\n\nvar Recoil_cacheFromPolicy = cacheFromPolicy;\n\nconst {\n  setConfigDeletionHandler: setConfigDeletionHandler$2\n} = Recoil_Node;\n\n\n\n\n\n// Process scopeRules to handle any entries which are functions taking parameters\n// prettier-ignore\n// @fb-only: function mapScopeRules<P>(\n// @fb-only: scopeRules?: ParameterizedScopeRules<P>,\n// @fb-only: param: P,\n// @fb-only: ): ScopeRules | void {\n// @fb-only: return scopeRules?.map(rule =>\n// @fb-only: Array.isArray(rule)\n// @fb-only: ? rule.map(entry => (typeof entry === 'function' ? entry(param) : entry))\n// @fb-only: : rule,\n// @fb-only: );\n// @fb-only: }\n\n/*\nA function which returns an atom based on the input parameter.\n\nEach unique parameter returns a unique atom. E.g.,\n\n  const f = atomFamily(...);\n  f({a: 1}) => an atom\n  f({a: 2}) => a different atom\n\nThis allows components to persist local, private state using atoms.  Each\ninstance of the component may have a different key, which it uses as the\nparameter for a family of atoms; in this way, each component will have\nits own atom not shared by other instances.  These state keys may be composed\ninto children's state keys as well.\n*/\nfunction atomFamily(options) {\n  var _options$cachePolicyF, _options$cachePolicyF2;\n\n  const atomCache = Recoil_cacheFromPolicy({\n    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',\n    eviction: 'keep-all'\n  }); // Simple atomFamily implementation to cache individual atoms based\n  // on the parameter value equality.\n\n  return params => {\n    var _stableStringify, _options$effects;\n\n    const cachedAtom = atomCache.get(params);\n\n    if (cachedAtom != null) {\n      return cachedAtom;\n    }\n\n    const {\n      cachePolicyForParams_UNSTABLE,\n      ...atomOptions\n    } = options;\n    const newAtom = Recoil_atom({ ...atomOptions,\n      key: `${options.key}__${(_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}`,\n      default: typeof options.default === 'function' ? // The default was parameterized\n      // Flow doesn't know that T isn't a function, so we need to case to any\n      options.default(params) // flowlint-line unclear-type:off\n      : // Default may be a static value, promise, or RecoilValue\n      options.default,\n      retainedBy_UNSTABLE: typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE,\n      effects: typeof options.effects === 'function' ? options.effects(params) : typeof options.effects_UNSTABLE === 'function' ? options.effects_UNSTABLE(params) : (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE // prettier-ignore\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS: mapScopeRules(\n      // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: params,\n      // @fb-only: ),\n\n    });\n    atomCache.set(params, newAtom);\n    setConfigDeletionHandler$2(newAtom.key, () => {\n      atomCache.delete(params);\n    });\n    return newAtom;\n  };\n}\n\nvar Recoil_atomFamily = atomFamily;\n\nconst {\n  setConfigDeletionHandler: setConfigDeletionHandler$3\n} = Recoil_Node;\n\n\n\n // Keep in mind the parameter needs to be serializable as a cahche key\n// using Recoil_stableStringify\n\n\n// Add a unique index to each selector in case the cache implementation allows\n// duplicate keys based on equivalent stringified parameters\nlet nextIndex = 0;\n/* eslint-disable no-redeclare */\n\n// Return a function that returns members of a family of selectors of the same type\n// E.g.,\n//\n// const s = selectorFamily(...);\n// s({a: 1}) => a selector\n// s({a: 2}) => a different selector\n//\n// By default, the selectors are distinguished by distinct values of the\n// parameter based on value equality, not reference equality.  This allows using\n// object literals or other equivalent objects at callsites to not create\n// duplicate cache entries.  This behavior may be overridden with the\n// cacheImplementationForParams option.\nfunction selectorFamily(options) {\n  var _options$cachePolicyF, _options$cachePolicyF2;\n\n  const selectorCache = Recoil_cacheFromPolicy({\n    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',\n    eviction: 'keep-all'\n  });\n  return params => {\n    var _stableStringify;\n\n    const cachedSelector = selectorCache.get(params);\n\n    if (cachedSelector != null) {\n      return cachedSelector;\n    }\n\n    const myKey = `${options.key}__selectorFamily/${(_stableStringify = Recoil_stableStringify(params, {\n      // It is possible to use functions in parameters if the user uses\n      // a cache with reference equality thanks to the incrementing index.\n      allowFunctions: true\n    })) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}/${nextIndex++}`; // Append index in case values serialize to the same key string\n\n    const myGet = callbacks => options.get(params)(callbacks);\n\n    const myCachePolicy = options.cachePolicy_UNSTABLE;\n    const retainedBy = typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE;\n    let newSelector;\n\n    if (options.set != null) {\n      const set = options.set;\n\n      const mySet = (callbacks, newValue) => set(params)(callbacks, newValue);\n\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        set: mySet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    } else {\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    }\n\n    selectorCache.set(params, newSelector);\n    setConfigDeletionHandler$3(newSelector.key, () => {\n      selectorCache.delete(params);\n    });\n    return newSelector;\n  };\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selectorFamily = selectorFamily;\n\n// flowlint-next-line unclear-type:off\n\n\nconst constantSelector = Recoil_selectorFamily({\n  key: '__constant',\n  get: constant => () => constant,\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always produces the\n// same constant value.  It may be called multiple times with the\n// same value, based on reference equality, and will provide the\n// same selector.\n\nfunction constSelector(constant) {\n  return constantSelector(constant);\n}\n\nvar Recoil_constSelector = constSelector;\n\n// flowlint-next-line unclear-type:off\n\n\nconst throwingSelector = Recoil_selectorFamily({\n  key: '__error',\n  get: message => () => {\n    throw Recoil_err(message);\n  },\n  // TODO Why?\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always throws an error\n// with the provided message.\n\nfunction errorSelector(message) {\n  return throwingSelector(message);\n}\n\nvar Recoil_errorSelector = errorSelector;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Wraps another recoil value and prevents writing to it.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction readOnlySelector(atom) {\n  // flowlint-next-line unclear-type: off\n  return atom;\n}\n\nvar Recoil_readOnlySelector = readOnlySelector;\n\nconst {\n  loadableWithError: loadableWithError$3,\n  loadableWithPromise: loadableWithPromise$3,\n  loadableWithValue: loadableWithValue$4\n} = Recoil_Loadable$1;\n\n\n\n /////////////////\n//  TRUTH TABLE\n/////////////////\n// Dependencies        waitForNone         waitForAny        waitForAll       waitForAllSettled\n//  [loading, loading]  [Promise, Promise]  Promise           Promise         Promise\n//  [value, loading]    [value, Promise]    [value, Promise]  Promise         Promise\n//  [value, value]      [value, value]      [value, value]    [value, value]  [value, value]\n//\n//  [error, loading]    [Error, Promise]    [Error, Promise]  Error           Promise\n//  [error, error]      [Error, Error]      [Error, Error]    Error           [error, error]\n//  [value, error]      [value, Error]      [value, Error]    Error           [value, error]\n// Issue parallel requests for all dependencies and return the current\n// status if they have results, have some error, or are still pending.\n\n\nfunction concurrentRequests(getRecoilValue, deps) {\n  const results = Array(deps.length).fill(undefined);\n  const exceptions = Array(deps.length).fill(undefined);\n\n  for (const [i, dep] of deps.entries()) {\n    try {\n      results[i] = getRecoilValue(dep);\n    } catch (e) {\n      // exceptions can either be Promises of pending results or real errors\n      exceptions[i] = e;\n    }\n  }\n\n  return [results, exceptions];\n}\n\nfunction isError(exp) {\n  return exp != null && !Recoil_isPromise(exp);\n}\n\nfunction unwrapDependencies(dependencies) {\n  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(key => dependencies[key]);\n}\n\nfunction wrapResults(dependencies, results) {\n  return Array.isArray(dependencies) ? results : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  Object.getOwnPropertyNames(dependencies).reduce((out, key, idx) => ({ ...out,\n    [key]: results[idx]\n  }), {});\n}\n\nfunction wrapLoadables(dependencies, results, exceptions) {\n  const output = exceptions.map((exception, idx) => exception == null ? loadableWithValue$4(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception));\n  return wrapResults(dependencies, output);\n}\n\nfunction combineAsyncResultsWithSyncResults(syncResults, asyncResults) {\n  return asyncResults.map((result, idx) =>\n  /**\n   * it's important we use === undefined as opposed to == null, because the\n   * resolved value of the async promise could be `null`, in which case we\n   * don't want to use syncResults[idx], which would be undefined. If async\n   * promise resolves to `undefined`, that's ok because `syncResults[idx]`\n   * will also be `undefined`. That's a little hacky, but it works.\n   */\n  result === undefined ? syncResults[idx] : result);\n} // Selector that requests all dependencies in parallel and immediately returns\n// current results without waiting.\n\n\nconst waitForNone = Recoil_selectorFamily({\n  key: '__waitForNone',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // Always return the current status of the results; never block.\n\n    return wrapLoadables(dependencies, results, exceptions);\n  },\n  dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for at least\n// one to be available before returning results.  It will only error if all\n// dependencies have errors.\n\nconst waitForAny = Recoil_selectorFamily({\n  key: '__waitForAny',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If any results are available, value or error, return the current status\n\n    if (exceptions.some(exp => !Recoil_isPromise(exp))) {\n      return wrapLoadables(dependencies, results, exceptions);\n    } // Otherwise, return a promise that will resolve when the next result is\n    // available, whichever one happens to be next.  But, if all pending\n    // dependencies end up with errors, then reject the promise.\n\n\n    return new Promise(resolve => {\n      for (const [i, exp] of exceptions.entries()) {\n        if (Recoil_isPromise(exp)) {\n          exp.then(result => {\n            results[i] = result;\n            exceptions[i] = undefined;\n            resolve(wrapLoadables(dependencies, results, exceptions));\n          }).catch(error => {\n            exceptions[i] = error;\n            resolve(wrapLoadables(dependencies, results, exceptions));\n          });\n        }\n      }\n    });\n  },\n  dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for all to be\n// available before returning a value.  It will error if any dependencies error.\n\nconst waitForAll = Recoil_selectorFamily({\n  key: '__waitForAll',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results\n\n    if (exceptions.every(exp => exp == null)) {\n      return wrapResults(dependencies, results);\n    } // If we have any errors, throw the first error\n\n\n    const error = exceptions.find(isError);\n\n    if (error != null) {\n      throw error;\n    } // Otherwise, return a promise that will resolve when all results are available\n\n\n    return Promise.all(exceptions).then(exceptionResults => wrapResults(dependencies, combineAsyncResultsWithSyncResults(results, exceptionResults)));\n  },\n  dangerouslyAllowMutability: true\n});\nconst waitForAllSettled = Recoil_selectorFamily({\n  key: '__waitForAllSettled',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results\n\n    if (exceptions.every(exp => !Recoil_isPromise(exp))) {\n      return wrapLoadables(dependencies, results, exceptions);\n    } // Wait for all results to settle\n\n\n    return Promise.all(exceptions.map((exp, i) => Recoil_isPromise(exp) ? exp.then(result => {\n      results[i] = result;\n      exceptions[i] = undefined;\n    }).catch(error => {\n      results[i] = undefined;\n      exceptions[i] = error;\n    }) : null)) // Then wrap them as loadables\n    .then(() => wrapLoadables(dependencies, results, exceptions));\n  },\n  dangerouslyAllowMutability: true\n});\nconst noWait = Recoil_selectorFamily({\n  key: '__noWait',\n  get: dependency => ({\n    get\n  }) => {\n    try {\n      return loadableWithValue$4(get(dependency));\n    } catch (exception) {\n      return Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n    }\n  },\n  dangerouslyAllowMutability: true\n});\nvar Recoil_WaitFor = {\n  waitForNone,\n  waitForAny,\n  waitForAll,\n  waitForAllSettled,\n  noWait\n};\n\nconst {\n  RecoilLoadable\n} = Recoil_Loadable$1;\n\nconst {\n  DefaultValue: DefaultValue$3\n} = Recoil_Node;\n\nconst {\n  RecoilRoot: RecoilRoot$2,\n  useRecoilStoreID: useRecoilStoreID$1\n} = Recoil_RecoilRoot;\n\nconst {\n  isRecoilValue: isRecoilValue$5\n} = Recoil_RecoilValue$1;\n\nconst {\n  retentionZone: retentionZone$1\n} = Recoil_RetentionZone;\n\nconst {\n  freshSnapshot: freshSnapshot$2\n} = Recoil_Snapshot$1;\n\nconst {\n  useRecoilState: useRecoilState$1,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useSetRecoilState: useSetRecoilState$1\n} = Recoil_Hooks;\n\nconst {\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver: useRecoilTransactionObserver$1\n} = Recoil_SnapshotHooks;\n\n\n\n\n\nconst {\n  useRecoilCallback: useRecoilCallback$1\n} = Recoil_useRecoilCallback;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  noWait: noWait$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  waitForAny: waitForAny$1,\n  waitForNone: waitForNone$1\n} = Recoil_WaitFor;\n\nvar Recoil_index = {\n  // Types\n  DefaultValue: DefaultValue$3,\n  isRecoilValue: isRecoilValue$5,\n  RecoilLoadable,\n  // Recoil Root\n  RecoilRoot: RecoilRoot$2,\n  useRecoilStoreID: useRecoilStoreID$1,\n  useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,\n  // Atoms/Selectors\n  atom: Recoil_atom,\n  selector: Recoil_selector,\n  // Convenience Atoms/Selectors\n  atomFamily: Recoil_atomFamily,\n  selectorFamily: Recoil_selectorFamily,\n  constSelector: Recoil_constSelector,\n  errorSelector: Recoil_errorSelector,\n  readOnlySelector: Recoil_readOnlySelector,\n  // Concurrency Helpers for Atoms/Selectors\n  noWait: noWait$1,\n  waitForNone: waitForNone$1,\n  waitForAny: waitForAny$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  // Hooks for Atoms/Selectors\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilState: useRecoilState$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useSetRecoilState: useSetRecoilState$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useGetRecoilValueInfo_UNSTABLE: Recoil_useGetRecoilValueInfo,\n  useRecoilRefresher_UNSTABLE: Recoil_useRecoilRefresher,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,\n  // Hooks for complex operations\n  useRecoilCallback: useRecoilCallback$1,\n  useRecoilTransaction_UNSTABLE: Recoil_useRecoilTransaction,\n  // Snapshots\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n  snapshot_UNSTABLE: freshSnapshot$2,\n  // Memory Management\n  useRetain: Recoil_useRetain,\n  retentionZone: retentionZone$1\n};\nvar Recoil_index_1 = Recoil_index.DefaultValue;\nvar Recoil_index_2 = Recoil_index.isRecoilValue;\nvar Recoil_index_3 = Recoil_index.RecoilLoadable;\nvar Recoil_index_4 = Recoil_index.RecoilRoot;\nvar Recoil_index_5 = Recoil_index.useRecoilStoreID;\nvar Recoil_index_6 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;\nvar Recoil_index_7 = Recoil_index.atom;\nvar Recoil_index_8 = Recoil_index.selector;\nvar Recoil_index_9 = Recoil_index.atomFamily;\nvar Recoil_index_10 = Recoil_index.selectorFamily;\nvar Recoil_index_11 = Recoil_index.constSelector;\nvar Recoil_index_12 = Recoil_index.errorSelector;\nvar Recoil_index_13 = Recoil_index.readOnlySelector;\nvar Recoil_index_14 = Recoil_index.noWait;\nvar Recoil_index_15 = Recoil_index.waitForNone;\nvar Recoil_index_16 = Recoil_index.waitForAny;\nvar Recoil_index_17 = Recoil_index.waitForAll;\nvar Recoil_index_18 = Recoil_index.waitForAllSettled;\nvar Recoil_index_19 = Recoil_index.useRecoilValue;\nvar Recoil_index_20 = Recoil_index.useRecoilValueLoadable;\nvar Recoil_index_21 = Recoil_index.useRecoilState;\nvar Recoil_index_22 = Recoil_index.useRecoilStateLoadable;\nvar Recoil_index_23 = Recoil_index.useSetRecoilState;\nvar Recoil_index_24 = Recoil_index.useResetRecoilState;\nvar Recoil_index_25 = Recoil_index.useGetRecoilValueInfo_UNSTABLE;\nvar Recoil_index_26 = Recoil_index.useRecoilRefresher_UNSTABLE;\nvar Recoil_index_27 = Recoil_index.useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_28 = Recoil_index.useRecoilValue_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_29 = Recoil_index.useRecoilState_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_30 = Recoil_index.useRecoilCallback;\nvar Recoil_index_31 = Recoil_index.useRecoilTransaction_UNSTABLE;\nvar Recoil_index_32 = Recoil_index.useGotoRecoilSnapshot;\nvar Recoil_index_33 = Recoil_index.useRecoilSnapshot;\nvar Recoil_index_34 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;\nvar Recoil_index_35 = Recoil_index.snapshot_UNSTABLE;\nvar Recoil_index_36 = Recoil_index.useRetain;\nvar Recoil_index_37 = Recoil_index.retentionZone;\n\nexport default Recoil_index;\nexport { Recoil_index_1 as DefaultValue, Recoil_index_3 as RecoilLoadable, Recoil_index_4 as RecoilRoot, Recoil_index_7 as atom, Recoil_index_9 as atomFamily, Recoil_index_11 as constSelector, Recoil_index_12 as errorSelector, Recoil_index_2 as isRecoilValue, Recoil_index_14 as noWait, Recoil_index_13 as readOnlySelector, Recoil_index_37 as retentionZone, Recoil_index_8 as selector, Recoil_index_10 as selectorFamily, Recoil_index_35 as snapshot_UNSTABLE, Recoil_index_25 as useGetRecoilValueInfo_UNSTABLE, Recoil_index_32 as useGotoRecoilSnapshot, Recoil_index_6 as useRecoilBridgeAcrossReactRoots_UNSTABLE, Recoil_index_30 as useRecoilCallback, Recoil_index_26 as useRecoilRefresher_UNSTABLE, Recoil_index_33 as useRecoilSnapshot, Recoil_index_21 as useRecoilState, Recoil_index_22 as useRecoilStateLoadable, Recoil_index_29 as useRecoilState_TRANSITION_SUPPORT_UNSTABLE, Recoil_index_5 as useRecoilStoreID, Recoil_index_34 as useRecoilTransactionObserver_UNSTABLE, Recoil_index_31 as useRecoilTransaction_UNSTABLE, Recoil_index_19 as useRecoilValue, Recoil_index_20 as useRecoilValueLoadable, Recoil_index_27 as useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE, Recoil_index_28 as useRecoilValue_TRANSITION_SUPPORT_UNSTABLE, Recoil_index_24 as useResetRecoilState, Recoil_index_36 as useRetain, Recoil_index_23 as useSetRecoilState, Recoil_index_17 as waitForAll, Recoil_index_18 as waitForAllSettled, Recoil_index_16 as waitForAny, Recoil_index_15 as waitForNone };\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[888],{\n\n/***/ 8417:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ createCache; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? \"production\" === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (false) { var isImportRule; }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (false) {}\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (false) {}\n  };\n\n  return StyleSheet;\n}();\n\n\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Utility.js\n/**\n * @param {number}\n * @return {number}\n */\nvar abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nvar Utility_from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nvar Utility_assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nfunction hash (value, length) {\n\treturn Utility_charat(value, 0) ^ 45 ? (((((((length << 2) ^ Utility_charat(value, 0)) << 2) ^ Utility_charat(value, 1)) << 2) ^ Utility_charat(value, 2)) << 2) ^ Utility_charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nfunction trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nfunction Utility_match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nfunction Utility_replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nfunction indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nfunction Utility_charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nfunction Utility_substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nfunction Utility_strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nfunction Utility_sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nfunction Utility_append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nfunction Utility_combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Tokenizer.js\n\n\nvar line = 1\nvar column = 1\nvar Tokenizer_length = 0\nvar position = 0\nvar character = 0\nvar characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nfunction node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nfunction Tokenizer_copy (root, props) {\n\treturn Utility_assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nfunction Tokenizer_char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nfunction prev () {\n\tcharacter = position > 0 ? Utility_charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nfunction next () {\n\tcharacter = position < Tokenizer_length ? Utility_charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nfunction peek () {\n\treturn Utility_charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nfunction caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nfunction slice (begin, end) {\n\treturn Utility_substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nfunction token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nfunction alloc (value) {\n\treturn line = column = 1, Tokenizer_length = Utility_strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nfunction dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nfunction delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nfunction Tokenizer_tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nfunction whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nfunction tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nfunction escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nfunction delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nfunction commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + Utility_from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nfunction identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Enum.js\nvar Enum_MS = '-ms-'\nvar Enum_MOZ = '-moz-'\nvar Enum_WEBKIT = '-webkit-'\n\nvar COMMENT = 'comm'\nvar Enum_RULESET = 'rule'\nvar Enum_DECLARATION = 'decl'\n\nvar PAGE = '@page'\nvar MEDIA = '@media'\nvar IMPORT = '@import'\nvar CHARSET = '@charset'\nvar VIEWPORT = '@viewport'\nvar SUPPORTS = '@supports'\nvar DOCUMENT = '@document'\nvar NAMESPACE = '@namespace'\nvar Enum_KEYFRAMES = '@keyframes'\nvar FONT_FACE = '@font-face'\nvar COUNTER_STYLE = '@counter-style'\nvar FONT_FEATURE_VALUES = '@font-feature-values'\nvar LAYER = '@layer'\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Serializer.js\n\n\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nfunction Serializer_serialize (children, callback) {\n\tvar output = ''\n\tvar length = Utility_sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nfunction stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case Enum_DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase Enum_KEYFRAMES: return element.return = element.value + '{' + Serializer_serialize(element.children, callback) + '}'\n\t\tcase Enum_RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn Utility_strlen(children = Serializer_serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Middleware.js\n\n\n\n\n\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nfunction middleware (collection) {\n\tvar length = Utility_sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nfunction rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nfunction prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nfunction namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\n;// CONCATENATED MODULE: ./node_modules/stylis/src/Parser.js\n\n\n\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nfunction compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nfunction parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && Utility_charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += Utility_replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tUtility_append(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = Utility_strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = Utility_replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (Utility_strlen(characters) - length))\n\t\t\t\t\t\t\tUtility_append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(Utility_replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tUtility_append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && Utility_charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && Utility_append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + Utility_strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += Utility_from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (Utility_strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = Utility_strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && Utility_strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nfunction ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = Utility_sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = Utility_substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : Utility_replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? Enum_RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nfunction comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, Utility_from(Tokenizer_char()), Utility_substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nfunction declaration (value, root, parent, length) {\n\treturn node(value, root, parent, Enum_DECLARATION, Utility_substr(value, 0, length), Utility_substr(value, length + 1, -1), length)\n}\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js\n\n\n\n\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += Utility_from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? element.parent.children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction emotion_cache_browser_esm_prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return Enum_WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return Enum_WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return Enum_WEBKIT + value + Enum_MOZ + value + Enum_MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return Enum_WEBKIT + value + Enum_MS + value + value;\n    // order\n\n    case 6165:\n      return Enum_WEBKIT + value + Enum_MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return Enum_WEBKIT + value + Utility_replace(value, /(\\w+).+(:[^]+)/, Enum_WEBKIT + 'box-$1$2' + Enum_MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return Enum_WEBKIT + value + Enum_MS + 'flex-item-' + Utility_replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return Enum_WEBKIT + value + Enum_MS + 'flex-line-pack' + Utility_replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return Enum_WEBKIT + 'box-' + Utility_replace(value, '-grow', '') + Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return Enum_WEBKIT + Utility_replace(value, /([^-])(transform)/g, '$1' + Enum_WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return Utility_replace(Utility_replace(Utility_replace(value, /(zoom-|grab)/, Enum_WEBKIT + '$1'), /(image-set)/, Enum_WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return Utility_replace(value, /(image-set\\([^]*)/, Enum_WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return Utility_replace(Utility_replace(value, /(.+:)(flex-)?(.*)/, Enum_WEBKIT + 'box-pack:$3' + Enum_MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + Enum_WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return Utility_replace(value, /(.+)-inline(.+)/, Enum_WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (Utility_strlen(value) - 1 - length > 6) switch (Utility_charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (Utility_charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return Utility_replace(value, /(.+:)(.+)-([^]+)/, '$1' + Enum_WEBKIT + '$2-$3' + '$1' + Enum_MOZ + (Utility_charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? emotion_cache_browser_esm_prefix(Utility_replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (Utility_charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (Utility_charat(value, Utility_strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return Utility_replace(value, ':', ':' + Enum_WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return Utility_replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + Enum_WEBKIT + (Utility_charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + Enum_WEBKIT + '$2$3' + '$1' + Enum_MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (Utility_charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return Enum_WEBKIT + value + Enum_MS + value + value;\n  }\n\n  return value;\n}\n\nvar emotion_cache_browser_esm_prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case Enum_DECLARATION:\n      element[\"return\"] = emotion_cache_browser_esm_prefix(element.value, element.length);\n      break;\n\n    case Enum_KEYFRAMES:\n      return Serializer_serialize([Tokenizer_copy(element, {\n        value: Utility_replace(element.value, '@', '@' + Enum_WEBKIT)\n      })], callback);\n\n    case Enum_RULESET:\n      if (element.length) return Utility_combine(element.props, function (value) {\n        switch (Utility_match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return Serializer_serialize([Tokenizer_copy(element, {\n              props: [Utility_replace(value, /:(read-\\w+)/, ':' + Enum_MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return Serializer_serialize([Tokenizer_copy(element, {\n              props: [Utility_replace(value, /:(plac\\w+)/, ':' + Enum_WEBKIT + 'input-$1')]\n            }), Tokenizer_copy(element, {\n              props: [Utility_replace(value, /:(plac\\w+)/, ':' + Enum_MOZ + '$1')]\n            }), Tokenizer_copy(element, {\n              props: [Utility_replace(value, /:(plac\\w+)/, Enum_MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [emotion_cache_browser_esm_prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (false) {}\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (false) {}\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (false) {}\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify,  false ? 0 : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return Serializer_serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (false) {}\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\n\n\n\n/***/ }),\n\n/***/ 45042:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ memoize; }\n/* harmony export */ });\nfunction memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n\n\n\n/***/ }),\n\n/***/ 9757:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"T\": function() { return /* binding */ ThemeContext; },\n  \"a\": function() { return /* binding */ ThemeProvider; },\n  \"i\": function() { return /* binding */ isBrowser; },\n  \"u\": function() { return /* binding */ useTheme; },\n  \"w\": function() { return /* binding */ withEmotionCache; }\n});\n\n// UNUSED EXPORTS: C, E, _, b, c, h\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js + 7 modules\nvar emotion_cache_browser_esm = __webpack_require__(8417);\n;// CONCATENATED MODULE: ./node_modules/@emotion/react/node_modules/@babel/runtime/helpers/esm/extends.js\nfunction extends_extends() {\n  extends_extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return extends_extends.apply(this, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\nvar weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\n\n\n// EXTERNAL MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js + 2 modules\nvar emotion_serialize_browser_esm = __webpack_require__(48137);\n// EXTERNAL MODULE: ./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js\nvar emotion_use_insertion_effect_with_fallbacks_browser_esm = __webpack_require__(27278);\n;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js\n\n\n\n\n\n\n\n\n\n\nvar isBrowser = \"object\" !== 'undefined';\nvar emotion_element_c39617d8_browser_esm_hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */react.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */(0,emotion_cache_browser_esm/* default */.Z)({\n  key: 'css'\n}) : null);\n\nif (false) {}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/(0,react.forwardRef)(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = (0,react.useContext)(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nif (!isBrowser) {\n  withEmotionCache = function withEmotionCache(func) {\n    return function (props) {\n      var cache = (0,react.useContext)(EmotionCacheContext);\n\n      if (cache === null) {\n        // yes, we're potentially creating this on every render\n        // it doesn't actually matter though since it's only on the server\n        // so there will only every be a single render\n        // that could change in the future because of suspense and etc. but for now,\n        // this works and i don't want to optimise for a future thing that we aren't sure about\n        cache = (0,emotion_cache_browser_esm/* default */.Z)({\n          key: 'css'\n        });\n        return /*#__PURE__*/react.createElement(EmotionCacheContext.Provider, {\n          value: cache\n        }, func(props, cache));\n      } else {\n        return func(props, cache);\n      }\n    };\n  };\n}\n\nvar ThemeContext = /* #__PURE__ */react.createContext({});\n\nif (false) {}\n\nvar useTheme = function useTheme() {\n  return react.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (false) {}\n\n    return mergedTheme;\n  }\n\n  if (false) {}\n\n  return extends_extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = react.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/react.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/React.forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (false) {}\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (emotion_element_c39617d8_browser_esm_hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (false) { var label; }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */(/* unused pure expression or super */ null && (withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  if (false) { var labelFromStack; }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (emotion_element_c39617d8_browser_esm_hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( true || 0)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n})));\n\nif (false) {}\n\nvar Emotion$1 = (/* unused pure expression or super */ null && (Emotion));\n\n\n\n\n/***/ }),\n\n/***/ 70917:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"F4\": function() { return /* binding */ keyframes; },\n/* harmony export */   \"xB\": function() { return /* binding */ Global; }\n/* harmony export */ });\n/* unused harmony exports ClassNames, createElement, css, jsx */\n/* harmony import */ var _emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9757);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(70444);\n/* harmony import */ var _emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27278);\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48137);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8417);\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8679);\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.2\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */(0,_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.w)(function (props, cache) {\n  if (false) {}\n\n  var styles = props.styles;\n  var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_2__/* .serializeStyles */ .O)([styles], undefined, react__WEBPACK_IMPORTED_MODULE_0__.useContext(_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.T));\n\n  if (!_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.i) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  (0,_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__/* .useInsertionEffectWithLayoutFallback */ .j)(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  (0,_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__/* .useInsertionEffectWithLayoutFallback */ .j)(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_6__/* .insertStyles */ .My)(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (false) {}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_2__/* .serializeStyles */ .O)(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (false) {}\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */(/* unused pure expression or super */ null && (withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && \"production\" !== 'production') {}\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && \"production\" !== 'production') {}\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n})));\n\nif (false) {}\n\nif (false) { var globalKey, globalContext, isTestEnv, isBrowser; }\n\n\n\n\n/***/ }),\n\n/***/ 48137:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"O\": function() { return /* binding */ serializeStyles; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/hash/dist/emotion-hash.esm.js\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n\n\n// EXTERNAL MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js\nvar emotion_memoize_esm = __webpack_require__(45042);\n;// CONCATENATED MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */(0,emotion_memoize_esm/* default */.Z)(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }\n\nvar noComponentSelectorMessage = (/* unused pure expression or super */ null && ('Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.'));\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (false) {}\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (false) {}\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (false) {}\n\n        break;\n      }\n\n    case 'string':\n      if (false) { var replaced, matched; }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && \"production\" !== 'production') {}\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (false) {}\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (false) {} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (false) {}\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (false) {}\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = murmur2(styles) + identifierName;\n\n  if (false) {}\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n\n\n/***/ }),\n\n/***/ 27278:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"L\": function() { return /* binding */ useInsertionEffectAlwaysWithSyncFallback; },\n/* harmony export */   \"j\": function() { return /* binding */ useInsertionEffectWithLayoutFallback; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))['useInsertion' + 'Effect'] ? /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n\n\n\n\n/***/ }),\n\n/***/ 70444:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"My\": function() { return /* binding */ insertStyles; },\n/* harmony export */   \"fp\": function() { return /* binding */ getRegisteredStyles; },\n/* harmony export */   \"hC\": function() { return /* binding */ registerStyles; }\n/* harmony export */ });\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\n\n\n\n/***/ }),\n\n/***/ 60265:\n/***/ (function(__unused_webpack_module, __webpack_exports__) {\n\n\"use strict\";\nconst red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (red);\n\n/***/ }),\n\n/***/ 44551:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ styles_createTheme; }\n});\n\n// UNUSED EXPORTS: createMuiTheme\n\n// EXTERNAL MODULE: ./node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(32793);\n// EXTERNAL MODULE: ./node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(1048);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js\nvar formatMuiErrorMessage = __webpack_require__(71387);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js\nvar deepmerge = __webpack_require__(59766);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules\nvar createTheme = __webpack_require__(66500);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js + 5 modules\nvar defaultSxConfig = __webpack_require__(44920);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js\nvar styleFunctionSx = __webpack_require__(86523);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createMixins.js\n\nfunction createMixins(breakpoints, mixins) {\n  return (0,esm_extends/* default */.Z)({\n    toolbar: {\n      minHeight: 56,\n      [breakpoints.up('xs')]: {\n        '@media (orientation: landscape)': {\n          minHeight: 48\n        }\n      },\n      [breakpoints.up('sm')]: {\n        minHeight: 64\n      }\n    }\n  }, mixins);\n}\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js\nvar colorManipulator = __webpack_require__(41796);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/common.js\nconst common = {\n  black: '#000',\n  white: '#fff'\n};\n/* harmony default export */ var colors_common = (common);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/grey.js\nconst grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#f5f5f5',\n  A200: '#eeeeee',\n  A400: '#bdbdbd',\n  A700: '#616161'\n};\n/* harmony default export */ var colors_grey = (grey);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/purple.js\nconst purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\n/* harmony default export */ var colors_purple = (purple);\n// EXTERNAL MODULE: ./node_modules/@mui/material/colors/red.js\nvar red = __webpack_require__(60265);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/orange.js\nconst orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\n/* harmony default export */ var colors_orange = (orange);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/blue.js\nconst blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\n/* harmony default export */ var colors_blue = (blue);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/lightBlue.js\nconst lightBlue = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\n/* harmony default export */ var colors_lightBlue = (lightBlue);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/green.js\nconst green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\n/* harmony default export */ var colors_green = (green);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createPalette.js\n\n\n\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\n\n\n\n\n\n\n\n\n\n\nconst light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: colors_common.white,\n    default: colors_common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nconst dark = {\n  text: {\n    primary: colors_common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: colors_common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0,colorManipulator/* lighten */.$n)(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = (0,colorManipulator/* darken */._j)(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: colors_blue[200],\n      light: colors_blue[50],\n      dark: colors_blue[400]\n    };\n  }\n  return {\n    main: colors_blue[700],\n    light: colors_blue[400],\n    dark: colors_blue[800]\n  };\n}\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: colors_purple[200],\n      light: colors_purple[50],\n      dark: colors_purple[400]\n    };\n  }\n  return {\n    main: colors_purple[500],\n    light: colors_purple[300],\n    dark: colors_purple[700]\n  };\n}\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: red/* default.500 */.Z[500],\n      light: red/* default.300 */.Z[300],\n      dark: red/* default.700 */.Z[700]\n    };\n  }\n  return {\n    main: red/* default.700 */.Z[700],\n    light: red/* default.400 */.Z[400],\n    dark: red/* default.800 */.Z[800]\n  };\n}\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: colors_lightBlue[400],\n      light: colors_lightBlue[300],\n      dark: colors_lightBlue[700]\n    };\n  }\n  return {\n    main: colors_lightBlue[700],\n    light: colors_lightBlue[500],\n    dark: colors_lightBlue[900]\n  };\n}\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: colors_green[400],\n      light: colors_green[300],\n      dark: colors_green[700]\n    };\n  }\n  return {\n    main: colors_green[800],\n    light: colors_green[500],\n    dark: colors_green[900]\n  };\n}\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: colors_orange[400],\n      light: colors_orange[300],\n      dark: colors_orange[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: colors_orange[500],\n    dark: colors_orange[900]\n  };\n}\nfunction createPalette(palette) {\n  const {\n      mode = 'light',\n      contrastThreshold = 3,\n      tonalOffset = 0.2\n    } = palette,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    const contrastText = (0,colorManipulator/* getContrastRatio */.mi)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (false) {}\n    return contrastText;\n  }\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = (0,esm_extends/* default */.Z)({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(11, name ? ` (${name})` : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  const modes = {\n    dark,\n    light\n  };\n  if (false) {}\n  const paletteOutput = (0,deepmerge/* default */.Z)((0,esm_extends/* default */.Z)({\n    // A collection of common colors.\n    common: (0,esm_extends/* default */.Z)({}, colors_common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: colors_grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTypography.js\n\n\nconst createTypography_excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nfunction createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n    {\n      fontFamily = defaultFontFamily,\n      // The default font size of the Material Specification.\n      fontSize = 14,\n      // px\n      fontWeightLight = 300,\n      fontWeightRegular = 400,\n      fontWeightMedium = 500,\n      fontWeightBold = 700,\n      // Tell MUI what's the font-size on the html element.\n      // 16px is the default font-size used by browsers.\n      htmlFontSize = 16,\n      // Apply the CSS properties to all the variants.\n      allVariants,\n      pxToRem: pxToRem2\n    } = _ref,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, createTypography_excluded);\n  if (false) {}\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => (0,esm_extends/* default */.Z)({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return (0,deepmerge/* default */.Z)((0,esm_extends/* default */.Z)({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/shadows.js\nconst shadowKeyUmbraOpacity = 0.2;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\nfunction createShadow(...px) {\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');\n}\n\n// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\nconst shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\n/* harmony default export */ var styles_shadows = (shadows);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTransitions.js\n\n\nconst createTransitions_excluded = [\"duration\", \"easing\", \"delay\"];\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nconst easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n\n// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\nconst duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n  const constant = height / 36;\n\n  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\nfunction createTransitions(inputTransitions) {\n  const mergedEasing = (0,esm_extends/* default */.Z)({}, easing, inputTransitions.easing);\n  const mergedDuration = (0,esm_extends/* default */.Z)({}, duration, inputTransitions.duration);\n  const create = (props = ['all'], options = {}) => {\n    const {\n        duration: durationOption = mergedDuration.standard,\n        easing: easingOption = mergedEasing.easeInOut,\n        delay = 0\n      } = options,\n      other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTransitions_excluded);\n    if (false) {}\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n  return (0,esm_extends/* default */.Z)({\n    getAutoHeightDuration,\n    create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/zIndex.js\n// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nconst zIndex = {\n  mobileStepper: 1000,\n  fab: 1050,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\n/* harmony default export */ var styles_zIndex = (zIndex);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTheme.js\n\n\n\nconst createTheme_excluded = [\"breakpoints\", \"mixins\", \"spacing\", \"palette\", \"transitions\", \"typography\", \"shape\"];\n\n\n\n\n\n\n\n\n\nfunction createTheme_createTheme(options = {}, ...args) {\n  const {\n      mixins: mixinsInput = {},\n      palette: paletteInput = {},\n      transitions: transitionsInput = {},\n      typography: typographyInput = {}\n    } = options,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);\n  if (options.vars) {\n    throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(18));\n  }\n  const palette = createPalette(paletteInput);\n  const systemTheme = (0,createTheme/* default */.Z)(options);\n  let muiTheme = (0,deepmerge/* default */.Z)(systemTheme, {\n    mixins: createMixins(systemTheme.breakpoints, mixinsInput),\n    palette,\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\n    shadows: styles_shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    transitions: createTransitions(transitionsInput),\n    zIndex: (0,esm_extends/* default */.Z)({}, styles_zIndex)\n  });\n  muiTheme = (0,deepmerge/* default */.Z)(muiTheme, other);\n  muiTheme = args.reduce((acc, argument) => (0,deepmerge/* default */.Z)(acc, argument), muiTheme);\n  if (false) {}\n  muiTheme.unstable_sxConfig = (0,esm_extends/* default */.Z)({}, defaultSxConfig/* default */.Z, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return (0,styleFunctionSx/* default */.Z)({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\nlet warnedOnce = false;\nfunction createMuiTheme(...args) {\n  if (false) {}\n  return createTheme_createTheme(...args);\n}\n/* harmony default export */ var styles_createTheme = (createTheme_createTheme);\n\n/***/ }),\n\n/***/ 10606:\n/***/ (function(__unused_webpack_module, __webpack_exports__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"Z\"] = ('$$material');\n\n/***/ }),\n\n/***/ 95408:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"L7\": function() { return /* binding */ removeUnusedBreakpoints; },\n/* harmony export */   \"P$\": function() { return /* binding */ resolveBreakpointValues; },\n/* harmony export */   \"VO\": function() { return /* binding */ values; },\n/* harmony export */   \"W8\": function() { return /* binding */ createEmptyBreakpointObject; },\n/* harmony export */   \"dt\": function() { return /* binding */ mergeBreakpointsInOrder; },\n/* harmony export */   \"k9\": function() { return /* binding */ handleBreakpoints; }\n/* harmony export */ });\n/* unused harmony export computeBreakpointsBase */\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59766);\n\n\n\n\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nconst values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n};\n\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nfunction handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      // key is breakpoint\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n      return acc;\n    }, {});\n  }\n  const output = styleFromPropValue(propValue);\n  return output;\n}\nfunction breakpoints(styleFunction) {\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme\n        }, props[key]));\n      }\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n  newStyleFunction.propTypes =  false ? 0 : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\nfunction createEmptyBreakpointObject(breakpointsInput = {}) {\n  var _breakpointsInput$key;\n  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nfunction removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n    return acc;\n  }, style);\n}\nfunction mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\n\n// compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\nfunction computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== 'object') {\n    return {};\n  }\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n  return base;\n}\nfunction resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n    return acc;\n  }, {});\n}\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (breakpoints)));\n\n/***/ }),\n\n/***/ 41796:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$n\": function() { return /* binding */ lighten; },\n/* harmony export */   \"Fq\": function() { return /* binding */ alpha; },\n/* harmony export */   \"_j\": function() { return /* binding */ darken; },\n/* harmony export */   \"mi\": function() { return /* binding */ getContrastRatio; }\n/* harmony export */ });\n/* unused harmony exports hexToRgb, decomposeColor, colorChannel, private_safeColorChannel, recomposeColor, rgbToHex, hslToRgb, getLuminance, private_safeAlpha, private_safeDarken, private_safeLighten, emphasize, private_safeEmphasize */\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71387);\n\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (false) {}\n  return Math.min(Math.max(min, value), max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nfunction hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nconst colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nconst private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nfunction recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nfunction rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nfunction hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nfunction getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nfunction getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nfunction private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nfunction private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nfunction private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nfunction private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return private_safeEmphasize(color, coefficient);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/***/ }),\n\n/***/ 66500:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ createTheme_createTheme; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@mui/system/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(54695);\n// EXTERNAL MODULE: ./node_modules/@mui/system/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(60916);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js\nvar deepmerge = __webpack_require__(59766);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createBreakpoints.js\n\n\nconst _excluded = [\"values\", \"unit\", \"step\"];\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nconst breakpointKeys = (/* unused pure expression or super */ null && (['xs', 'sm', 'md', 'lg', 'xl']));\nconst sortBreakpointsValues = values => {\n  const breakpointsAsArray = Object.keys(values).map(key => ({\n    key,\n    val: values[key]\n  })) || [];\n  // Sort in ascending order\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\n  return breakpointsAsArray.reduce((acc, obj) => {\n    return (0,esm_extends/* default */.Z)({}, acc, {\n      [obj.key]: obj.val\n    });\n  }, {});\n};\n\n// Keep in mind that @media is inclusive by the CSS specification.\nfunction createBreakpoints(breakpoints) {\n  const {\n      // The breakpoint **start** at this value.\n      // For instance with the first breakpoint xs: [xs, sm).\n      values = {\n        xs: 0,\n        // phone\n        sm: 600,\n        // tablet\n        md: 900,\n        // small laptop\n        lg: 1200,\n        // desktop\n        xl: 1536 // large screen\n      },\n\n      unit = 'px',\n      step = 5\n    } = breakpoints,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(breakpoints, _excluded);\n  const sortedValues = sortBreakpointsValues(values);\n  const keys = Object.keys(sortedValues);\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n    return up(key);\n  }\n  function not(key) {\n    // handle first and last key separately, for better readability\n    const keyIndex = keys.indexOf(key);\n    if (keyIndex === 0) {\n      return up(keys[1]);\n    }\n    if (keyIndex === keys.length - 1) {\n      return down(keys[keyIndex]);\n    }\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\n  }\n  return (0,esm_extends/* default */.Z)({\n    keys,\n    values: sortedValues,\n    up,\n    down,\n    between,\n    only,\n    not,\n    unit\n  }, other);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/shape.js\nconst shape = {\n  borderRadius: 4\n};\n/* harmony default export */ var createTheme_shape = (shape);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules\nvar esm_spacing = __webpack_require__(98700);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createSpacing.js\n\n/* tslint:enable:unified-signatures */\n\nfunction createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  }\n\n  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://m2.material.io/design/layout/understanding-layout.html\n  const transform = (0,esm_spacing/* createUnarySpacing */.hB)({\n    spacing: spacingInput\n  });\n  const spacing = (...argsInput) => {\n    if (false) {}\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n  spacing.mui = true;\n  return spacing;\n}\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js\nvar styleFunctionSx = __webpack_require__(86523);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js + 5 modules\nvar defaultSxConfig = __webpack_require__(44920);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js\n\n\nconst createTheme_excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\n\n\n\n\n\n\nfunction createTheme(options = {}, ...args) {\n  const {\n      breakpoints: breakpointsInput = {},\n      palette: paletteInput = {},\n      spacing: spacingInput,\n      shape: shapeInput = {}\n    } = options,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = (0,deepmerge/* default */.Z)({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: (0,esm_extends/* default */.Z)({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: (0,esm_extends/* default */.Z)({}, createTheme_shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => (0,deepmerge/* default */.Z)(acc, argument), muiTheme);\n  muiTheme.unstable_sxConfig = (0,esm_extends/* default */.Z)({}, defaultSxConfig/* default */.Z, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return (0,styleFunctionSx/* default */.Z)({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\n/* harmony default export */ var createTheme_createTheme = (createTheme);\n\n/***/ }),\n\n/***/ 47730:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59766);\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"Z\"] = (merge);\n\n/***/ }),\n\n/***/ 98700:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"hB\": function() { return /* binding */ createUnarySpacing; },\n  \"eI\": function() { return /* binding */ createUnaryUnit; },\n  \"NA\": function() { return /* binding */ getValue; },\n  \"e6\": function() { return /* binding */ margin; },\n  \"o3\": function() { return /* binding */ padding; }\n});\n\n// UNUSED EXPORTS: default, getStyleFromPropValue, marginKeys, paddingKeys\n\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js\nvar breakpoints = __webpack_require__(95408);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js\nvar style = __webpack_require__(54844);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js\nvar merge = __webpack_require__(47730);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/memoize.js\nfunction memoize(fn) {\n  const cache = {};\n  return arg => {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n    return cache[arg];\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/spacing.js\n\n\n\n\n\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nconst paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nfunction createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  const themeSpacing = (_getPath = (0,style/* getPath */.DW)(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (false) {}\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (false) {}\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (false) {}\n  return () => undefined;\n}\nfunction createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return `-${transformed}`;\n}\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return (0,breakpoints/* handleBreakpoints */.k9)(props, propValue, styleFromPropValue);\n}\nfunction spacing_style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge/* default */.Z, {});\n}\nfunction margin(props) {\n  return spacing_style(props, marginKeys);\n}\nmargin.propTypes =  false ? 0 : {};\nmargin.filterProps = marginKeys;\nfunction padding(props) {\n  return spacing_style(props, paddingKeys);\n}\npadding.propTypes =  false ? 0 : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return spacing_style(props, spacingKeys);\n}\nspacing.propTypes =  false ? 0 : {};\nspacing.filterProps = spacingKeys;\n/* harmony default export */ var esm_spacing = ((/* unused pure expression or super */ null && (spacing)));\n\n/***/ }),\n\n/***/ 54844:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DW\": function() { return /* binding */ getPath; },\n/* harmony export */   \"Jq\": function() { return /* binding */ getStyleValue; }\n/* harmony export */ });\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28320);\n/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95408);\n\n\n\nfunction getPath(obj, path, checkVars = true) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  // Check if CSS variables are used\n  if (obj && obj.vars && checkVars) {\n    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n    if (val != null) {\n      return val;\n    }\n  }\n  return path.split('.').reduce((acc, item) => {\n    if (acc && acc[item] != null) {\n      return acc[item];\n    }\n    return null;\n  }, obj);\n}\nfunction getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\n  let value;\n  if (typeof themeMapping === 'function') {\n    value = themeMapping(propValueFinal);\n  } else if (Array.isArray(themeMapping)) {\n    value = themeMapping[propValueFinal] || userValue;\n  } else {\n    value = getPath(themeMapping, propValueFinal) || userValue;\n  }\n  if (transform) {\n    value = transform(value, userValue, themeMapping);\n  }\n  return value;\n}\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n    const styleFromPropValue = propValueFinal => {\n      let value = getStyleValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_1__/* .handleBreakpoints */ .k9)(props, propValue, styleFromPropValue);\n  };\n  fn.propTypes =  false ? 0 : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n/* harmony default export */ __webpack_exports__[\"ZP\"] = (style);\n\n/***/ }),\n\n/***/ 44920:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ styleFunctionSx_defaultSxConfig; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules\nvar spacing = __webpack_require__(98700);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js\nvar style = __webpack_require__(54844);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js\nvar merge = __webpack_require__(47730);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/compose.js\n\nfunction compose(...styles) {\n  const handlers = styles.reduce((acc, style) => {\n    style.filterProps.forEach(prop => {\n      acc[prop] = style;\n    });\n    return acc;\n  }, {});\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (handlers[prop]) {\n        return (0,merge/* default */.Z)(acc, handlers[prop](props));\n      }\n      return acc;\n    }, {});\n  };\n  fn.propTypes =  false ? 0 : {};\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\n  return fn;\n}\n/* harmony default export */ var esm_compose = (compose);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js\nvar breakpoints = __webpack_require__(95408);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/borders.js\n\n\n\n\n\nfunction borderTransform(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n  return `${value}px solid`;\n}\nconst border = (0,style/* default */.ZP)({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderTop = (0,style/* default */.ZP)({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderRight = (0,style/* default */.ZP)({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderBottom = (0,style/* default */.ZP)({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderLeft = (0,style/* default */.ZP)({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderColor = (0,style/* default */.ZP)({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nconst borderTopColor = (0,style/* default */.ZP)({\n  prop: 'borderTopColor',\n  themeKey: 'palette'\n});\nconst borderRightColor = (0,style/* default */.ZP)({\n  prop: 'borderRightColor',\n  themeKey: 'palette'\n});\nconst borderBottomColor = (0,style/* default */.ZP)({\n  prop: 'borderBottomColor',\n  themeKey: 'palette'\n});\nconst borderLeftColor = (0,style/* default */.ZP)({\n  prop: 'borderLeftColor',\n  themeKey: 'palette'\n});\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst borderRadius = props => {\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n    const styleFromPropValue = propValue => ({\n      borderRadius: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.borderRadius, styleFromPropValue);\n  }\n  return null;\n};\nborderRadius.propTypes =  false ? 0 : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = esm_compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);\n/* harmony default export */ var esm_borders = ((/* unused pure expression or super */ null && (borders)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/cssGrid.js\n\n\n\n\n\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst gap = props => {\n  if (props.gap !== undefined && props.gap !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'gap');\n    const styleFromPropValue = propValue => ({\n      gap: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.gap, styleFromPropValue);\n  }\n  return null;\n};\ngap.propTypes =  false ? 0 : {};\ngap.filterProps = ['gap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst columnGap = props => {\n  if (props.columnGap !== undefined && props.columnGap !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'columnGap');\n    const styleFromPropValue = propValue => ({\n      columnGap: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.columnGap, styleFromPropValue);\n  }\n  return null;\n};\ncolumnGap.propTypes =  false ? 0 : {};\ncolumnGap.filterProps = ['columnGap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst rowGap = props => {\n  if (props.rowGap !== undefined && props.rowGap !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'rowGap');\n    const styleFromPropValue = propValue => ({\n      rowGap: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.rowGap, styleFromPropValue);\n  }\n  return null;\n};\nrowGap.propTypes =  false ? 0 : {};\nrowGap.filterProps = ['rowGap'];\nconst gridColumn = (0,style/* default */.ZP)({\n  prop: 'gridColumn'\n});\nconst gridRow = (0,style/* default */.ZP)({\n  prop: 'gridRow'\n});\nconst gridAutoFlow = (0,style/* default */.ZP)({\n  prop: 'gridAutoFlow'\n});\nconst gridAutoColumns = (0,style/* default */.ZP)({\n  prop: 'gridAutoColumns'\n});\nconst gridAutoRows = (0,style/* default */.ZP)({\n  prop: 'gridAutoRows'\n});\nconst gridTemplateColumns = (0,style/* default */.ZP)({\n  prop: 'gridTemplateColumns'\n});\nconst gridTemplateRows = (0,style/* default */.ZP)({\n  prop: 'gridTemplateRows'\n});\nconst gridTemplateAreas = (0,style/* default */.ZP)({\n  prop: 'gridTemplateAreas'\n});\nconst gridArea = (0,style/* default */.ZP)({\n  prop: 'gridArea'\n});\nconst grid = esm_compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\n/* harmony default export */ var cssGrid = ((/* unused pure expression or super */ null && (grid)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/palette.js\n\n\nfunction paletteTransform(value, userValue) {\n  if (userValue === 'grey') {\n    return userValue;\n  }\n  return value;\n}\nconst color = (0,style/* default */.ZP)({\n  prop: 'color',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst bgcolor = (0,style/* default */.ZP)({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst backgroundColor = (0,style/* default */.ZP)({\n  prop: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst palette = esm_compose(color, bgcolor, backgroundColor);\n/* harmony default export */ var esm_palette = ((/* unused pure expression or super */ null && (palette)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/sizing.js\n\n\n\nfunction sizingTransform(value) {\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\n}\nconst width = (0,style/* default */.ZP)({\n  prop: 'width',\n  transform: sizingTransform\n});\nconst maxWidth = props => {\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\n    const styleFromPropValue = propValue => {\n      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;\n      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || breakpoints/* values */.VO[propValue];\n      return {\n        maxWidth: breakpoint || sizingTransform(propValue)\n      };\n    };\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.maxWidth, styleFromPropValue);\n  }\n  return null;\n};\nmaxWidth.filterProps = ['maxWidth'];\nconst minWidth = (0,style/* default */.ZP)({\n  prop: 'minWidth',\n  transform: sizingTransform\n});\nconst height = (0,style/* default */.ZP)({\n  prop: 'height',\n  transform: sizingTransform\n});\nconst maxHeight = (0,style/* default */.ZP)({\n  prop: 'maxHeight',\n  transform: sizingTransform\n});\nconst minHeight = (0,style/* default */.ZP)({\n  prop: 'minHeight',\n  transform: sizingTransform\n});\nconst sizeWidth = (0,style/* default */.ZP)({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: sizingTransform\n});\nconst sizeHeight = (0,style/* default */.ZP)({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: sizingTransform\n});\nconst boxSizing = (0,style/* default */.ZP)({\n  prop: 'boxSizing'\n});\nconst sizing = esm_compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\n/* harmony default export */ var esm_sizing = ((/* unused pure expression or super */ null && (sizing)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js\n\n\n\n\n\nconst defaultSxConfig = {\n  // borders\n  border: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderTop: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderRight: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderBottom: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderLeft: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderColor: {\n    themeKey: 'palette'\n  },\n  borderTopColor: {\n    themeKey: 'palette'\n  },\n  borderRightColor: {\n    themeKey: 'palette'\n  },\n  borderBottomColor: {\n    themeKey: 'palette'\n  },\n  borderLeftColor: {\n    themeKey: 'palette'\n  },\n  borderRadius: {\n    themeKey: 'shape.borderRadius',\n    style: borderRadius\n  },\n  // palette\n  color: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  bgcolor: {\n    themeKey: 'palette',\n    cssProperty: 'backgroundColor',\n    transform: paletteTransform\n  },\n  backgroundColor: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  // spacing\n  p: {\n    style: spacing/* padding */.o3\n  },\n  pt: {\n    style: spacing/* padding */.o3\n  },\n  pr: {\n    style: spacing/* padding */.o3\n  },\n  pb: {\n    style: spacing/* padding */.o3\n  },\n  pl: {\n    style: spacing/* padding */.o3\n  },\n  px: {\n    style: spacing/* padding */.o3\n  },\n  py: {\n    style: spacing/* padding */.o3\n  },\n  padding: {\n    style: spacing/* padding */.o3\n  },\n  paddingTop: {\n    style: spacing/* padding */.o3\n  },\n  paddingRight: {\n    style: spacing/* padding */.o3\n  },\n  paddingBottom: {\n    style: spacing/* padding */.o3\n  },\n  paddingLeft: {\n    style: spacing/* padding */.o3\n  },\n  paddingX: {\n    style: spacing/* padding */.o3\n  },\n  paddingY: {\n    style: spacing/* padding */.o3\n  },\n  paddingInline: {\n    style: spacing/* padding */.o3\n  },\n  paddingInlineStart: {\n    style: spacing/* padding */.o3\n  },\n  paddingInlineEnd: {\n    style: spacing/* padding */.o3\n  },\n  paddingBlock: {\n    style: spacing/* padding */.o3\n  },\n  paddingBlockStart: {\n    style: spacing/* padding */.o3\n  },\n  paddingBlockEnd: {\n    style: spacing/* padding */.o3\n  },\n  m: {\n    style: spacing/* margin */.e6\n  },\n  mt: {\n    style: spacing/* margin */.e6\n  },\n  mr: {\n    style: spacing/* margin */.e6\n  },\n  mb: {\n    style: spacing/* margin */.e6\n  },\n  ml: {\n    style: spacing/* margin */.e6\n  },\n  mx: {\n    style: spacing/* margin */.e6\n  },\n  my: {\n    style: spacing/* margin */.e6\n  },\n  margin: {\n    style: spacing/* margin */.e6\n  },\n  marginTop: {\n    style: spacing/* margin */.e6\n  },\n  marginRight: {\n    style: spacing/* margin */.e6\n  },\n  marginBottom: {\n    style: spacing/* margin */.e6\n  },\n  marginLeft: {\n    style: spacing/* margin */.e6\n  },\n  marginX: {\n    style: spacing/* margin */.e6\n  },\n  marginY: {\n    style: spacing/* margin */.e6\n  },\n  marginInline: {\n    style: spacing/* margin */.e6\n  },\n  marginInlineStart: {\n    style: spacing/* margin */.e6\n  },\n  marginInlineEnd: {\n    style: spacing/* margin */.e6\n  },\n  marginBlock: {\n    style: spacing/* margin */.e6\n  },\n  marginBlockStart: {\n    style: spacing/* margin */.e6\n  },\n  marginBlockEnd: {\n    style: spacing/* margin */.e6\n  },\n  // display\n  displayPrint: {\n    cssProperty: false,\n    transform: value => ({\n      '@media print': {\n        display: value\n      }\n    })\n  },\n  display: {},\n  overflow: {},\n  textOverflow: {},\n  visibility: {},\n  whiteSpace: {},\n  // flexbox\n  flexBasis: {},\n  flexDirection: {},\n  flexWrap: {},\n  justifyContent: {},\n  alignItems: {},\n  alignContent: {},\n  order: {},\n  flex: {},\n  flexGrow: {},\n  flexShrink: {},\n  alignSelf: {},\n  justifyItems: {},\n  justifySelf: {},\n  // grid\n  gap: {\n    style: gap\n  },\n  rowGap: {\n    style: rowGap\n  },\n  columnGap: {\n    style: columnGap\n  },\n  gridColumn: {},\n  gridRow: {},\n  gridAutoFlow: {},\n  gridAutoColumns: {},\n  gridAutoRows: {},\n  gridTemplateColumns: {},\n  gridTemplateRows: {},\n  gridTemplateAreas: {},\n  gridArea: {},\n  // positions\n  position: {},\n  zIndex: {\n    themeKey: 'zIndex'\n  },\n  top: {},\n  right: {},\n  bottom: {},\n  left: {},\n  // shadows\n  boxShadow: {\n    themeKey: 'shadows'\n  },\n  // sizing\n  width: {\n    transform: sizingTransform\n  },\n  maxWidth: {\n    style: maxWidth\n  },\n  minWidth: {\n    transform: sizingTransform\n  },\n  height: {\n    transform: sizingTransform\n  },\n  maxHeight: {\n    transform: sizingTransform\n  },\n  minHeight: {\n    transform: sizingTransform\n  },\n  boxSizing: {},\n  // typography\n  fontFamily: {\n    themeKey: 'typography'\n  },\n  fontSize: {\n    themeKey: 'typography'\n  },\n  fontStyle: {\n    themeKey: 'typography'\n  },\n  fontWeight: {\n    themeKey: 'typography'\n  },\n  letterSpacing: {},\n  textTransform: {},\n  lineHeight: {},\n  textAlign: {},\n  typography: {\n    cssProperty: false,\n    themeKey: 'typography'\n  }\n};\n/* harmony default export */ var styleFunctionSx_defaultSxConfig = (defaultSxConfig);\n\n/***/ }),\n\n/***/ 86523:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unstable_createStyleFunctionSx */\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28320);\n/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47730);\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54844);\n/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(95408);\n/* harmony import */ var _defaultSxConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(44920);\n\n\n\n\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n    const themeMapping = (0,_style__WEBPACK_IMPORTED_MODULE_0__/* .getPath */ .DW)(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = (0,_style__WEBPACK_IMPORTED_MODULE_0__/* .getStyleValue */ .Jq)(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = (0,_style__WEBPACK_IMPORTED_MODULE_0__/* .getStyleValue */ .Jq)(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .handleBreakpoints */ .k9)(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : _defaultSxConfig__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z;\n\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .createEmptyBreakpointObject */ .W8)(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = (0,_merge__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .handleBreakpoints */ .k9)({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = (0,_merge__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = (0,_merge__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .removeUnusedBreakpoints */ .L7)(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\n/* harmony default export */ __webpack_exports__[\"Z\"] = (styleFunctionSx);\n\n/***/ }),\n\n/***/ 34168:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var _mui_styled_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9757);\n\n\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_mui_styled_engine__WEBPACK_IMPORTED_MODULE_1__.T);\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\n/* harmony default export */ __webpack_exports__[\"Z\"] = (useTheme);\n\n/***/ }),\n\n/***/ 28320:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ capitalize; }\n/* harmony export */ });\n/* harmony import */ var _formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71387);\n\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nfunction capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error( false ? 0 : (0,_formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/***/ }),\n\n/***/ 59766:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"P\": function() { return /* binding */ isPlainObject; },\n/* harmony export */   \"Z\": function() { return /* binding */ deepmerge; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71860);\n\nfunction isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}\n\n/***/ }),\n\n/***/ 71387:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ formatMuiErrorMessage; }\n/* harmony export */ });\n/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nfunction formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}\n\n/***/ }),\n\n/***/ 19116:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"c\": function() { return /* binding */ FunctionToString; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20535);\n\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n        originalFunctionToString = Function.prototype.toString;\n\n        Function.prototype.toString = function ( ...args) {\n      var context = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .getOriginalFunction */ .HK)(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\n\n//# sourceMappingURL=functiontostring.js.map\n\n\n/***/ }),\n\n/***/ 42422:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QD\": function() { return /* binding */ InboundFilters; }\n/* harmony export */ });\n/* unused harmony exports _mergeOptions, _shouldDropEvent */\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12343);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62844);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57321);\n\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger.warn */ .kg.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .getEventDescription */ .jH)(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger.warn */ .kg.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .getEventDescription */ .jH)(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger.warn */ .kg.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .getEventDescription */ .jH)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger.warn */ .kg.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .getEventDescription */ .jH)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .isMatchingPattern */ .zC)(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .isMatchingPattern */ .zC)(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .isMatchingPattern */ .zC)(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger.error */ .kg.error(`Cannot extract message for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .getEventDescription */ .jH)(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n        return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger.error */ .kg.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .getEventDescription */ .jH)(event)}`);\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=inboundfilters.js.map\n\n\n/***/ }),\n\n/***/ 92876:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$e\": function() { return /* binding */ withScope; },\n/* harmony export */   \"Tb\": function() { return /* binding */ captureException; },\n/* harmony export */   \"e\": function() { return /* binding */ configureScope; }\n/* harmony export */ });\n/* unused harmony exports addBreadcrumb, captureEvent, captureMessage, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction */\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38641);\n\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__/* .getCurrentHub */ .Gd)().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__/* .getCurrentHub */ .Gd)().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__/* .getCurrentHub */ .Gd)().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n\n//# sourceMappingURL=exports.js.map\n\n\n/***/ }),\n\n/***/ 38641:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gd\": function() { return /* binding */ getCurrentHub; },\n/* harmony export */   \"cu\": function() { return /* binding */ getMainCarrier; }\n/* harmony export */ });\n/* unused harmony exports API_VERSION, Hub, getHubFromCarrier, makeMain, setHubOnCarrier */\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62844);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21170);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12343);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82991);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(92448);\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46769);\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(95771);\n\n\n\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new _scope_js__WEBPACK_IMPORTED_MODULE_0__/* .Scope */ .s(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = _scope_js__WEBPACK_IMPORTED_MODULE_0__/* .Scope.clone */ .s.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .uuid4 */ .DM)());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .uuid4 */ .DM)());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .uuid4 */ .DM)();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .dateTimestampInSeconds */ .yW)();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .consoleSandbox */ .Cf)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.warn */ .kg.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_4__/* .closeSession */ .RJ)(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__/* .getGlobalObject */ .R)();\n    const { userAgent } = global.navigator || {};\n\n    var session = (0,_session_js__WEBPACK_IMPORTED_MODULE_4__/* .makeSession */ .Hv)({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        (0,_session_js__WEBPACK_IMPORTED_MODULE_4__/* .updateSession */ .CT)(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.warn */ .kg.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__/* .getGlobalObject */ .R)();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__/* .isNodeEnv */ .KV)()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, _scope_js__WEBPACK_IMPORTED_MODULE_0__/* .Scope.clone */ .s.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__/* .getGlobalSingleton */ .Y)('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\n\n//# sourceMappingURL=hub.js.map\n\n\n/***/ }),\n\n/***/ 46769:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"c\": function() { return /* binding */ addGlobalEventProcessor; },\n/* harmony export */   \"s\": function() { return /* binding */ Scope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67597);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21170);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96893);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12343);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82991);\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(95771);\n\n\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {constructor() { Scope.prototype.__init.call(this);Scope.prototype.__init2.call(this);Scope.prototype.__init3.call(this);Scope.prototype.__init4.call(this);Scope.prototype.__init5.call(this);Scope.prototype.__init6.call(this);Scope.prototype.__init7.call(this);Scope.prototype.__init8.call(this);Scope.prototype.__init9.call(this);Scope.prototype.__init10.call(this); }\n  /** Flag if notifying is happening. */\n   __init() {this._notifyingListeners = false;}\n\n  /** Callback for client to receive scope changes. */\n   __init2() {this._scopeListeners = [];}\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n   __init3() {this._eventProcessors = [];}\n\n  /** Array of breadcrumbs. */\n   __init4() {this._breadcrumbs = [];}\n\n  /** User */\n   __init5() {this._user = {};}\n\n  /** Tags */\n   __init6() {this._tags = {};}\n\n  /** Extra */\n   __init7() {this._extra = {};}\n\n  /** Contexts */\n   __init8() {this._contexts = {};}\n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n  /** Attachments */\n   __init9() {this._attachments = [];}\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n   __init10() {this._sdkProcessingMetadata = {};}\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__/* .updateSession */ .CT)(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .isPlainObject */ .PO)(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .dateTimestampInSeconds */ .yW)(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .SyncPromise */ .cW((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__/* .logger.log */ .kg.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .isThenable */ .J8)(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__/* .getGlobalSingleton */ .Y)('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\n\n//# sourceMappingURL=scope.js.map\n\n\n/***/ }),\n\n/***/ 95771:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CT\": function() { return /* binding */ updateSession; },\n/* harmony export */   \"Hv\": function() { return /* binding */ makeSession; },\n/* harmony export */   \"RJ\": function() { return /* binding */ closeSession; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21170);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62844);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20535);\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .timestampInSeconds */ .ph)();\n\n  var session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .uuid4 */ .DM)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .timestampInSeconds */ .ph)();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .uuid4 */ .DM)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .dropUndefinedKeys */ .Jr)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n\n\n/***/ }),\n\n/***/ 62758:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"ro\": function() { return /* binding */ addExtensionMethods; },\n  \"lb\": function() { return /* binding */ startIdleTransaction; }\n});\n\n// UNUSED EXPORTS: _addTracingExtensions\n\n// EXTERNAL MODULE: ./node_modules/@sentry/hub/esm/hub.js\nvar hub = __webpack_require__(38641);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/logger.js\nvar logger = __webpack_require__(12343);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/is.js\nvar is = __webpack_require__(67597);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/node.js + 1 modules\nvar node = __webpack_require__(92448);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/instrument.js\nvar instrument = __webpack_require__(9732);\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/utils.js\nvar utils = __webpack_require__(63233);\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/errors.js\n\n\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  (0,instrument/* addInstrumentationHandler */.o)('error', errorCallback);\n  (0,instrument/* addInstrumentationHandler */.o)('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  var activeTransaction = (0,utils/* getActiveTransaction */.x1)();\n  if (activeTransaction) {\n    var status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger/* logger.log */.kg.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n\n//# sourceMappingURL=errors.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/idletransaction.js\nvar idletransaction = __webpack_require__(16458);\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/transaction.js\nvar esm_transaction = __webpack_require__(33391);\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/hubextensions.js\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  var scope = this.getScope();\n  if (scope) {\n    var span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!(0,utils/* hasTracingEnabled */.zu)(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      transactionSampling: { method: 'explicitly_set' },\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_sampler',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n    transaction.setMetadata({\n      transactionSampling: { method: 'inheritance' },\n    });\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_rate',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger/* logger.warn */.kg.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger/* logger.log */.kg.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger/* logger.log */.kg.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger/* logger.log */.kg.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    if ((0,is/* isNaN */.i2)(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger/* logger.warn */.kg.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger/* logger.warn */.kg.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  \n  transactionContext,\n  customSamplingContext,\n) {\n  var client = this.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new esm_transaction/* Transaction */.Y(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n) {\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new idletransaction/* IdleTransaction */.io(transactionContext, hub, idleTimeout, finalTimeout, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n  var carrier = (0,hub/* getMainCarrier */.cu)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  var carrier = (0,hub/* getMainCarrier */.cu)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  var packageToIntegrationMapping = {\n    mongodb() {\n      var integration = (0,node/* dynamicRequire */.l$)(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      var integration = (0,node/* dynamicRequire */.l$)(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      var integration = (0,node/* dynamicRequire */.l$)(module, './integrations/node/mysql') \n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      var integration = (0,node/* dynamicRequire */.l$)(module, './integrations/node/postgres') \n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  var mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!(0,node/* loadModule */.$y)(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if ((0,node/* isNodeEnv */.KV)()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n\n\n/***/ }),\n\n/***/ 16458:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"io\": function() { return /* binding */ IdleTransaction; },\n/* harmony export */   \"mg\": function() { return /* binding */ DEFAULT_FINAL_TIMEOUT; },\n/* harmony export */   \"nT\": function() { return /* binding */ DEFAULT_IDLE_TIMEOUT; }\n/* harmony export */ });\n/* unused harmony exports HEARTBEAT_INTERVAL, IdleTransactionSpanRecorder */\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21170);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12343);\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55334);\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33391);\n\n\n\n\nvar DEFAULT_IDLE_TIMEOUT = 1000;\nvar DEFAULT_FINAL_TIMEOUT = 30000;\nvar HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends _span_js__WEBPACK_IMPORTED_MODULE_0__/* .SpanRecorder */ .gB {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .timestampWithMs */ ._I)();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends _transaction_js__WEBPACK_IMPORTED_MODULE_2__/* .Transaction */ .Y {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n  \n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n    __init4() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  \n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = DEFAULT_IDLE_TIMEOUT,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = DEFAULT_FINAL_TIMEOUT,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);;\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._startIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .timestampWithMs */ ._I)()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (var callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        var keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      var pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      var popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idletimeout, if there is one\n   */\n   _cancelIdleTimeout() {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Creates an idletimeout\n   */\n   _startIdleTimeout(endTimestamp) {\n    this._cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this._cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log(`[Tracing] popActivity ${spanId}`);\n            delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      var endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .timestampWithMs */ ._I)() + this._idleTimeout / 1000;\n      this._startIdleTimeout(endTimestamp);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    var heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .logger.log */ .kg.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, HEARTBEAT_INTERVAL);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  var scope = hub.getScope();\n  if (scope) {\n    var transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\n\n//# sourceMappingURL=idletransaction.js.map\n\n\n/***/ }),\n\n/***/ 55334:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dr\": function() { return /* binding */ Span; },\n/* harmony export */   \"gB\": function() { return /* binding */ SpanRecorder; }\n/* harmony export */ });\n/* unused harmony export spanStatusfromHttpCode */\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45375);\n/* harmony import */ var _sentry_hub__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(38641);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62844);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21170);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20535);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(99181);\n\n\n\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {;SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .uuid4 */ .DM)();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__/* .uuid4 */ .DM)().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Internal keeper of the status\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .timestampWithMs */ ._I)();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n     __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {;Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    var childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    var spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__/* .timestampWithMs */ ._I)();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .dropUndefinedKeys */ .Jr)({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__/* ._nullishCoalesce */ .h)(spanContext.data, () => ( {}));\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__/* ._nullishCoalesce */ .h)(spanContext.spanId, () => ( this.spanId));\n    this.startTimestamp = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__/* ._nullishCoalesce */ .h)(spanContext.startTimestamp, () => ( this.startTimestamp));\n    this.status = spanContext.status;\n    this.tags = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__/* ._nullishCoalesce */ .h)(spanContext.tags, () => ( {}));\n    this.traceId = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__/* ._nullishCoalesce */ .h)(spanContext.traceId, () => ( this.traceId));\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext()\n\n {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .dropUndefinedKeys */ .Jr)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n   getBaggage() {\n    var existingBaggage = this.transaction && this.transaction.metadata.baggage;\n\n    var finalBaggage =\n      !existingBaggage || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__/* .isSentryBaggageEmpty */ .Dq)(existingBaggage)\n        ? this._getBaggageWithSentryValues(existingBaggage)\n        : existingBaggage;\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__/* .isBaggageEmpty */ .Qf)(finalBaggage) ? undefined : finalBaggage;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .dropUndefinedKeys */ .Jr)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   *\n   * @param baggage\n   * @returns\n   */\n   _getBaggageWithSentryValues(baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__/* .createBaggage */ .Hn)({})) {\n        var hub = ((this.transaction ) && (this.transaction )._hub) || (0,_sentry_hub__WEBPACK_IMPORTED_MODULE_5__/* .getCurrentHub */ .Gd)();\n    var client = hub.getClient();\n\n    const { environment, release } = (client && client.getOptions()) || {};\n\n    environment && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__/* .setBaggageValue */ .S1)(baggage, 'environment', environment);\n    release && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__/* .setBaggageValue */ .S1)(baggage, 'release', release);\n\n    return baggage;\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n\n//# sourceMappingURL=span.js.map\n\n\n/***/ }),\n\n/***/ 33391:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Y\": function() { return /* binding */ Transaction; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45375);\n/* harmony import */ var _sentry_hub__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38641);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12343);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20535);\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55334);\n\n\n\n\n\n/** JSDoc */\nclass Transaction extends _span_js__WEBPACK_IMPORTED_MODULE_0__/* .Span */ .Dr  {\n  \n\n  /**\n   * The reference to the current hub.\n   */\n  \n\n   __init() {this._measurements = {};}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);;\n\n    this._hub = hub || (0,_sentry_hub__WEBPACK_IMPORTED_MODULE_1__/* .getCurrentHub */ .Gd)();\n\n    this.name = transactionContext.name || '';\n\n    this.metadata = transactionContext.metadata || {};\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name) {\n    this.name = name;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new _span_js__WEBPACK_IMPORTED_MODULE_0__/* .SpanRecorder */ .gB(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Set metadata for this transaction.\n   * @hidden\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .logger.warn */ .kg.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .logger.log */ .kg.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      var client = this._hub.getClient();\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    var transaction = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: this.metadata,\n    };\n\n    var hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .logger.log */ .kg.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__/* .logger.log */ .kg.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    var spanContext = super.toContext();\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__/* .dropUndefinedKeys */ .Jr)({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_4__/* ._nullishCoalesce */ .h)(transactionContext.name, () => ( ''));\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n}\n\n\n//# sourceMappingURL=transaction.js.map\n\n\n/***/ }),\n\n/***/ 63233:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"XL\": function() { return /* binding */ msToSec; },\n/* harmony export */   \"x1\": function() { return /* binding */ getActiveTransaction; },\n/* harmony export */   \"zu\": function() { return /* binding */ hasTracingEnabled; }\n/* harmony export */ });\n/* unused harmony export secToMs */\n/* harmony import */ var _sentry_hub__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38641);\n\n\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  var client = (0,_sentry_hub__WEBPACK_IMPORTED_MODULE_0__/* .getCurrentHub */ .Gd)().getClient();\n  var options = maybeOptions || (client && client.getOptions());\n  return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  var hub = maybeHub || (0,_sentry_hub__WEBPACK_IMPORTED_MODULE_0__/* .getCurrentHub */ .Gd)();\n  var scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n  return time * 1000;\n}\n\n\n//# sourceMappingURL=utils.js.map\n\n\n/***/ }),\n\n/***/ 99181:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dq\": function() { return /* binding */ isSentryBaggageEmpty; },\n/* harmony export */   \"Hn\": function() { return /* binding */ createBaggage; },\n/* harmony export */   \"J8\": function() { return /* binding */ mergeAndSerializeBaggage; },\n/* harmony export */   \"LD\": function() { return /* binding */ parseBaggageString; },\n/* harmony export */   \"Qf\": function() { return /* binding */ isBaggageEmpty; },\n/* harmony export */   \"S1\": function() { return /* binding */ setBaggageValue; },\n/* harmony export */   \"bU\": function() { return /* binding */ BAGGAGE_HEADER_NAME; }\n/* harmony export */ });\n/* unused harmony exports MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, getBaggageValue, getSentryBaggageItems, getThirdPartyBaggage, serializeBaggage */\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12343);\n\n\nvar BAGGAGE_HEADER_NAME = 'baggage';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nvar MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/** Create an instance of Baggage */\nfunction createBaggage(initItems, baggageString = '') {\n  return [{ ...initItems }, baggageString];\n}\n\n/** Get a value from baggage */\nfunction getBaggageValue(baggage, key) {\n  return baggage[0][key];\n}\n\n/** Add a value to baggage */\nfunction setBaggageValue(baggage, key, value) {\n  baggage[0][key] = value;\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isSentryBaggageEmpty(baggage) {\n  return Object.keys(baggage[0]).length === 0;\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isBaggageEmpty(baggage) {\n  var thirdPartyBaggage = getThirdPartyBaggage(baggage);\n  return isSentryBaggageEmpty(baggage) && (thirdPartyBaggage == undefined || thirdPartyBaggage.length === 0);\n}\n\n/** Returns Sentry specific baggage values */\nfunction getSentryBaggageItems(baggage) {\n  return baggage[0];\n}\n\n/**\n * Returns 3rd party baggage string of @param baggage\n * @param baggage\n */\nfunction getThirdPartyBaggage(baggage) {\n  return baggage[1];\n}\n\n/** Serialize a baggage object */\nfunction serializeBaggage(baggage) {\n  return Object.keys(baggage[0]).reduce((prev, key) => {\n    var val = baggage[0][key] ;\n    var baggageEntry = `${SENTRY_BAGGAGE_KEY_PREFIX}${encodeURIComponent(key)}=${encodeURIComponent(val)}`;\n    var newVal = prev === '' ? baggageEntry : `${prev},${baggageEntry}`;\n    if (newVal.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_0__/* .logger.warn */ .kg.warn(`Not adding key: ${key} with val: ${val} to baggage due to exceeding baggage size limits.`);\n      return prev;\n    } else {\n      return newVal;\n    }\n  }, baggage[1]);\n}\n\n/** Parse a baggage header to a string */\nfunction parseBaggageString(inputBaggageString) {\n  return inputBaggageString.split(',').reduce(\n    ([baggageObj, baggageString], curr) => {\n      const [key, val] = curr.split('=');\n      if (SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(key)) {\n        var baggageKey = decodeURIComponent(key.split('-')[1]);\n        return [\n          {\n            ...baggageObj,\n            [baggageKey]: decodeURIComponent(val),\n          },\n          baggageString,\n        ];\n      } else {\n        return [baggageObj, baggageString === '' ? curr : `${baggageString},${curr}`];\n      }\n    },\n    [{}, ''],\n  );\n}\n\n/**\n * Merges the baggage header we saved from the incoming request (or meta tag) with\n * a possibly created or modified baggage header by a third party that's been added\n * to the outgoing request header.\n *\n * In case @param headerBaggageString exists, we can safely add the the 3rd party part of @param headerBaggage\n * with our @param incomingBaggage. This is possible because if we modified anything beforehand,\n * it would only affect parts of the sentry baggage (@see Baggage interface).\n *\n * @param incomingBaggage the baggage header of the incoming request that might contain sentry entries\n * @param headerBaggageString possibly existing baggage header string added from a third party to request headers\n *\n * @return a merged and serialized baggage string to be propagated with the outgoing request\n */\nfunction mergeAndSerializeBaggage(incomingBaggage, headerBaggageString) {\n  if (!incomingBaggage && !headerBaggageString) {\n    return '';\n  }\n\n  var headerBaggage = (headerBaggageString && parseBaggageString(headerBaggageString)) || undefined;\n  var thirdPartyHeaderBaggage = headerBaggage && getThirdPartyBaggage(headerBaggage);\n\n  var finalBaggage = createBaggage(\n    (incomingBaggage && incomingBaggage[0]) || {},\n    thirdPartyHeaderBaggage || (incomingBaggage && incomingBaggage[1]) || '',\n  );\n  return serializeBaggage(finalBaggage);\n}\n\n\n//# sourceMappingURL=baggage.js.map\n\n\n/***/ }),\n\n/***/ 58464:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"R\": function() { return /* binding */ htmlTreeAsString; },\n/* harmony export */   \"l\": function() { return /* binding */ getLocationHref; }\n/* harmony export */ });\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82991);\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67597);\n\n\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = (0,_global_js__WEBPACK_IMPORTED_MODULE_1__/* .getGlobalObject */ .R)();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n\n//# sourceMappingURL=browser.js.map\n\n\n/***/ }),\n\n/***/ 45375:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"h\": function() { return /* binding */ _nullishCoalesce; }\n/* harmony export */ });\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_nullishCoalesce.js.map\n\n\n/***/ }),\n\n/***/ 64307:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"x\": function() { return /* binding */ _optionalChain; }\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_optionalChain.js.map\n\n\n/***/ }),\n\n/***/ 82991:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"R\": function() { return /* binding */ getGlobalObject; },\n/* harmony export */   \"Y\": function() { return /* binding */ getGlobalSingleton; }\n/* harmony export */ });\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92448);\n\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    (0,_node_js__WEBPACK_IMPORTED_MODULE_0__/* .isNodeEnv */ .KV)()\n      ? __webpack_require__.g\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\n\n//# sourceMappingURL=global.js.map\n\n\n/***/ }),\n\n/***/ 9732:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"o\": function() { return /* binding */ addInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82991);\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67597);\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12343);\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20535);\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30360);\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8823);\n\n\n\n\n\n\n\nvar global = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _logger_js__WEBPACK_IMPORTED_MODULE_1__/* .logger.warn */ .kg.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__/* .logger.error */ .kg.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__/* .getFunctionName */ .$P)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  _logger_js__WEBPACK_IMPORTED_MODULE_1__/* .CONSOLE_LEVELS.forEach */ .RU.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_4__/* .supportsNativeFetch */ .t$)()) {\n    return;\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n            return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && (0,_is_js__WEBPACK_IMPORTED_MODULE_5__/* .isInstanceOf */ .V9)(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && (0,_is_js__WEBPACK_IMPORTED_MODULE_5__/* .isInstanceOf */ .V9)(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n            var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n                method: (0,_is_js__WEBPACK_IMPORTED_MODULE_5__/* .isString */ .HD)(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n            if ((0,_is_js__WEBPACK_IMPORTED_MODULE_5__/* .isString */ .HD)(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_4__/* .supportsHistory */ .Bf)()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(global.history, 'pushState', historyReplacementFunction);\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n        var proto = (global )[target] && (global )[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n        \n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__/* .fill */ .hl)(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n          \n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type];                 }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\n\n//# sourceMappingURL=instrument.js.map\n\n\n/***/ }),\n\n/***/ 67597:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Cy\": function() { return /* binding */ isSyntheticEvent; },\n/* harmony export */   \"HD\": function() { return /* binding */ isString; },\n/* harmony export */   \"J8\": function() { return /* binding */ isThenable; },\n/* harmony export */   \"Kj\": function() { return /* binding */ isRegExp; },\n/* harmony export */   \"PO\": function() { return /* binding */ isPlainObject; },\n/* harmony export */   \"TX\": function() { return /* binding */ isDOMError; },\n/* harmony export */   \"V9\": function() { return /* binding */ isInstanceOf; },\n/* harmony export */   \"VW\": function() { return /* binding */ isErrorEvent; },\n/* harmony export */   \"VZ\": function() { return /* binding */ isError; },\n/* harmony export */   \"cO\": function() { return /* binding */ isEvent; },\n/* harmony export */   \"fm\": function() { return /* binding */ isDOMException; },\n/* harmony export */   \"i2\": function() { return /* binding */ isNaN; },\n/* harmony export */   \"kK\": function() { return /* binding */ isElement; },\n/* harmony export */   \"pt\": function() { return /* binding */ isPrimitive; }\n/* harmony export */ });\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat, ty) {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=is.js.map\n\n\n/***/ }),\n\n/***/ 12343:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Cf\": function() { return /* binding */ consoleSandbox; },\n/* harmony export */   \"RU\": function() { return /* binding */ CONSOLE_LEVELS; },\n/* harmony export */   \"kg\": function() { return /* binding */ logger; }\n/* harmony export */ });\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82991);\n\n\n// TODO: Implement different loggers for different environments\nvar global = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalSingleton */ .Y)('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\n\n//# sourceMappingURL=logger.js.map\n\n\n/***/ }),\n\n/***/ 62844:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DM\": function() { return /* binding */ uuid4; },\n/* harmony export */   \"Db\": function() { return /* binding */ addExceptionTypeValue; },\n/* harmony export */   \"EG\": function() { return /* binding */ addExceptionMechanism; },\n/* harmony export */   \"J4\": function() { return /* binding */ parseSemver; },\n/* harmony export */   \"YO\": function() { return /* binding */ checkOrSetAlreadyCaught; },\n/* harmony export */   \"en\": function() { return /* binding */ parseUrl; },\n/* harmony export */   \"go\": function() { return /* binding */ addContextToFrame; },\n/* harmony export */   \"jH\": function() { return /* binding */ getEventDescription; },\n/* harmony export */   \"rt\": function() { return /* binding */ stripUrlQueryAndFragment; }\n/* harmony export */ });\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82991);\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20535);\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57321);\n\n\n\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)() ;\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = (num) => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = (Math.random() * 16) | 0;\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__/* .snipLine */ .JM)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__/* .snipLine */ .JM)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__/* .snipLine */ .JM)(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__/* .addNonEnumerableProperty */ .xp)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n\n//# sourceMappingURL=misc.js.map\n\n\n/***/ }),\n\n/***/ 92448:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"l$\": function() { return /* binding */ dynamicRequire; },\n  \"KV\": function() { return /* binding */ isNodeEnv; },\n  \"$y\": function() { return /* binding */ loadModule; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/env.js\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n\n//# sourceMappingURL=env.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/node.js\n/* module decorator */ module = __webpack_require__.hmd(module);\n/* provided dependency */ var process = __webpack_require__(83454);\n\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\n\n//# sourceMappingURL=node.js.map\n\n\n/***/ }),\n\n/***/ 20535:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$Q\": function() { return /* binding */ markFunctionWrapped; },\n/* harmony export */   \"HK\": function() { return /* binding */ getOriginalFunction; },\n/* harmony export */   \"Jr\": function() { return /* binding */ dropUndefinedKeys; },\n/* harmony export */   \"Sh\": function() { return /* binding */ convertToPlainObject; },\n/* harmony export */   \"_j\": function() { return /* binding */ urlEncode; },\n/* harmony export */   \"hl\": function() { return /* binding */ fill; },\n/* harmony export */   \"xp\": function() { return /* binding */ addNonEnumerableProperty; },\n/* harmony export */   \"zf\": function() { return /* binding */ extractExceptionKeysForMessage; }\n/* harmony export */ });\n/* unused harmony export objectify */\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58464);\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67597);\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57321);\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isError */ .VZ)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isEvent */ .cO)(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isInstanceOf */ .V9)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isElement */ .kK)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_1__/* .htmlTreeAsString */ .R)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_2__/* .truncate */ .$G)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_2__/* .truncate */ .$G)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isPlainObject */ .PO)(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n\n\n/***/ }),\n\n/***/ 16547:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VT\": function() { return /* binding */ severityLevelFromString; }\n/* harmony export */ });\n/* unused harmony exports severityFromString, validSeverityLevels */\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\n\n//# sourceMappingURL=severity.js.map\n\n\n/***/ }),\n\n/***/ 30360:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$P\": function() { return /* binding */ getFunctionName; },\n/* harmony export */   \"Sq\": function() { return /* binding */ stackParserFromStackParserOptions; },\n/* harmony export */   \"pE\": function() { return /* binding */ createStackParser; }\n/* harmony export */ });\n/* unused harmony export stripSentryFramesAndReverse */\nvar STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      for (var parser of sortedParsers) {\n        var frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n\n\n/***/ }),\n\n/***/ 57321:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$G\": function() { return /* binding */ truncate; },\n/* harmony export */   \"JM\": function() { return /* binding */ snipLine; },\n/* harmony export */   \"nK\": function() { return /* binding */ safeJoin; },\n/* harmony export */   \"zC\": function() { return /* binding */ isMatchingPattern; }\n/* harmony export */ });\n/* unused harmony export escapeStringForRegex */\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67597);\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n        colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n    for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isRegExp */ .Kj)(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\n\n//# sourceMappingURL=string.js.map\n\n\n/***/ }),\n\n/***/ 8823:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ak\": function() { return /* binding */ supportsFetch; },\n/* harmony export */   \"Bf\": function() { return /* binding */ supportsHistory; },\n/* harmony export */   \"Du\": function() { return /* binding */ isNativeFetch; },\n/* harmony export */   \"t$\": function() { return /* binding */ supportsNativeFetch; }\n/* harmony export */ });\n/* unused harmony exports supportsDOMError, supportsDOMException, supportsErrorEvent, supportsReferrerPolicy, supportsReportingObserver */\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82991);\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12343);\n\n\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n\n  // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n    if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__/* .logger.warn */ .kg.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n      var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\n\n//# sourceMappingURL=supports.js.map\n\n\n/***/ }),\n\n/***/ 96893:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$2\": function() { return /* binding */ rejectedSyncPromise; },\n/* harmony export */   \"WD\": function() { return /* binding */ resolvedSyncPromise; },\n/* harmony export */   \"cW\": function() { return /* binding */ SyncPromise; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67597);\n\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__/* .isThenable */ .J8)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n\n\n/***/ }),\n\n/***/ 21170:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z1\": function() { return /* binding */ browserPerformanceTimeOrigin; },\n/* harmony export */   \"_I\": function() { return /* binding */ timestampWithMs; },\n/* harmony export */   \"ph\": function() { return /* binding */ timestampInSeconds; },\n/* harmony export */   \"yW\": function() { return /* binding */ dateTimestampInSeconds; }\n/* harmony export */ });\n/* unused harmony exports _browserPerformanceTimeOriginMode, usingPerformanceAPI */\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82991);\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(92448);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__/* .dynamicRequire */ .l$)(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__/* .isNodeEnv */ .KV)() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = (0,_global_js__WEBPACK_IMPORTED_MODULE_0__/* .getGlobalObject */ .R)();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n\n\n/***/ }),\n\n/***/ 25436:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\nvar _global = (typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {}); _global.SENTRY_RELEASE={id:\"bK1ubFbiy2G2Hmt8jSO-E\"};\n\n/***/ }),\n\n/***/ 8679:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar reactIs = __webpack_require__(21296);\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n\n\n/***/ }),\n\n/***/ 96103:\n/***/ (function(__unused_webpack_module, exports) {\n\n\"use strict\";\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n\n\n/***/ }),\n\n/***/ 21296:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(96103);\n} else {}\n\n\n/***/ }),\n\n/***/ 83454:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(77663);\n\n//# sourceMappingURL=process.js.map\n\n/***/ }),\n\n/***/ 6840:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(29505);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 16890:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ hooks_useCustomTheme; },\n  \"t\": function() { return /* binding */ useCustomThemeController; }\n});\n\n;// CONCATENATED MODULE: ./theme/emotionTheme.ts\nconst CommonThemeColors = {\n    black: \"#333\",\n    dark: \"#95998A\",\n    green: \"#BDCC94\",\n    yellow: \"#FFEC67\",\n    white: \"#FFFFFF\",\n    blue: \"#A9B6CC\",\n    neonRed: \"#FF1177\",\n    neonBlue: \"#228DFF\",\n    neonYellow: \"#FFDD1B\",\n    neonGreen: \"#B6FF00\",\n    neonOrange: \"#FF9900\",\n    neonViolet: \"#ff00de\"\n};\nconst LightThemeColors = {\n    ...CommonThemeColors,\n    text: CommonThemeColors.black,\n    backgroundColor: CommonThemeColors.white\n};\nconst DarkThemeColors = {\n    ...CommonThemeColors,\n    text: CommonThemeColors.white,\n    backgroundColor: CommonThemeColors.black\n};\n// 참조: https://color.adobe.com/ko/explore\nconst emotionLightTheme = {\n    colors: LightThemeColors\n};\nconst emotionDarkTheme = {\n    colors: DarkThemeColors\n};\nconst media = {\n    widePc: \"only screen and (min-width : 1288px)\",\n    mobile: \"only screen and (max-width : 759px)\",\n    tablet: \"only screen  and (min-width : 760px) and (max-width : 1023px)\",\n    pc: \"only screen and (min-width : 1024px)\",\n    notMobile: \"only screen and (min-width : 760px)\",\n    notPC: \"only screen and (max-width : 1023px)\",\n    wideTablet: \"only screen  and (min-width : 1024px) and (max-width : 1200px)\"\n};\n\n// EXTERNAL MODULE: ./node_modules/@mui/material/colors/red.js\nvar red = __webpack_require__(60265);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTheme.js + 13 modules\nvar createTheme = __webpack_require__(44551);\n;// CONCATENATED MODULE: ./theme/muiTheme.ts\n\n\n\nconst muiLightTheme = (0,createTheme/* default */.Z)({\n    colors: emotionLightTheme.colors,\n    palette: {\n        primary: {\n            main: \"#556cd6\"\n        },\n        secondary: {\n            main: \"#19857b\"\n        },\n        error: {\n            main: red/* default.A400 */.Z.A400\n        },\n        text: {\n            primary: emotionLightTheme.colors.text\n        },\n        background: {\n            default: emotionLightTheme.colors.backgroundColor\n        }\n    }\n});\nconst muiDarkTheme = (0,createTheme/* default */.Z)({\n    colors: emotionDarkTheme.colors,\n    palette: {\n        primary: {\n            main: \"#556cd6\"\n        },\n        secondary: {\n            main: \"#19857b\"\n        },\n        error: {\n            main: red/* default.A400 */.Z.A400\n        },\n        text: {\n            primary: emotionDarkTheme.colors.text\n        },\n        background: {\n            default: emotionDarkTheme.colors.backgroundColor\n        }\n    }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/recoil/es/recoil.js\nvar recoil = __webpack_require__(2804);\n;// CONCATENATED MODULE: ./stores/theme.ts\n\nconst themeState = (0,recoil/* atom */.cn)({\n    key: \"themeState\",\n    default: \"lightTheme\"\n});\n\n;// CONCATENATED MODULE: ./hooks/useCustomTheme.ts\n\n\n\n\n\nfunction getNextTheme(currentTheme) {\n    return currentTheme === \"lightTheme\" ? \"darkTheme\" : \"lightTheme\";\n}\nfunction useCustomTheme() {\n    const currentTheme = (0,recoil/* useRecoilValue */.sJ)(themeState);\n    const [muiTheme, emotionTheme] = (0,react.useMemo)(()=>{\n        if (currentTheme === \"lightTheme\") {\n            return [\n                muiLightTheme,\n                emotionLightTheme\n            ];\n        }\n        return [\n            muiDarkTheme,\n            emotionDarkTheme\n        ];\n    }, [\n        currentTheme\n    ]);\n    return {\n        muiTheme,\n        emotionTheme\n    };\n}\nfunction useCustomThemeController() {\n    const [currentTheme, setCurrentTheme] = (0,recoil/* useRecoilState */.FV)(themeState);\n    const toggleTheme = (0,react.useCallback)(()=>{\n        const nextTheme = getNextTheme(currentTheme);\n        setCurrentTheme(nextTheme);\n    }, [\n        currentTheme\n    ]);\n    return {\n        currentTheme,\n        toggleTheme\n    };\n}\n/* harmony default export */ var hooks_useCustomTheme = (useCustomTheme);\n\n\n/***/ }),\n\n/***/ 29505:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ _app; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./styles/globals.css\nvar globals = __webpack_require__(16774);\n// EXTERNAL MODULE: ./node_modules/next/head.js\nvar head = __webpack_require__(9008);\nvar head_default = /*#__PURE__*/__webpack_require__.n(head);\n// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js + 2 modules\nvar emotion_element_c39617d8_browser_esm = __webpack_require__(9757);\n// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\nvar emotion_react_browser_esm = __webpack_require__(70917);\n// EXTERNAL MODULE: ./node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(32793);\n// EXTERNAL MODULE: ./node_modules/@mui/material/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(1048);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@mui/system/node_modules/@babel/runtime/helpers/esm/extends.js\nvar helpers_esm_extends = __webpack_require__(54695);\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/useTheme/ThemeContext.js\n\nconst ThemeContext = /*#__PURE__*/react.createContext(null);\nif (false) {}\n/* harmony default export */ var useTheme_ThemeContext = (ThemeContext);\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/useTheme/useTheme.js\n\n\nfunction useTheme() {\n  const theme = react.useContext(useTheme_ThemeContext);\n  if (false) {}\n  return theme;\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/esm/extends.js\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/ThemeProvider/nested.js\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\n/* harmony default export */ var nested = (hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__');\n;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js\n\n\n\n\n\n\n\n\n// To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (false) {}\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (false) {}\n  const theme = react.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(useTheme_ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\n false ? 0 : void 0;\nif (false) {}\n/* harmony default export */ var ThemeProvider_ThemeProvider = (ThemeProvider);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeWithoutDefault.js\nvar useThemeWithoutDefault = __webpack_require__(34168);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js\n\n\n\n\n\n\n\n\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return react.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? (0,helpers_esm_extends/* default */.Z)({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? (0,helpers_esm_extends/* default */.Z)({}, upperTheme, {\n      [themeId]: localTheme\n    }) : (0,helpers_esm_extends/* default */.Z)({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider_ThemeProvider_ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = (0,useThemeWithoutDefault/* default */.Z)(EMPTY_THEME);\n  const upperPrivateTheme = useTheme() || EMPTY_THEME;\n  if (false) {}\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(ThemeProvider_ThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(emotion_element_c39617d8_browser_esm.T.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\n false ? 0 : void 0;\nif (false) {}\n/* harmony default export */ var esm_ThemeProvider_ThemeProvider = (ThemeProvider_ThemeProvider_ThemeProvider);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/identifier.js\nvar identifier = __webpack_require__(10606);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/ThemeProvider.js\n\n\nconst _excluded = [\"theme\"];\n\n\n\n\n\nfunction styles_ThemeProvider_ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, _excluded);\n  const scopedTheme = themeInput[identifier/* default */.Z];\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(esm_ThemeProvider_ThemeProvider, (0,esm_extends/* default */.Z)({}, props, {\n    themeId: scopedTheme ? identifier/* default */.Z : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\n false ? 0 : void 0;\n// EXTERNAL MODULE: ./hooks/useCustomTheme.ts + 3 modules\nvar useCustomTheme = __webpack_require__(16890);\n;// CONCATENATED MODULE: ./providers/ThemeProvider.tsx\n\n\n\n\nfunction providers_ThemeProvider_ThemeProvider(props) {\n    const { children  } = props;\n    const { muiTheme , emotionTheme  } = (0,useCustomTheme/* default */.Z)();\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(styles_ThemeProvider_ThemeProvider, {\n                theme: muiTheme,\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(emotion_element_c39617d8_browser_esm.a, {\n                    theme: emotionTheme,\n                    children: children\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(emotion_react_browser_esm/* Global */.xB, {\n                styles: {\n                    body: {\n                        color: emotionTheme.colors.text,\n                        backgroundColor: emotionTheme.colors.backgroundColor\n                    }\n                }\n            })\n        ]\n    });\n}\n/* harmony default export */ var providers_ThemeProvider = (providers_ThemeProvider_ThemeProvider);\n\n// EXTERNAL MODULE: ./node_modules/react-query/es/index.js\nvar es = __webpack_require__(88767);\n// EXTERNAL MODULE: ./node_modules/recoil/es/recoil.js\nvar recoil = __webpack_require__(2804);\n;// CONCATENATED MODULE: ./pages/_app.tsx\n\n\n\n\n\n\n\n\nfunction MyApp(param) {\n    let { Component , pageProps  } = param;\n    const [queryClient] = (0,react.useState)(()=>new es.QueryClient());\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)((head_default()), {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"link\", {\n                        rel: \"apple-touch-icon\",\n                        href: \"%PUBLIC_URL%/logo.svg\"\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(recoil/* RecoilRoot */.Wh, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(es.QueryClientProvider, {\n                    client: queryClient,\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(es.Hydrate, {\n                        state: pageProps.dehydratedState,\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(providers_ThemeProvider, {\n                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Component, {\n                                ...pageProps\n                            })\n                        })\n                    })\n                })\n            })\n        ]\n    });\n}\n/* harmony default export */ var _app = (MyApp);\n\n\n/***/ }),\n\n/***/ 84225:\n/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/version.js\nvar SDK_VERSION = '7.1.1';\n\n\n//# sourceMappingURL=version.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/core/esm/integrations/inboundfilters.js\nvar inboundfilters = __webpack_require__(42422);\n// EXTERNAL MODULE: ./node_modules/@sentry/core/esm/integrations/functiontostring.js\nvar functiontostring = __webpack_require__(19116);\n// EXTERNAL MODULE: ./node_modules/@sentry/hub/esm/scope.js\nvar esm_scope = __webpack_require__(46769);\n// EXTERNAL MODULE: ./node_modules/@sentry/hub/esm/hub.js\nvar esm_hub = __webpack_require__(38641);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/logger.js\nvar esm_logger = __webpack_require__(12343);\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/integration.js\n\n\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] );\n}\n\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  var userIntegrations = options.integrations;\n\n  let integrations = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  var integrationsNames = integrations.map(i => i.name);\n  var alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(esm_scope/* addGlobalEventProcessor */.c, esm_hub/* getCurrentHub */.Gd);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\n\n//# sourceMappingURL=integration.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/sdk.js\n\n\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      esm_logger/* logger.enable */.kg.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = (0,esm_hub/* getCurrentHub */.Gd)();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/global.js\nvar esm_global = __webpack_require__(82991);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/stacktrace.js\nvar stacktrace = __webpack_require__(30360);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/supports.js\nvar supports = __webpack_require__(8823);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/instrument.js\nvar instrument = __webpack_require__(9732);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\nvar _optionalChain = __webpack_require__(64307);\n// EXTERNAL MODULE: ./node_modules/@sentry/hub/esm/session.js\nvar esm_session = __webpack_require__(95771);\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/error.js\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  \n\n   constructor( message) {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\n\n//# sourceMappingURL=error.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/dsn.js\n\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsn_dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction dsn_makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\n/**\n * Changes a Dsn to point to the `relay` server running in the Lambda Extension.\n *\n * This is only used by the serverless integration for AWS Lambda.\n *\n * @param originalDsn The original Dsn of the customer.\n * @returns Dsn pointing to Lambda extension.\n */\nfunction extensionRelayDSN(originalDsn) {\n  if (originalDsn === undefined) {\n    return undefined;\n  }\n\n  var dsn = dsnFromString(originalDsn);\n  dsn.host = 'localhost';\n  dsn.port = '3000';\n  dsn.protocol = 'http';\n\n  return dsn_dsnToString(dsn);\n}\n\n\n//# sourceMappingURL=dsn.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/misc.js\nvar misc = __webpack_require__(62844);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/is.js\nvar is = __webpack_require__(67597);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/syncpromise.js\nvar syncpromise = __webpack_require__(96893);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/object.js\nvar object = __webpack_require__(20535);\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/envelope.js\n\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    (0,object/* dropUndefinedKeys */.Jr)({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n\n//# sourceMappingURL=envelope.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/time.js\nvar time = __webpack_require__(21170);\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/memo.js\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/normalize.js\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !(0,is/* isNaN */.i2)(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = (0,object/* convertToPlainObject */.Sh)(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof __webpack_require__.g !== 'undefined' && value === __webpack_require__.g) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,is/* isSyntheticEvent */.Cy)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,stacktrace/* getFunctionName */.$P)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n\n//# sourceMappingURL=normalize.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/string.js\nvar string = __webpack_require__(57321);\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/api.js\n\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn) {\n  return (0,object/* urlEncode */._j)({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction api_getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\n\n//# sourceMappingURL=api.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/envelope.js\n\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsn_dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  // TODO: Below is a temporary hack in order to debug a serialization error - see\n  // https://github.com/getsentry/sentry-javascript/issues/2809,\n  // https://github.com/getsentry/sentry-javascript/pull/4425, and\n  // https://github.com/getsentry/sentry-javascript/pull/4574.\n  //\n  // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n  // throw a circular reference error.\n  //\n  // When it's time to remove it:\n  // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n  //    `sdkProcessingMetadata`\n  // 2. Restore the original version of the request body, which is commented out\n  // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n  //    baseClient tests in this package\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n  event.tags = event.tags || {};\n  event.extra = event.extra || {};\n\n  // In theory, all events should be marked as having gone through normalization and so\n  // we should never set this tag/extra data\n  if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n    event.tags.skippedNormalization = true;\n    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n  }\n\n  // prevent this data from being sent to sentry\n  // TODO: This is NOT part of the hack - DO NOT DELETE\n  delete event.sdkProcessingMetadata;\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  var eventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsn_dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      event.contexts &&\n      event.contexts.trace && {\n        // TODO: Grab this from baggage\n        trace: (0,object/* dropUndefinedKeys */.Jr)({\n          // Trace context must be defined for transactions\n                    trace_id: event.contexts.trace.trace_id ,\n          environment: event.environment,\n          release: event.release,\n          transaction: event.transaction,\n          user: event.user && {\n            id: event.user.id,\n            segment: event.user.segment,\n          },\n          public_key: dsn.publicKey,\n        }),\n      }),\n  };\n}\n\n\n//# sourceMappingURL=envelope.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/baseclient.js\n\n\n\n\n\n\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n  \n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  \n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = dsn_makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options.tunnel);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if ((0,misc/* checkOrSetAlreadyCaught */.YO)(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = (0,is/* isPrimitive */.pt)(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && (0,misc/* checkOrSetAlreadyCaught */.YO)(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      (0,esm_session/* updateSession */.CT)(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return (0,syncpromise/* resolvedSyncPromise */.WD)(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(attachment, (0,_optionalChain/* _optionalChain */.x)([this, 'access', _ => _._options, 'access', _2 => _2.transportOptions, 'optionalAccess', _3 => _3.textEncoder])),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      (0,esm_session/* updateSession */.CT)(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new syncpromise/* SyncPromise */.cW(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || (0,misc/* uuid4 */.DM)(),\n      timestamp: event.timestamp || (0,time/* dateTimestampInSeconds */.yW)(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = esm_scope/* Scope.clone */.s.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = (0,syncpromise/* resolvedSyncPromise */.WD)(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (evt) {\n        // TODO this is more of the hack trying to solve https://github.com/getsentry/sentry-javascript/issues/2809\n        // it is only attached as extra data to the event if the event somehow skips being normalized\n        evt.sdkProcessingMetadata = {\n          ...evt.sdkProcessingMetadata,\n          normalizeDepth: `${normalize(normalizeDepth)} (${typeof normalizeDepth})`,\n        };\n      }\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      normalized.contexts = {};\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    normalized.sdkProcessingMetadata = { ...normalized.sdkProcessingMetadata, baseClientNormalized: true };\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = (0,string/* truncate */.$G)(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = (0,string/* truncate */.$G)(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = (0,string/* truncate */.$G)(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return (0,syncpromise/* rejectedSyncPromise */.$2)(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return (0,syncpromise/* rejectedSyncPromise */.$2)(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.error */.kg.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.error */.kg.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n    \n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if ((0,is/* isThenable */.J8)(rv)) {\n    return rv.then(\n      event => {\n        if (!((0,is/* isPlainObject */.PO)(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!((0,is/* isPlainObject */.PO)(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\n\n//# sourceMappingURL=baseclient.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/clientreport.js\n\n\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || (0,time/* dateTimestampInSeconds */.yW)(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\n\n//# sourceMappingURL=clientreport.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/eventbuilder.js\n\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var event = {\n    exception: {\n      values: [\n        {\n          type: (0,is/* isEvent */.cO)(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${(0,object/* extractExceptionKeysForMessage */.zf)(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  (0,misc/* addExceptionMechanism */.EG)(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,syncpromise/* resolvedSyncPromise */.WD)(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n    level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,syncpromise/* resolvedSyncPromise */.WD)(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if ((0,is/* isErrorEvent */.VW)(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if ((0,is/* isDOMError */.TX)(exception ) || (0,is/* isDOMException */.fm)(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || ((0,is/* isDOMError */.TX)(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      (0,misc/* addExceptionTypeValue */.Db)(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if ((0,is/* isError */.VZ)(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if ((0,is/* isPlainObject */.PO)(exception) || (0,is/* isEvent */.cO)(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    (0,misc/* addExceptionMechanism */.EG)(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  (0,misc/* addExceptionTypeValue */.Db)(event, `${exception}`, undefined);\n  (0,misc/* addExceptionMechanism */.EG)(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/browser.js\nvar browser = __webpack_require__(58464);\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/severity.js\nvar severity = __webpack_require__(16547);\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\n\n\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      (0,instrument/* addInstrumentationHandler */.o)('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      (0,instrument/* addInstrumentationHandler */.o)('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      (0,instrument/* addInstrumentationHandler */.o)('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      (0,instrument/* addInstrumentationHandler */.o)('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      (0,instrument/* addInstrumentationHandler */.o)('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n    function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? (0,browser/* htmlTreeAsString */.R)(handlerData.event.target , keyAttrs)\n        : (0,browser/* htmlTreeAsString */.R)(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: (0,severity/* severityLevelFromString */.VT)(handlerData.level),\n    message: (0,string/* safeJoin */.nK)(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${(0,string/* safeJoin */.nK)(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  var global = (0,esm_global/* getGlobalObject */.R)();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = (0,misc/* parseUrl */.en)(global.location.href);\n  let parsedFrom = (0,misc/* parseUrl */.en)(from);\n  var parsedTo = (0,misc/* parseUrl */.en)(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\n\n//# sourceMappingURL=breadcrumbs.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/transports/utils.js\n\n\nvar global = (0,esm_global/* getGlobalObject */.R)();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  // Fast path to avoid DOM I/O\n  if ((0,supports/* isNativeFetch */.Du)(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n    if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        esm_logger/* logger.warn */.kg.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  }\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nfunction sendReport(url, body) {\n  var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if ((0,supports/* supportsFetch */.Ak)()) {\n    var fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.error */.kg.error(error);\n    });\n  }\n}\n\n\n//# sourceMappingURL=utils.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/client.js\n\n\n\n\n\n\nvar globalObject = (0,esm_global/* getGlobalObject */.R)();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n        level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      (0,esm_hub/* getCurrentHub */.Gd)().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: (0,misc/* getEventDescription */.jH)(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options.tunnel);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsn_dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.error */.kg.error(e);\n    }\n  }\n}\n\n\n//# sourceMappingURL=client.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/stack-parsers.js\n\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = (0,stacktrace/* createStackParser */.pE)(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\n\n//# sourceMappingURL=stack-parsers.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/hub/esm/exports.js\nvar esm_exports = __webpack_require__(92876);\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/helpers.js\n\n\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  ) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if ((0,object/* getOriginalFunction */.HK)(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n    // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n            var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      (0,esm_exports/* withScope */.$e)((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            (0,misc/* addExceptionTypeValue */.Db)(event, undefined, undefined);\n            (0,misc/* addExceptionMechanism */.EG)(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        (0,esm_exports/* captureException */.Tb)(ex);\n      });\n\n      throw ex;\n    }\n  };\n  \n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} \n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  (0,object/* markFunctionWrapped */.$Q)(sentryWrapped, fn);\n\n  (0,object/* addNonEnumerableProperty */.xp)(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n      } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\n\n//# sourceMappingURL=helpers.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/integrations/trycatch.js\n\n\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = (0,esm_global/* getGlobalObject */.R)();\n\n    if (this._options.setTimeout) {\n      (0,object/* fill */.hl)(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      (0,object/* fill */.hl)(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      (0,object/* fill */.hl)(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      (0,object/* fill */.hl)(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n    return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: (0,stacktrace/* getFunctionName */.$P)(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapRAF(original) {\n    return function ( callback) {\n        return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: (0,stacktrace/* getFunctionName */.$P)(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n    return function ( ...args) {\n        var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n                (0,object/* fill */.hl)(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (0,stacktrace/* getFunctionName */.$P)(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = (0,object/* getOriginalFunction */.HK)(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = (0,stacktrace/* getFunctionName */.$P)(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n    var global = (0,esm_global/* getGlobalObject */.R)() ;\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  (0,object/* fill */.hl)(proto, 'addEventListener', function (original)\n\n {\n    return function (\n            \n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n                    fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: (0,stacktrace/* getFunctionName */.$P)(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n                wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: (0,stacktrace/* getFunctionName */.$P)(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  (0,object/* fill */.hl)(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n          ) {\n      return function (\n                \n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\n\n//# sourceMappingURL=trycatch.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\n\n\n\n\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n        for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  (0,instrument/* addInstrumentationHandler */.o)(\n    'error',\n        (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && (0,is/* isString */.HD)(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  (0,instrument/* addInstrumentationHandler */.o)(\n    'unhandledrejection',\n        (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = (0,is/* isPrimitive */.pt)(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = (0,is/* isErrorEvent */.VW)(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = (0,is/* isString */.HD)(url) && url.length > 0 ? url : (0,browser/* getLocationHref */.l)();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  (0,misc/* addExceptionMechanism */.EG)(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = (0,esm_hub/* getCurrentHub */.Gd)();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\n\n//# sourceMappingURL=globalhandlers.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/integrations/linkederrors.js\n\n\n\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = (0,esm_hub/* getCurrentHub */.Gd)().getClient();\n    if (!client) {\n      return;\n    }\n    (0,esm_scope/* addGlobalEventProcessor */.c)((event, hint) => {\n      var self = (0,esm_hub/* getCurrentHub */.Gd)().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !(0,is/* isInstanceOf */.V9)(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!(0,is/* isInstanceOf */.V9)(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\n\n//# sourceMappingURL=linkederrors.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/integrations/dedupe.js\n\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=dedupe.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/integrations/httpcontext.js\n\n\n\nvar httpcontext_global = (0,esm_global/* getGlobalObject */.R)();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    (0,esm_scope/* addGlobalEventProcessor */.c)((event) => {\n      if ((0,esm_hub/* getCurrentHub */.Gd)().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!httpcontext_global.navigator && !httpcontext_global.location && !httpcontext_global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (httpcontext_global.location && httpcontext_global.location.href);\n        const { referrer } = httpcontext_global.document || {};\n        const { userAgent } = httpcontext_global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\n\n//# sourceMappingURL=httpcontext.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/promisebuffer.js\n\n\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return (0,syncpromise/* rejectedSyncPromise */.$2)(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new syncpromise/* SyncPromise */.cW((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void (0,syncpromise/* resolvedSyncPromise */.WD)(item).then(() => {\n                    if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\n\n//# sourceMappingURL=promisebuffer.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/ratelimit.js\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\n\n//# sourceMappingURL=ratelimit.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/core/esm/transports/base.js\n\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return (0,syncpromise/* resolvedSyncPromise */.WD)();\n    }\n\n        var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.error */.kg.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.error */.kg.error('Skipped sending event due to full buffer');\n          recordEnvelopeLoss('queue_overflow');\n          return (0,syncpromise/* resolvedSyncPromise */.WD)();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\n\n//# sourceMappingURL=base.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/transports/fetch.js\n\n\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\n\n//# sourceMappingURL=fetch.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/transports/xhr.js\n\n\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new syncpromise/* SyncPromise */.cW((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\n\n//# sourceMappingURL=xhr.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/browser/esm/sdk.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultIntegrations = [\n  new inboundfilters/* InboundFilters */.QD(),\n  new functiontostring/* FunctionToString */.c(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = (0,esm_global/* getGlobalObject */.R)();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: (0,stacktrace/* stackParserFromStackParserOptions */.Sq)(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || ((0,supports/* supportsFetch */.Ak)() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n        script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction sdk_close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nfunction sdk_wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = (0,esm_global/* getGlobalObject */.R)();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      esm_logger/* logger.warn */.kg.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = (0,esm_hub/* getCurrentHub */.Gd)();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  (0,instrument/* addInstrumentationHandler */.o)('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub((0,esm_hub/* getCurrentHub */.Gd)());\n    }\n  });\n}\n\n\n//# sourceMappingURL=sdk.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/react/esm/sdk.js\n\n\n/**\n * Inits the React SDK\n */\nfunction sdk_init(options) {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk = options._metadata.sdk || {\n    name: 'sentry.javascript.react',\n    packages: [\n      {\n        name: 'npm:@sentry/react',\n        version: SDK_VERSION,\n      },\n    ],\n    version: SDK_VERSION,\n  };\n  init(options);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/hubextensions.js + 1 modules\nvar hubextensions = __webpack_require__(62758);\n;// CONCATENATED MODULE: ./node_modules/@sentry/utils/esm/tracing.js\nvar TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=tracing.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/baggage.js\nvar esm_baggage = __webpack_require__(99181);\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/idletransaction.js\nvar idletransaction = __webpack_require__(16458);\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/utils.js\nvar utils = __webpack_require__(63233);\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/backgroundtab.js\n\n\n\nvar backgroundtab_global = (0,esm_global/* getGlobalObject */.R)();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (backgroundtab_global && backgroundtab_global.document) {\n    backgroundtab_global.document.addEventListener('visibilitychange', () => {\n      var activeTransaction = (0,utils/* getActiveTransaction */.x1)() ;\n      if (backgroundtab_global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          esm_logger/* logger.log */.kg.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      esm_logger/* logger.warn */.kg.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\n\n//# sourceMappingURL=backgroundtab.js.map\n\n// EXTERNAL MODULE: ./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\nvar _nullishCoalesce = __webpack_require__(45375);\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js\nvar bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\n\n//# sourceMappingURL=bindReporter.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nvar generateUniqueID = () => {\n  return `v2-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\n\n//# sourceMappingURL=generateUniqueID.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js\n\n\n\nvar initMetric = (name, value) => {\n  return {\n    name,\n    value: (0,_nullishCoalesce/* _nullishCoalesce */.h)(value, () => ( -1)),\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n  };\n};\n\n\n//# sourceMappingURL=initMetric.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nvar observe = (type, callback) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      // More extensive feature detect needed for Firefox due to:\n      // https://github.com/GoogleChrome/web-vitals/issues/142\n      if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n        return;\n      }\n\n      var po = new PerformanceObserver(l => l.getEntries().map(callback));\n\n      po.observe({ type, buffered: true });\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\n\n//# sourceMappingURL=observe.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar onHidden = (cb, once) => {\n  var onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || (0,esm_global/* getGlobalObject */.R)().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\n\n//# sourceMappingURL=onHidden.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/layout-instability/#sec-layout-shift\n\nvar getCLS = (onReport, reportAllChanges) => {\n  var metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  var entryHandler = (entry) => {\n    // Only count layout shifts without recent user input.\n    // TODO: Figure out why entry can be undefined\n    if (entry && !entry.hadRecentInput) {\n      var firstSessionEntry = sessionEntries[0];\n      var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n      // If the entry occurred less than 1 second after the previous entry and\n      // less than 5 seconds after the first entry in the session, include the\n      // entry in the current session. Otherwise, start a new session.\n      if (\n        sessionValue &&\n        sessionEntries.length !== 0 &&\n        entry.startTime - lastSessionEntry.startTime < 1000 &&\n        entry.startTime - firstSessionEntry.startTime < 5000\n      ) {\n        sessionValue += entry.value;\n        sessionEntries.push(entry);\n      } else {\n        sessionValue = entry.value;\n        sessionEntries = [entry];\n      }\n\n      // If the current session value is larger than the current CLS value,\n      // update CLS and the entries contributing to it.\n      if (sessionValue > metric.value) {\n        metric.value = sessionValue;\n        metric.entries = sessionEntries;\n        if (report) {\n          report();\n        }\n      }\n    }\n  };\n\n  var po = observe('layout-shift', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      report(true);\n    });\n  }\n};\n\n\n//# sourceMappingURL=getCLS.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nvar initHiddenTime = () => {\n  return (0,esm_global/* getGlobalObject */.R)().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\n\nvar trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nvar getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\n\n//# sourceMappingURL=getVisibilityWatcher.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getFID = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('FID');\n  let report;\n\n  var entryHandler = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  var po = observe('first-input', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      po.disconnect();\n    }, true);\n  }\n};\n\n\n//# sourceMappingURL=getFID.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface\n\nvar reportedMetricIDs = {};\n\nvar getLCP = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('LCP');\n  let report;\n\n  var entryHandler = (entry) => {\n    // The startTime attribute returns the value of the renderTime if it is not 0,\n    // and the value of the loadTime otherwise.\n    var value = entry.startTime;\n\n    // If the page was hidden prior to paint time of the entry,\n    // ignore it and mark the metric as final, otherwise add the entry.\n    if (value < visibilityWatcher.firstHiddenTime) {\n      metric.value = value;\n      metric.entries.push(entry);\n    }\n\n    if (report) {\n      report();\n    }\n  };\n\n  var po = observe('largest-contentful-paint', entryHandler);\n\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    var stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        po.takeRecords().map(entryHandler );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n\n\n//# sourceMappingURL=getLCP.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/metrics/utils.js\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n\n//# sourceMappingURL=utils.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/metrics/index.js\n\n\n\n\n\n\n\n\n\nvar metrics_global = (0,esm_global/* getGlobalObject */.R)();\n\nfunction getBrowserPerformanceAPI() {\n  return metrics_global && metrics_global.addEventListener && metrics_global.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n */\nfunction startTrackingWebVitals(reportAllChanges = false) {\n  var performance = getBrowserPerformanceAPI();\n  if (performance && time/* browserPerformanceTimeOrigin */.Z1) {\n    if (performance.mark) {\n      metrics_global.performance.mark('sentry-tracing-init');\n    }\n    _trackCLS();\n    _trackLCP(reportAllChanges);\n    _trackFID();\n  }\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  getCLS(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: 'millisecond' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(reportAllChanges) {\n  getLCP(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = (0,utils/* msToSec */.XL)(time/* browserPerformanceTimeOrigin */.Z1 );\n    var startTime = (0,utils/* msToSec */.XL)(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.lcp'] = { value: timeOrigin + startTime, unit: 'second' };\n    _lcpEntry = entry ;\n  }, reportAllChanges);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  getFID(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = (0,utils/* msToSec */.XL)(time/* browserPerformanceTimeOrigin */.Z1 );\n    var startTime = (0,utils/* msToSec */.XL)(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  var performance = getBrowserPerformanceAPI();\n  if (!performance || !metrics_global.performance.getEntries || !time/* browserPerformanceTimeOrigin */.Z1) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Tracing] Adding & adjusting spans using Performance API');\n  var timeOrigin = (0,utils/* msToSec */.XL)(time/* browserPerformanceTimeOrigin */.Z1);\n\n  var performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n    performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    var startTime = (0,utils/* msToSec */.XL)(entry.startTime);\n    var duration = (0,utils/* msToSec */.XL)(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + (0,utils/* msToSec */.XL)(entry.responseStart);\n        requestStartTimestamp = timeOrigin + (0,utils/* msToSec */.XL)(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        var startTimestamp = _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        var firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fp'] = { value: startTimestamp, unit: 'second' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fcp'] = { value: startTimestamp, unit: 'second' };\n        }\n        break;\n      }\n      case 'resource': {\n        var resourceName = (entry.name ).replace(metrics_global.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'second',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      var oldValue = _measurements[name].value;\n      var measurementTimestamp = timeOrigin + (0,utils/* msToSec */.XL)(oldValue);\n\n      // normalizedValue should be in milliseconds\n      var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      var delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        esm_logger/* logger.log */.kg.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    if (_measurements['mark.fid'] && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: _measurements['mark.fid'].value + (0,utils/* msToSec */.XL)(_measurements['fid'].value),\n        op: 'web.vitals',\n        startTimestamp: _measurements['mark.fid'].value,\n      });\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n    entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  var measureStartTimestamp = timeOrigin + startTime;\n  var measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n    entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  var end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  var start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: (0,_nullishCoalesce/* _nullishCoalesce */.h)(description, () => ( event)),\n    startTimestamp: timeOrigin + (0,utils/* msToSec */.XL)(start),\n    endTimestamp: timeOrigin + (0,utils/* msToSec */.XL)(end),\n  });\n}\n\n/** Create request and response related spans */\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + (0,utils/* msToSec */.XL)(entry.requestStart ),\n    endTimestamp: timeOrigin + (0,utils/* msToSec */.XL)(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + (0,utils/* msToSec */.XL)(entry.responseStart ),\n    endTimestamp: timeOrigin + (0,utils/* msToSec */.XL)(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n    var data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  var startTimestamp = timeOrigin + startTime;\n  var endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  var navigator = metrics_global.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  var connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n\n    if (isMeasurementValue(connection.downlink)) {\n      _measurements['connection.downlink'] = { value: connection.downlink, unit: '' }; // unit is empty string for now, while relay doesn't support download speed units\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', (0,browser/* htmlTreeAsString */.R)(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, (0,browser/* htmlTreeAsString */.R)(source.node)),\n    );\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/request.js\n\n\n\nvar DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nvar defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n    const { traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  // We should cache url -> decision so that we don't have to compute\n  // regexp everytime we create a request.\n  var urlMap = {};\n\n  var defaultShouldCreateSpan = (url) => {\n    if (urlMap[url]) {\n      return urlMap[url];\n    }\n    var origins = tracingOrigins;\n    urlMap[url] =\n      origins.some((origin) => (0,string/* isMatchingPattern */.zC)(url, origin)) &&\n      !(0,string/* isMatchingPattern */.zC)(url, 'sentry_key');\n    return urlMap[url];\n  };\n\n  // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n  // That's why we filter out already unwanted Spans from tracingOrigins\n  let shouldCreateSpan = defaultShouldCreateSpan;\n  if (typeof shouldCreateSpanForRequest === 'function') {\n    shouldCreateSpan = (url) => {\n      return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n    };\n  }\n\n  var spans = {};\n\n  if (traceFetch) {\n    (0,instrument/* addInstrumentationHandler */.o)('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n\n  if (traceXHR) {\n    (0,instrument/* addInstrumentationHandler */.o)('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (!(0,utils/* hasTracingEnabled */.zu)() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n                span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  var activeTransaction = (0,utils/* getActiveTransaction */.x1)();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    var request = (handlerData.args[0] = handlerData.args[0] );\n        var options = (handlerData.args[1] = (handlerData.args[1] ) || {});\n    options.headers = addTracingHeaders(request, span, options);\n  }\n}\n\nfunction addTracingHeaders(\n  request,\n  span,\n  options,\n) {\n  let headers = options.headers;\n\n  if ((0,is/* isInstanceOf */.V9)(request, Request)) {\n    headers = (request ).headers;\n  }\n  var incomingBaggage = span.getBaggage();\n\n  if (headers) {\n        if (typeof headers.append === 'function') {\n            headers.append('sentry-trace', span.toTraceparent());\n            headers.append(esm_baggage/* BAGGAGE_HEADER_NAME */.bU, (0,esm_baggage/* mergeAndSerializeBaggage */.J8)(incomingBaggage, headers.get(esm_baggage/* BAGGAGE_HEADER_NAME */.bU)));\n    } else if (Array.isArray(headers)) {\n      const [, headerBaggageString] = headers.find(([key, _]) => key === esm_baggage/* BAGGAGE_HEADER_NAME */.bU);\n      headers = [\n        ...headers,\n        ['sentry-trace', span.toTraceparent()],\n        [esm_baggage/* BAGGAGE_HEADER_NAME */.bU, (0,esm_baggage/* mergeAndSerializeBaggage */.J8)(incomingBaggage, headerBaggageString)],\n      ];\n    } else {\n      headers = {\n        ...headers,\n        'sentry-trace': span.toTraceparent(),\n                baggage: (0,esm_baggage/* mergeAndSerializeBaggage */.J8)(incomingBaggage, headers.baggage),\n      };\n    }\n  } else {\n    headers = { 'sentry-trace': span.toTraceparent(), baggage: (0,esm_baggage/* mergeAndSerializeBaggage */.J8)(incomingBaggage) };\n  }\n  return headers;\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (\n    !(0,utils/* hasTracingEnabled */.zu)() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  var xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  var activeTransaction = (0,utils/* getActiveTransaction */.x1)();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        var headerBaggageString =\n          handlerData.xhr.getRequestHeader && handlerData.xhr.getRequestHeader(esm_baggage/* BAGGAGE_HEADER_NAME */.bU);\n\n        handlerData.xhr.setRequestHeader(\n          esm_baggage/* BAGGAGE_HEADER_NAME */.bU,\n          (0,esm_baggage/* mergeAndSerializeBaggage */.J8)(span.getBaggage(), headerBaggageString),\n        );\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\n\n//# sourceMappingURL=request.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/router.js\n\n\nvar router_global = (0,esm_global/* getGlobalObject */.R)();\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!router_global || !router_global.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.warn */.kg.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = router_global.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({ name: router_global.location.pathname, op: 'pageload' });\n  }\n\n  if (startTransactionOnLocationChange) {\n    (0,instrument/* addInstrumentationHandler */.o)('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({ name: router_global.location.pathname, op: 'navigation' });\n      }\n    });\n  }\n}\n\n\n//# sourceMappingURL=router.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/browser/browsertracing.js\n\n\n\n\n\n\n\n\n\nvar BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nvar DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: idletransaction/* DEFAULT_IDLE_TIMEOUT */.nT,\n  finalTimeout: idletransaction/* DEFAULT_FINAL_TIMEOUT */.mg,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {;BrowserTracing.prototype.__init.call(this);\n    let tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n    // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n    if (_options) {\n      if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n        tracingOrigins = _options.tracingOrigins;\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && (this._emitOptionsWarning = true);\n      }\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n      tracingOrigins,\n    };\n\n    const { _metricOptions } = this.options;\n    startTrackingWebVitals(_metricOptions && _metricOptions._reportAllChanges);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    if (this._emitOptionsWarning) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        esm_logger/* logger.warn */.kg.warn(\n          '[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n        );\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        esm_logger/* logger.warn */.kg.warn(\n          `[Tracing] We added a reasonable default for you: ${defaultRequestInstrumentationOptions.tracingOrigins}`,\n        );\n    }\n\n        const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracingOrigins,\n      shouldCreateSpanForRequest,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    instrumentOutgoingRequests({ traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        esm_logger/* logger.warn */.kg.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n        const { beforeNavigate, idleTimeout, finalTimeout } = this.options;\n\n    var parentContextFromHeader = context.op === 'pageload' ? extractTraceDataFromMetaTags() : undefined;\n\n    var expandedContext = {\n      ...context,\n      ...parentContextFromHeader,\n      trimEnd: true,\n    };\n    var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    var finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        esm_logger/* logger.log */.kg.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && esm_logger/* logger.log */.kg.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    var hub = this._getCurrentHub();\n    const { location } = (0,esm_global/* getGlobalObject */.R)() ;\n\n    var idleTransaction = (0,hubextensions/* startIdleTransaction */.lb)(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      addPerformanceEntries(transaction);\n      transaction.setTag(\n        'sentry_reportAllChanges',\n        Boolean(this.options._metricOptions && this.options._metricOptions._reportAllChanges),\n      );\n    });\n\n    return idleTransaction ;\n  }\n}\n\n/**\n * Gets transaction context data from `sentry-trace` and `baggage` <meta> tags.\n * @returns Transaction context data or undefined neither tag exists or has valid data\n */\nfunction extractTraceDataFromMetaTags() {\n  var sentrytraceValue = getMetaContent('sentry-trace');\n  var baggageValue = getMetaContent('baggage');\n\n  var sentrytraceData = sentrytraceValue ? extractTraceparentData(sentrytraceValue) : undefined;\n  var baggage = baggageValue ? (0,esm_baggage/* parseBaggageString */.LD)(baggageValue) : undefined;\n\n  // TODO more extensive checks for baggage validity/emptyness?\n  if (sentrytraceData || baggage) {\n    return {\n      ...(sentrytraceData && sentrytraceData),\n      ...(baggage && { metadata: { baggage } }),\n    };\n  }\n\n  return undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  var globalObject = (0,esm_global/* getGlobalObject */.R)();\n\n  // DOM/querySelector is not available in all environments\n  if (globalObject.document && globalObject.document.querySelector) {\n    var el = globalObject.document.querySelector(`meta[name=${metaName}]`);\n    return el ? el.getAttribute('content') : null;\n  } else {\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=browsertracing.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/tracing/esm/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  (0,hubextensions/* addExtensionMethods */.ro)();\n}\n//# sourceMappingURL=index.js.map\n\n// EXTERNAL MODULE: ./node_modules/next/router.js\nvar router = __webpack_require__(11163);\nvar router_default = /*#__PURE__*/__webpack_require__.n(router);\n;// CONCATENATED MODULE: ./node_modules/@sentry/nextjs/esm/performance/client.js\n\n\n\nvar client_global = (0,esm_global/* getGlobalObject */.R)();\n\nvar DEFAULT_TAGS = {\n  'routing.instrumentation': 'next-router',\n} ;\n\nlet activeTransaction = undefined;\nlet prevTransactionName = undefined;\nlet startTransaction = undefined;\n\n/**\n * Creates routing instrumention for Next Router. Only supported for\n * client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction nextRouterInstrumentation(\n  startTransactionCb,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  startTransaction = startTransactionCb;\n  router_default().ready(() => {\n    // We can only start the pageload transaction when we have access to the parameterized\n    // route name. Setting the transaction name after the transaction is started could lead\n    // to possible race conditions with the router, so this approach was taken.\n    if (startTransactionOnPageLoad) {\n      prevTransactionName = (router_default()).route !== null ? (0,misc/* stripUrlQueryAndFragment */.rt)((router_default()).route) : client_global.location.pathname;\n      activeTransaction = startTransactionCb({\n        name: prevTransactionName,\n        op: 'pageload',\n        tags: DEFAULT_TAGS,\n      });\n    }\n\n    // Spans that aren't attached to any transaction are lost; so if transactions aren't\n    // created (besides potentially the onpageload transaction), no need to wrap the router.\n    if (!startTransactionOnLocationChange) return;\n\n    // `withRouter` uses `useRouter` underneath:\n    // https://github.com/vercel/next.js/blob/de42719619ae69fbd88e445100f15701f6e1e100/packages/next/client/with-router.tsx#L21\n    // Router events also use the router:\n    // https://github.com/vercel/next.js/blob/de42719619ae69fbd88e445100f15701f6e1e100/packages/next/client/router.ts#L92\n    // `Router.changeState` handles the router state changes, so it may be enough to only wrap it\n    // (instead of wrapping all of the Router's functions).\n    var routerPrototype = Object.getPrototypeOf((router_default()).router);\n    (0,object/* fill */.hl)(routerPrototype, 'changeState', changeStateWrapper);\n  });\n}\n\n/**\n * Wraps Router.changeState()\n * https://github.com/vercel/next.js/blob/da97a18dafc7799e63aa7985adc95f213c2bf5f3/packages/next/next-server/lib/router/router.ts#L1204\n * Start a navigation transaction every time the router changes state.\n */\nfunction changeStateWrapper(originalChangeStateWrapper) {\n  var wrapper = function (\n    \n    method,\n    // The parameterized url, ex. posts/[id]/[comment]\n    url,\n    // The actual url, ex. posts/85/my-comment\n    as,\n    options,\n    // At the moment there are no additional arguments (meaning the rest parameter is empty).\n    // This is meant to protect from future additions to Next.js API, especially since this is an\n    // internal API.\n    ...args\n  ) {\n    var newTransactionName = (0,misc/* stripUrlQueryAndFragment */.rt)(url);\n    // do not start a transaction if it's from the same page\n    if (startTransaction !== undefined && prevTransactionName !== newTransactionName) {\n      if (activeTransaction) {\n        activeTransaction.finish();\n      }\n      var tags = {\n        ...DEFAULT_TAGS,\n        method,\n        ...options,\n      };\n      if (prevTransactionName) {\n        tags.from = prevTransactionName;\n      }\n      prevTransactionName = newTransactionName;\n      activeTransaction = startTransaction({\n        name: prevTransactionName,\n        op: 'navigation',\n        tags,\n      });\n    }\n    return originalChangeStateWrapper.call(this, method, url, as, options, ...args);\n  };\n  return wrapper;\n}\n\n\n//# sourceMappingURL=client.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/nextjs/esm/utils/metadata.js\n\n\nvar PACKAGE_NAME_PREFIX = 'npm:@sentry/';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n * @param options sdk options object that gets mutated\n * @param names list of package names\n */\nfunction buildMetadata(options, names) {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk =\n    options._metadata.sdk ||\n    ({\n      name: 'sentry.javascript.nextjs',\n      packages: names.map(name => ({\n        name: `${PACKAGE_NAME_PREFIX}${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    } );\n}\n\n\n//# sourceMappingURL=metadata.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/nextjs/esm/utils/userIntegrations.js\n/**\n * Recursively traverses an object to update an existing nested key.\n * Note: The provided key path must include existing properties,\n * the function will not create objects while traversing.\n *\n * @param obj An object to update\n * @param value The value to update the nested key with\n * @param keyPath The path to the key to update ex. fizz.buzz.foo\n */\nfunction setNestedKey(obj, keyPath, value) {\n  // Ex. foo.bar.zoop will extract foo and bar.zoop\n  var match = keyPath.match(/([a-z]+)\\.(.*)/i);\n  if (match === null) {\n    obj[keyPath] = value;\n  } else {\n    setNestedKey(obj[match[1]], match[2], value);\n  }\n}\n\n/**\n * Retrieves the patched integrations with the provided integration.\n *\n * The integration must be present in the final user integrations, and they are compared\n * by integration name. If the user has defined one, there's nothing to patch; if not,\n * the provided integration is added.\n *\n * @param integration The integration to patch, if necessary.\n * @param userIntegrations Integrations defined by the user.\n * @param options options to update for a particular integration\n * @returns Final integrations, patched if necessary.\n */\nfunction addIntegration(\n  integration,\n  userIntegrations,\n  options = {},\n) {\n  if (Array.isArray(userIntegrations)) {\n    return addIntegrationToArray(integration, userIntegrations, options);\n  } else {\n    return addIntegrationToFunction(integration, userIntegrations, options);\n  }\n}\n\nfunction addIntegrationToArray(\n  integration,\n  userIntegrations,\n  options,\n) {\n  let includesName = false;\n    for (let x = 0; x < userIntegrations.length; x++) {\n    if (userIntegrations[x].name === integration.name) {\n      includesName = true;\n    }\n\n    var op = options[userIntegrations[x].name];\n    if (op) {\n      setNestedKey(userIntegrations[x], op.keyPath, op.value);\n    }\n  }\n\n  if (includesName) {\n    return userIntegrations;\n  }\n  return [...userIntegrations, integration];\n}\n\nfunction addIntegrationToFunction(\n  integration,\n  userIntegrationsFunc,\n  options,\n) {\n  var wrapper = defaultIntegrations => {\n    var userFinalIntegrations = userIntegrationsFunc(defaultIntegrations);\n    return addIntegrationToArray(integration, userFinalIntegrations, options);\n  };\n  return wrapper;\n}\n\n\n//# sourceMappingURL=userIntegrations.js.map\n\n;// CONCATENATED MODULE: ./node_modules/@sentry/nextjs/esm/index.client.js\n\n\n\n\n\n\n\n\n\n\n// Treeshakable guard to remove all code related to tracing\n\n/** Inits the Sentry NextJS SDK on the browser with the React SDK. */\nfunction index_client_init(options) {\n  buildMetadata(options, ['nextjs', 'react']);\n  options.environment = options.environment || \"production\";\n\n  let integrations = options.integrations;\n\n  // Guard below evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\"\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    // Only add BrowserTracing if a tracesSampleRate or tracesSampler is set\n    if (options.tracesSampleRate !== undefined || options.tracesSampler !== undefined) {\n      integrations = createClientIntegrations(options.integrations);\n    }\n  }\n\n  sdk_init({\n    ...options,\n    integrations,\n  });\n\n  (0,esm_exports/* configureScope */.e)(scope => {\n    scope.setTag('runtime', 'browser');\n    var filterTransactions = event =>\n      event.type === 'transaction' && event.transaction === '/404' ? null : event;\n    filterTransactions.id = 'NextClient404Filter';\n    scope.addEventProcessor(filterTransactions);\n  });\n}\n\nfunction createClientIntegrations(integrations) {\n  var defaultBrowserTracingIntegration = new BrowserTracing({\n    tracingOrigins: [...defaultRequestInstrumentationOptions.tracingOrigins, /^(api\\/)/],\n    routingInstrumentation: nextRouterInstrumentation,\n  });\n\n  if (integrations) {\n    return addIntegration(defaultBrowserTracingIntegration, integrations, {\n      BrowserTracing: { keyPath: 'options.routingInstrumentation', value: nextRouterInstrumentation },\n    });\n  } else {\n    return [defaultBrowserTracingIntegration];\n  }\n}\n\n\n//# sourceMappingURL=index.client.js.map\n\n;// CONCATENATED MODULE: ./sentry.client.config.js\n/* provided dependency */ var process = __webpack_require__(83454);\n// This file configures the initialization of Sentry on the browser.\n// The config you add here will be used whenever a page is visited.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nconst SENTRY_DSN = process.env.SENTRY_DSN || \"\";\nindex_client_init({\n    dsn:  true ? SENTRY_DSN : 0,\n    // Adjust this value in production, or use tracesSampler for greater control\n    tracesSampleRate: 1.0\n});\n\n\n/***/ }),\n\n/***/ 16774:\n/***/ (function() {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 77663:\n/***/ (function(module) {\n\nvar __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();\n\n/***/ }),\n\n/***/ 9008:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(83121)\n\n\n/***/ }),\n\n/***/ 11163:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(80880)\n\n\n/***/ }),\n\n/***/ 46747:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryClient\": function() { return /* reexport safe */ _queryClient__WEBPACK_IMPORTED_MODULE_0__.S; }\n/* harmony export */ });\n/* harmony import */ var _queryClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56538);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86755);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__, \"Hydrate\")) __webpack_require__.d(__webpack_exports__, { \"Hydrate\": function() { return _types__WEBPACK_IMPORTED_MODULE_1__.Hydrate; } });\n/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__, \"QueryClientProvider\")) __webpack_require__.d(__webpack_exports__, { \"QueryClientProvider\": function() { return _types__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider; } });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Types\n\n\n\n/***/ }),\n\n/***/ 41909:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"E\": function() { return /* binding */ setLogger; },\n/* harmony export */   \"j\": function() { return /* binding */ getLogger; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52288);\n // TYPES\n\n// FUNCTIONS\nvar logger = console || {\n  error: _utils__WEBPACK_IMPORTED_MODULE_0__/* .noop */ .ZT,\n  warn: _utils__WEBPACK_IMPORTED_MODULE_0__/* .noop */ .ZT,\n  log: _utils__WEBPACK_IMPORTED_MODULE_0__/* .noop */ .ZT\n};\nfunction getLogger() {\n  return logger;\n}\nfunction setLogger(newLogger) {\n  logger = newLogger;\n}\n\n/***/ }),\n\n/***/ 101:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"V\": function() { return /* binding */ notifyManager; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52288);\n // TYPES\n\n// CLASS\nvar NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .scheduleMicrotask */ .A4)(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .scheduleMicrotask */ .A4)(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\n\nvar notifyManager = new NotifyManager();\n\n/***/ }),\n\n/***/ 56538:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"S\": function() { return /* binding */ QueryClient; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(87462);\n// EXTERNAL MODULE: ./node_modules/react-query/es/core/utils.js\nvar utils = __webpack_require__(52288);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js + 1 modules\nvar inheritsLoose = __webpack_require__(75068);\n// EXTERNAL MODULE: ./node_modules/react-query/es/core/notifyManager.js\nvar notifyManager = __webpack_require__(101);\n// EXTERNAL MODULE: ./node_modules/react-query/es/core/logger.js\nvar logger = __webpack_require__(41909);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/subscribable.js\nvar Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    this.listeners = [];\n  }\n\n  var _proto = Subscribable.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    var callback = listener || function () {\n      return undefined;\n    };\n\n    this.listeners.push(callback);\n    this.onSubscribe();\n    return function () {\n      _this.listeners = _this.listeners.filter(function (x) {\n        return x !== callback;\n      });\n\n      _this.onUnsubscribe();\n    };\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return this.listeners.length > 0;\n  };\n\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\n  };\n\n  return Subscribable;\n}();\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/focusManager.js\n\n\n\n\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\n  (0,inheritsLoose/* default */.Z)(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this.setFocused(focused);\n      } else {\n        _this.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!utils/* isServer */.sk && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onFocus) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      });\n    }\n  };\n\n  return FocusManager;\n}(Subscribable);\n\nvar focusManager = new FocusManager();\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/onlineManager.js\n\n\n\n\nvar OnlineManager = /*#__PURE__*/function (_Subscribable) {\n  (0,inheritsLoose/* default */.Z)(OnlineManager, _Subscribable);\n\n  function OnlineManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = OnlineManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (online) {\n      if (typeof online === 'boolean') {\n        _this.setOnline(online);\n      } else {\n        _this.onOnline();\n      }\n    });\n  };\n\n  _proto.setOnline = function setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isOnline = function isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!utils/* isServer */.sk && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onOnline) {\n        var listener = function listener() {\n          return onOnline();\n        }; // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      });\n    }\n  };\n\n  return OnlineManager;\n}(Subscribable);\n\nvar onlineManager = new OnlineManager();\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/retryer.js\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nfunction isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nvar CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nvar Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.abort = config.abort;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  var reject = function reject(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      if (!_this.isResolved) {\n        reject(new CancelledError(cancelOptions));\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\n\n        if (isCancelable(promiseOrValue)) {\n          try {\n            promiseOrValue.cancel();\n          } catch (_unused) {}\n        }\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      (0,utils/* sleep */.Gh)(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/query.js\n\n\n\n\n // TYPES\n\n// CLASS\nvar Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = (0,esm_extends/* default */.Z)({}, this.defaultOptions, options);\n    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if ((0,utils/* isValidTimeout */.PN)(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    clearTimeout(this.gcTimeout);\n    this.gcTimeout = undefined;\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length && !this.state.isFetching) {\n      this.cache.remove(this);\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = (0,utils/* functionalUpdate */.SE)(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = (0,utils/* replaceEqualDeep */.Q$)(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(utils/* noop */.ZT).catch(utils/* noop */.ZT) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,utils/* timeUntilStale */.Kp)(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.getObserversCount = function getObserversCount() {\n    return this.observers.length;\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions,\n        _abortController$abor;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        // Return current promise if we are already fetching\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    var queryKey = (0,utils/* ensureQueryKeyArray */.mc)(this.queryKey);\n    var abortController = (0,utils/* getAbortController */.G9)(); // Create query function context\n\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    };\n    Object.defineProperty(queryFnContext, 'signal', {\n      enumerable: true,\n      get: function get() {\n        if (abortController) {\n          _this2.abortSignalConsumed = true;\n          return abortController.signal;\n        }\n\n        return undefined;\n      }\n    }); // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      if (!_this2.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      _this2.abortSignalConsumed = false;\n      return _this2.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn,\n      meta: this.meta\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Notify cache callback\n\n\n        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error\n\n          (0,logger/* getLogger */.j)().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return (0,esm_extends/* default */.Z)({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return (0,esm_extends/* default */.Z)({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return (0,esm_extends/* default */.Z)({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return (0,esm_extends/* default */.Z)({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false,\n          status: !state.dataUpdatedAt ? 'loading' : state.status\n        });\n\n      case 'success':\n        return (0,esm_extends/* default */.Z)({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return (0,esm_extends/* default */.Z)({}, this.revertState);\n        }\n\n        return (0,esm_extends/* default */.Z)({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return (0,esm_extends/* default */.Z)({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return (0,esm_extends/* default */.Z)({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/queryCache.js\n\n\n\n\n\n// CLASS\nvar QueryCache = /*#__PURE__*/function (_Subscribable) {\n  (0,inheritsLoose/* default */.Z)(QueryCache, _Subscribable);\n\n  function QueryCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.queries = [];\n    _this.queriesMap = {};\n    return _this;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var _options$queryHash;\n\n    var queryKey = options.queryKey;\n    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0,utils/* hashQueryKeyByOptions */.Rm)(queryKey, options);\n    var query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey: queryKey,\n        queryHash: queryHash,\n        options: client.defaultQueryOptions(options),\n        state: state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n        meta: options.meta\n      });\n      this.add(query);\n    }\n\n    return query;\n  };\n\n  _proto.add = function add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'queryAdded',\n        query: query\n      });\n    }\n  };\n\n  _proto.remove = function remove(query) {\n    var queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(function (x) {\n        return x !== query;\n      });\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'queryRemoved',\n        query: query\n      });\n    }\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this2.queries.forEach(function (query) {\n        _this2.remove(query);\n      });\n    });\n  };\n\n  _proto.get = function get(queryHash) {\n    return this.queriesMap[queryHash];\n  };\n\n  _proto.getAll = function getAll() {\n    return this.queries;\n  };\n\n  _proto.find = function find(arg1, arg2) {\n    var _parseFilterArgs = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(function (query) {\n      return (0,utils/* matchQuery */._x)(filters, query);\n    });\n  };\n\n  _proto.findAll = function findAll(arg1, arg2) {\n    var _parseFilterArgs2 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    return filters ? this.queries.filter(function (query) {\n      return (0,utils/* matchQuery */._x)(filters, query);\n    }) : this.queries;\n  };\n\n  _proto.notify = function notify(event) {\n    var _this3 = this;\n\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(event);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this4 = this;\n\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this4.queries.forEach(function (query) {\n        query.onFocus();\n      });\n    });\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this5 = this;\n\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this5.queries.forEach(function (query) {\n        query.onOnline();\n      });\n    });\n  };\n\n  return QueryCache;\n}(Subscribable);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/mutation.js\n\n\n\n\n // TYPES\n\n// CLASS\nvar Mutation = /*#__PURE__*/function () {\n  function Mutation(config) {\n    this.options = (0,esm_extends/* default */.Z)({}, config.defaultOptions, config.options);\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n  }\n\n  var _proto = Mutation.prototype;\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n  };\n\n  _proto.cancel = function cancel() {\n    if (this.retryer) {\n      this.retryer.cancel();\n      return this.retryer.promise.then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.continue = function _continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  };\n\n  _proto.execute = function execute() {\n    var _this = this;\n\n    var data;\n    var restored = this.state.status === 'loading';\n    var promise = Promise.resolve();\n\n    if (!restored) {\n      this.dispatch({\n        type: 'loading',\n        variables: this.options.variables\n      });\n      promise = promise.then(function () {\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\n      }).then(function (context) {\n        if (context !== _this.state.context) {\n          _this.dispatch({\n            type: 'loading',\n            context: context,\n            variables: _this.state.variables\n          });\n        }\n      });\n    }\n\n    return promise.then(function () {\n      return _this.executeMutation();\n    }).then(function (result) {\n      data = result; // Notify cache callback\n\n      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);\n    }).then(function () {\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\n    }).then(function () {\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\n    }).then(function () {\n      _this.dispatch({\n        type: 'success',\n        data: data\n      });\n\n      return data;\n    }).catch(function (error) {\n      // Notify cache callback\n      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this); // Log error\n\n      (0,logger/* getLogger */.j)().error(error);\n      return Promise.resolve().then(function () {\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        _this.dispatch({\n          type: 'error',\n          error: error\n        });\n\n        throw error;\n      });\n    });\n  };\n\n  _proto.executeMutation = function executeMutation() {\n    var _this2 = this,\n        _this$options$retry;\n\n    this.retryer = new Retryer({\n      fn: function fn() {\n        if (!_this2.options.mutationFn) {\n          return Promise.reject('No mutationFn found');\n        }\n\n        return _this2.options.mutationFn(_this2.state.variables);\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n      retryDelay: this.options.retryDelay\n    });\n    return this.retryer.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = reducer(this.state, action);\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onMutationUpdate(action);\n      });\n\n      _this3.mutationCache.notify(_this3);\n    });\n  };\n\n  return Mutation;\n}();\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'failed':\n      return (0,esm_extends/* default */.Z)({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case 'pause':\n      return (0,esm_extends/* default */.Z)({}, state, {\n        isPaused: true\n      });\n\n    case 'continue':\n      return (0,esm_extends/* default */.Z)({}, state, {\n        isPaused: false\n      });\n\n    case 'loading':\n      return (0,esm_extends/* default */.Z)({}, state, {\n        context: action.context,\n        data: undefined,\n        error: null,\n        isPaused: false,\n        status: 'loading',\n        variables: action.variables\n      });\n\n    case 'success':\n      return (0,esm_extends/* default */.Z)({}, state, {\n        data: action.data,\n        error: null,\n        status: 'success',\n        isPaused: false\n      });\n\n    case 'error':\n      return (0,esm_extends/* default */.Z)({}, state, {\n        data: undefined,\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isPaused: false,\n        status: 'error'\n      });\n\n    case 'setState':\n      return (0,esm_extends/* default */.Z)({}, state, action.state);\n\n    default:\n      return state;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/mutationCache.js\n\n\n\n\n // TYPES\n\n// CLASS\nvar MutationCache = /*#__PURE__*/function (_Subscribable) {\n  (0,inheritsLoose/* default */.Z)(MutationCache, _Subscribable);\n\n  function MutationCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n\n  var _proto = MutationCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state: state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  };\n\n  _proto.add = function add(mutation) {\n    this.mutations.push(mutation);\n    this.notify(mutation);\n  };\n\n  _proto.remove = function remove(mutation) {\n    this.mutations = this.mutations.filter(function (x) {\n      return x !== mutation;\n    });\n    mutation.cancel();\n    this.notify(mutation);\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this2.mutations.forEach(function (mutation) {\n        _this2.remove(mutation);\n      });\n    });\n  };\n\n  _proto.getAll = function getAll() {\n    return this.mutations;\n  };\n\n  _proto.find = function find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(function (mutation) {\n      return (0,utils/* matchMutation */.X7)(filters, mutation);\n    });\n  };\n\n  _proto.findAll = function findAll(filters) {\n    return this.mutations.filter(function (mutation) {\n      return (0,utils/* matchMutation */.X7)(filters, mutation);\n    });\n  };\n\n  _proto.notify = function notify(mutation) {\n    var _this3 = this;\n\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(mutation);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.resumePausedMutations();\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.resumePausedMutations();\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    var pausedMutations = this.mutations.filter(function (x) {\n      return x.state.isPaused;\n    });\n    return notifyManager/* notifyManager.batch */.V.batch(function () {\n      return pausedMutations.reduce(function (promise, mutation) {\n        return promise.then(function () {\n          return mutation.continue().catch(utils/* noop */.ZT);\n        });\n      }, Promise.resolve());\n    });\n  };\n\n  return MutationCache;\n}(Subscribable);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/infiniteQueryBehavior.js\n\n\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        var refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        var fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var abortController = (0,utils/* getAbortController */.G9)();\n        var abortSignal = abortController == null ? void 0 : abortController.signal;\n        var newPageParams = oldPageParams;\n        var cancelled = false; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        };\n\n        var buildNewPages = function buildNewPages(pages, param, page, previous) {\n          newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n          return previous ? [page].concat(pages) : [].concat(pages, [page]);\n        }; // Create function to fetch a page\n\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            signal: abortSignal,\n            pageParam: param,\n            meta: context.meta\n          };\n          var queryFnResult = queryFn(queryFnContext);\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            return buildNewPages(pages, param, page, previous);\n          });\n\n          if (isCancelable(queryFnResult)) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = queryFnResult.cancel;\n          }\n\n          return promise;\n        };\n\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n            var manual = typeof pageParam !== 'undefined';\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n            promise = fetchPage(oldPages, manual, param);\n          } // Fetch previous page?\n          else if (isFetchingPreviousPage) {\n              var _manual = typeof pageParam !== 'undefined';\n\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n\n              promise = fetchPage(oldPages, _manual, _param, true);\n            } // Refetch pages\n            else {\n                (function () {\n                  newPageParams = [];\n                  var manual = typeof context.options.getNextPageParam === 'undefined';\n                  var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n                  promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n                  var _loop = function _loop(i) {\n                    promise = promise.then(function (pages) {\n                      var shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n                      if (shouldFetchNextPage) {\n                        var _param2 = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n\n                        return fetchPage(pages, manual, _param2);\n                      }\n\n                      return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n                    });\n                  };\n\n                  for (var i = 1; i < oldPages.length; i++) {\n                    _loop(i);\n                  }\n                })();\n              }\n\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n        var finalPromiseAsAny = finalPromise;\n\n        finalPromiseAsAny.cancel = function () {\n          cancelled = true;\n          abortController == null ? void 0 : abortController.abort();\n\n          if (isCancelable(promise)) {\n            promise.cancel();\n          }\n        };\n\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/queryClient.js\n\n\n\n\n\n\n\n\n// CLASS\nvar QueryClient = /*#__PURE__*/function () {\n  function QueryClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n  }\n\n  var _proto = QueryClient.prototype;\n\n  _proto.mount = function mount() {\n    var _this = this;\n\n    this.unsubscribeFocus = focusManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onFocus();\n\n        _this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onOnline();\n\n        _this.queryCache.onOnline();\n      }\n    });\n  };\n\n  _proto.unmount = function unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n  };\n\n  _proto.isFetching = function isFetching(arg1, arg2) {\n    var _parseFilterArgs = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    filters.fetching = true;\n    return this.queryCache.findAll(filters).length;\n  };\n\n  _proto.isMutating = function isMutating(filters) {\n    return this.mutationCache.findAll((0,esm_extends/* default */.Z)({}, filters, {\n      fetching: true\n    })).length;\n  };\n\n  _proto.getQueryData = function getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  };\n\n  _proto.getQueriesData = function getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref) {\n      var queryKey = _ref.queryKey,\n          state = _ref.state;\n      var data = state.data;\n      return [queryKey, data];\n    });\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, options) {\n    var parsedOptions = (0,utils/* parseQueryArgs */._v)(queryKey);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(updater, options);\n  };\n\n  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {\n    var _this2 = this;\n\n    return notifyManager/* notifyManager.batch */.V.batch(function () {\n      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref2) {\n        var queryKey = _ref2.queryKey;\n        return [queryKey, _this2.setQueryData(queryKey, updater, options)];\n      });\n    });\n  };\n\n  _proto.getQueryState = function getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  };\n\n  _proto.removeQueries = function removeQueries(arg1, arg2) {\n    var _parseFilterArgs2 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    var queryCache = this.queryCache;\n    notifyManager/* notifyManager.batch */.V.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        queryCache.remove(query);\n      });\n    });\n  };\n\n  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {\n    var _this3 = this;\n\n    var _parseFilterArgs3 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),\n        filters = _parseFilterArgs3[0],\n        options = _parseFilterArgs3[1];\n\n    var queryCache = this.queryCache;\n\n    var refetchFilters = (0,esm_extends/* default */.Z)({}, filters, {\n      active: true\n    });\n\n    return notifyManager/* notifyManager.batch */.V.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        query.reset();\n      });\n      return _this3.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {\n    var _this4 = this;\n\n    var _parseFilterArgs4 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),\n        filters = _parseFilterArgs4[0],\n        _parseFilterArgs4$ = _parseFilterArgs4[1],\n        cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    var promises = notifyManager/* notifyManager.batch */.V.batch(function () {\n      return _this4.queryCache.findAll(filters).map(function (query) {\n        return query.cancel(cancelOptions);\n      });\n    });\n    return Promise.all(promises).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  };\n\n  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {\n    var _ref3,\n        _filters$refetchActiv,\n        _filters$refetchInact,\n        _this5 = this;\n\n    var _parseFilterArgs5 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),\n        filters = _parseFilterArgs5[0],\n        options = _parseFilterArgs5[1];\n\n    var refetchFilters = (0,esm_extends/* default */.Z)({}, filters, {\n      // if filters.refetchActive is not provided and filters.active is explicitly false,\n      // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries\n      active: (_ref3 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref3 : true,\n      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false\n    });\n\n    return notifyManager/* notifyManager.batch */.V.batch(function () {\n      _this5.queryCache.findAll(filters).forEach(function (query) {\n        query.invalidate();\n      });\n\n      return _this5.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {\n    var _this6 = this;\n\n    var _parseFilterArgs6 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),\n        filters = _parseFilterArgs6[0],\n        options = _parseFilterArgs6[1];\n\n    var promises = notifyManager/* notifyManager.batch */.V.batch(function () {\n      return _this6.queryCache.findAll(filters).map(function (query) {\n        return query.fetch(undefined, (0,esm_extends/* default */.Z)({}, options, {\n          meta: {\n            refetchPage: filters == null ? void 0 : filters.refetchPage\n          }\n        }));\n      });\n    });\n    var promise = Promise.all(promises).then(utils/* noop */.ZT);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(utils/* noop */.ZT);\n    }\n\n    return promise;\n  };\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    var query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  };\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  };\n\n  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {\n    var parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  };\n\n  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  };\n\n  _proto.cancelMutations = function cancelMutations() {\n    var _this7 = this;\n\n    var promises = notifyManager/* notifyManager.batch */.V.batch(function () {\n      return _this7.mutationCache.getAll().map(function (mutation) {\n        return mutation.cancel();\n      });\n    });\n    return Promise.all(promises).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    return this.getMutationCache().resumePausedMutations();\n  };\n\n  _proto.executeMutation = function executeMutation(options) {\n    return this.mutationCache.build(this, options).execute();\n  };\n\n  _proto.getQueryCache = function getQueryCache() {\n    return this.queryCache;\n  };\n\n  _proto.getMutationCache = function getMutationCache() {\n    return this.mutationCache;\n  };\n\n  _proto.getDefaultOptions = function getDefaultOptions() {\n    return this.defaultOptions;\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {\n    var result = this.queryDefaults.find(function (x) {\n      return (0,utils/* hashQueryKey */.yF)(queryKey) === (0,utils/* hashQueryKey */.yF)(x.queryKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey: queryKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {\n    var _this$queryDefaults$f;\n\n    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {\n      return (0,utils/* partialMatchKey */.to)(queryKey, x.queryKey);\n    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;\n  };\n\n  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {\n    var result = this.mutationDefaults.find(function (x) {\n      return (0,utils/* hashQueryKey */.yF)(mutationKey) === (0,utils/* hashQueryKey */.yF)(x.mutationKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey: mutationKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {\n    var _this$mutationDefault;\n\n    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {\n      return (0,utils/* partialMatchKey */.to)(mutationKey, x.mutationKey);\n    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;\n  };\n\n  _proto.defaultQueryOptions = function defaultQueryOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    var defaultedOptions = (0,esm_extends/* default */.Z)({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {\n      _defaulted: true\n    });\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = (0,utils/* hashQueryKeyByOptions */.Rm)(defaultedOptions.queryKey, defaultedOptions);\n    }\n\n    return defaultedOptions;\n  };\n\n  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {\n    return this.defaultQueryOptions(options);\n  };\n\n  _proto.defaultMutationOptions = function defaultMutationOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    return (0,esm_extends/* default */.Z)({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {\n      _defaulted: true\n    });\n  };\n\n  _proto.clear = function clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  };\n\n  return QueryClient;\n}();\n\n/***/ }),\n\n/***/ 86755:\n/***/ (function() {\n\n\n\n/***/ }),\n\n/***/ 52288:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A4\": function() { return /* binding */ scheduleMicrotask; },\n/* harmony export */   \"G9\": function() { return /* binding */ getAbortController; },\n/* harmony export */   \"Gh\": function() { return /* binding */ sleep; },\n/* harmony export */   \"I6\": function() { return /* binding */ parseFilterArgs; },\n/* harmony export */   \"Kp\": function() { return /* binding */ timeUntilStale; },\n/* harmony export */   \"PN\": function() { return /* binding */ isValidTimeout; },\n/* harmony export */   \"Q$\": function() { return /* binding */ replaceEqualDeep; },\n/* harmony export */   \"Rm\": function() { return /* binding */ hashQueryKeyByOptions; },\n/* harmony export */   \"SE\": function() { return /* binding */ functionalUpdate; },\n/* harmony export */   \"X7\": function() { return /* binding */ matchMutation; },\n/* harmony export */   \"ZT\": function() { return /* binding */ noop; },\n/* harmony export */   \"_v\": function() { return /* binding */ parseQueryArgs; },\n/* harmony export */   \"_x\": function() { return /* binding */ matchQuery; },\n/* harmony export */   \"mc\": function() { return /* binding */ ensureQueryKeyArray; },\n/* harmony export */   \"sk\": function() { return /* binding */ isServer; },\n/* harmony export */   \"to\": function() { return /* binding */ partialMatchKey; },\n/* harmony export */   \"yF\": function() { return /* binding */ hashQueryKey; }\n/* harmony export */ });\n/* unused harmony exports difference, replaceAt, parseMutationArgs, parseMutationFilterArgs, mapQueryStatusFilter, stableValueHash, partialDeepEqual, shallowEqualObjects, isPlainObject, isQueryKey, isError */\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87462);\n\n// TYPES\n// UTILS\nvar isServer = typeof window === 'undefined';\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nfunction replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)({}, arg2, {\n    queryKey: arg1\n  });\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? _extends({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nfunction mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nfunction matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nfunction hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nfunction stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}\n\n/***/ }),\n\n/***/ 88767:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hydrate\": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.Hydrate; },\n/* harmony export */   \"QueryClient\": function() { return /* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.QueryClient; },\n/* harmony export */   \"QueryClientProvider\": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider; }\n/* harmony export */ });\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46747);\n/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, \"Hydrate\")) __webpack_require__.d(__webpack_exports__, { \"Hydrate\": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.Hydrate; } });\n/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, \"QueryClientProvider\")) __webpack_require__.d(__webpack_exports__, { \"QueryClientProvider\": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.QueryClientProvider; } });\n/* harmony import */ var _react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6267);\n\n\n\n/***/ }),\n\n/***/ 6267:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Hydrate\": function() { return /* reexport */ Hydrate; },\n  \"QueryClientProvider\": function() { return /* reexport */ QueryClientProvider; }\n});\n\n// UNUSED EXPORTS: QueryErrorResetBoundary, useHydrate, useInfiniteQuery, useIsFetching, useIsMutating, useMutation, useQueries, useQuery, useQueryClient, useQueryErrorResetBoundary\n\n// EXTERNAL MODULE: ./node_modules/react-query/es/core/notifyManager.js\nvar notifyManager = __webpack_require__(101);\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(73935);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/reactBatchedUpdates.js\n\nvar unstable_batchedUpdates = react_dom.unstable_batchedUpdates;\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/setBatchUpdatesFn.js\n\n\nnotifyManager/* notifyManager.setBatchNotifyFunction */.V.setBatchNotifyFunction(unstable_batchedUpdates);\n// EXTERNAL MODULE: ./node_modules/react-query/es/core/logger.js\nvar logger = __webpack_require__(41909);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/logger.js\nvar logger_logger = console;\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/setLogger.js\n\n\n(0,logger/* setLogger */.E)(logger_logger);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/QueryClientProvider.js\n\nvar defaultContext = /*#__PURE__*/react.createContext(undefined);\nvar QueryClientSharingContext = /*#__PURE__*/react.createContext(false); // if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(contextSharing) {\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nvar useQueryClient = function useQueryClient() {\n  var queryClient = react.useContext(getQueryClientContext(react.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nvar QueryClientProvider = function QueryClientProvider(_ref) {\n  var client = _ref.client,\n      _ref$contextSharing = _ref.contextSharing,\n      contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,\n      children = _ref.children;\n  react.useEffect(function () {\n    client.mount();\n    return function () {\n      client.unmount();\n    };\n  }, [client]);\n  var Context = getQueryClientContext(contextSharing);\n  return /*#__PURE__*/react.createElement(QueryClientSharingContext.Provider, {\n    value: contextSharing\n  }, /*#__PURE__*/react.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(87462);\n;// CONCATENATED MODULE: ./node_modules/react-query/es/core/hydration.js\n\n\n// TYPES\n// FUNCTIONS\nfunction dehydrateMutation(mutation) {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state\n  };\n} // Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\n\n\nfunction dehydrateQuery(query) {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash\n  };\n}\n\nfunction defaultShouldDehydrateMutation(mutation) {\n  return mutation.state.isPaused;\n}\n\nfunction defaultShouldDehydrateQuery(query) {\n  return query.state.status === 'success';\n}\n\nfunction dehydrate(client, options) {\n  var _options, _options2;\n\n  options = options || {};\n  var mutations = [];\n  var queries = [];\n\n  if (((_options = options) == null ? void 0 : _options.dehydrateMutations) !== false) {\n    var shouldDehydrateMutation = options.shouldDehydrateMutation || defaultShouldDehydrateMutation;\n    client.getMutationCache().getAll().forEach(function (mutation) {\n      if (shouldDehydrateMutation(mutation)) {\n        mutations.push(dehydrateMutation(mutation));\n      }\n    });\n  }\n\n  if (((_options2 = options) == null ? void 0 : _options2.dehydrateQueries) !== false) {\n    var shouldDehydrateQuery = options.shouldDehydrateQuery || defaultShouldDehydrateQuery;\n    client.getQueryCache().getAll().forEach(function (query) {\n      if (shouldDehydrateQuery(query)) {\n        queries.push(dehydrateQuery(query));\n      }\n    });\n  }\n\n  return {\n    mutations: mutations,\n    queries: queries\n  };\n}\nfunction hydrate(client, dehydratedState, options) {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return;\n  }\n\n  var mutationCache = client.getMutationCache();\n  var queryCache = client.getQueryCache();\n  var mutations = dehydratedState.mutations || [];\n  var queries = dehydratedState.queries || [];\n  mutations.forEach(function (dehydratedMutation) {\n    var _options$defaultOptio;\n\n    mutationCache.build(client, (0,esm_extends/* default */.Z)({}, options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations, {\n      mutationKey: dehydratedMutation.mutationKey\n    }), dehydratedMutation.state);\n  });\n  queries.forEach(function (dehydratedQuery) {\n    var _options$defaultOptio2;\n\n    var query = queryCache.get(dehydratedQuery.queryHash); // Do not hydrate if an existing query exists with newer data\n\n    if (query) {\n      if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) {\n        query.setState(dehydratedQuery.state);\n      }\n\n      return;\n    } // Restore query\n\n\n    queryCache.build(client, (0,esm_extends/* default */.Z)({}, options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries, {\n      queryKey: dehydratedQuery.queryKey,\n      queryHash: dehydratedQuery.queryHash\n    }), dehydratedQuery.state);\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/Hydrate.js\n\n\n\nfunction useHydrate(state, options) {\n  var queryClient = useQueryClient();\n  var optionsRef = react.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  react.useMemo(function () {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nvar Hydrate = function Hydrate(_ref) {\n  var children = _ref.children,\n      options = _ref.options,\n      state = _ref.state;\n  useHydrate(state, options);\n  return children;\n};\n;// CONCATENATED MODULE: ./node_modules/react-query/es/react/index.js\n// Side effects\n\n\n\n\n\n\n\n\n\n\n // Types\n\n\n\n/***/ }),\n\n/***/ 2804:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FV\": function() { return /* binding */ Recoil_index_21; },\n/* harmony export */   \"Wh\": function() { return /* binding */ Recoil_index_4; },\n/* harmony export */   \"cn\": function() { return /* binding */ Recoil_index_7; },\n/* harmony export */   \"sJ\": function() { return /* binding */ Recoil_index_19; }\n/* harmony export */ });\n/* unused harmony exports DefaultValue, RecoilLoadable, atomFamily, constSelector, errorSelector, isRecoilValue, noWait, readOnlySelector, retentionZone, selector, selectorFamily, snapshot_UNSTABLE, useGetRecoilValueInfo_UNSTABLE, useGotoRecoilSnapshot, useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilCallback, useRecoilRefresher_UNSTABLE, useRecoilSnapshot, useRecoilStateLoadable, useRecoilState_TRANSITION_SUPPORT_UNSTABLE, useRecoilStoreID, useRecoilTransactionObserver_UNSTABLE, useRecoilTransaction_UNSTABLE, useRecoilValueLoadable, useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE, useRecoilValue_TRANSITION_SUPPORT_UNSTABLE, useResetRecoilState, useRetain, useSetRecoilState, waitForAll, waitForAllSettled, waitForAny, waitForNone */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73935);\n\n\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction err(message) {\n  const error = new Error(message); // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_) {} // eslint-disable-line fb-www/no-unused-catch-bindings, no-empty\n\n  }\n\n  return error;\n}\n\nvar err_1 = err;\n\n// @oss-only\n\n\nvar Recoil_err = err_1;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n// Split declaration and implementation to allow this function to pretend to\n// check for actual instance of Promise instead of something with a `then`\n// method.\n// eslint-disable-next-line no-redeclare\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nvar Recoil_isPromise = isPromise;\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n\n  throw Recoil_err(message !== null && message !== void 0 ? message : 'Got unexpected null or undefined');\n}\n\nvar Recoil_nullthrows = nullthrows;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass BaseLoadable {\n  getValue() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  toPromise() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  valueMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  valueOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected value, but in \"${this.state}\" state`);\n  }\n\n  promiseMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  promiseOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected promise, but in \"${this.state}\" state`);\n  }\n\n  errorMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  errorOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected error, but in \"${this.state}\" state`);\n  }\n\n  is(other) {\n    // $FlowFixMe[prop-missing]\n    return other.state === this.state && other.contents === this.contents;\n  }\n\n  map(_map) {\n    throw Recoil_err('BaseLoadable');\n  }\n\n}\n\nclass ValueLoadable extends BaseLoadable {\n  constructor(value) {\n    super();\n\n    _defineProperty(this, \"state\", 'hasValue');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = value;\n  }\n\n  getValue() {\n    return this.contents;\n  }\n\n  toPromise() {\n    return Promise.resolve(this.contents);\n  }\n\n  valueMaybe() {\n    return this.contents;\n  }\n\n  valueOrThrow() {\n    return this.contents;\n  }\n\n  promiseMaybe() {\n    return undefined;\n  }\n\n  errorMaybe() {\n    return undefined;\n  }\n\n  map(map) {\n    try {\n      const next = map(this.contents);\n      return Recoil_isPromise(next) ? loadableWithPromise(next) : isLoadable(next) ? next : loadableWithValue(next);\n    } catch (e) {\n      return Recoil_isPromise(e) ? // If we \"suspended\", then try again.\n      // errors and subsequent retries will be handled in 'loading' case\n      loadableWithPromise(e.next(() => this.map(map))) : loadableWithError(e);\n    }\n  }\n\n}\n\nclass ErrorLoadable extends BaseLoadable {\n  constructor(error) {\n    super();\n\n    _defineProperty(this, \"state\", 'hasError');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = error;\n  }\n\n  getValue() {\n    throw this.contents;\n  }\n\n  toPromise() {\n    return Promise.reject(this.contents);\n  }\n\n  valueMaybe() {\n    return undefined;\n  }\n\n  promiseMaybe() {\n    return undefined;\n  }\n\n  errorMaybe() {\n    return this.contents;\n  }\n\n  errorOrThrow() {\n    return this.contents;\n  }\n\n  map(_map) {\n    // $FlowIssue[incompatible-return]\n    return this;\n  }\n\n}\n\nclass LoadingLoadable extends BaseLoadable {\n  constructor(promise) {\n    super();\n\n    _defineProperty(this, \"state\", 'loading');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = promise;\n  }\n\n  getValue() {\n    throw this.contents;\n  }\n\n  toPromise() {\n    return this.contents;\n  }\n\n  valueMaybe() {\n    return undefined;\n  }\n\n  promiseMaybe() {\n    return this.contents;\n  }\n\n  promiseOrThrow() {\n    return this.contents;\n  }\n\n  errorMaybe() {\n    return undefined;\n  }\n\n  map(map) {\n    return loadableWithPromise(this.contents.then(value => {\n      const next = map(value);\n\n      if (isLoadable(next)) {\n        const nextLoadable = next;\n\n        switch (nextLoadable.state) {\n          case 'hasValue':\n            return nextLoadable.contents;\n\n          case 'hasError':\n            throw nextLoadable.contents;\n\n          case 'loading':\n            return nextLoadable.contents;\n        }\n      } // $FlowIssue[incompatible-return]\n\n\n      return next;\n    }).catch(e => {\n      if (Recoil_isPromise(e)) {\n        // we were \"suspended,\" try again\n        return e.then(() => this.map(map).contents);\n      }\n\n      throw e;\n    }));\n  }\n\n}\n\nfunction loadableWithValue(value) {\n  return Object.freeze(new ValueLoadable(value));\n}\n\nfunction loadableWithError(error) {\n  return Object.freeze(new ErrorLoadable(error));\n}\n\nfunction loadableWithPromise(promise) {\n  return Object.freeze(new LoadingLoadable(promise));\n}\n\nfunction loadableLoading() {\n  return Object.freeze(new LoadingLoadable(new Promise(() => {})));\n}\n\nfunction loadableAllArray(inputs) {\n  return inputs.every(i => i.state === 'hasValue') ? loadableWithValue(inputs.map(i => i.contents)) : inputs.some(i => i.state === 'hasError') ? loadableWithError(Recoil_nullthrows(inputs.find(i => i.state === 'hasError'), 'Invalid loadable passed to loadableAll').contents) : loadableWithPromise(Promise.all(inputs.map(i => i.contents)));\n}\n\nfunction loadableAll(inputs) {\n  const unwrapedInputs = Array.isArray(inputs) ? inputs : Object.getOwnPropertyNames(inputs).map(key => inputs[key]);\n  const normalizedInputs = unwrapedInputs.map(x => isLoadable(x) ? x : Recoil_isPromise(x) ? loadableWithPromise(x) : loadableWithValue(x));\n  const output = loadableAllArray(normalizedInputs);\n  return Array.isArray(inputs) ? // $FlowIssue[incompatible-return]\n  output : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  // $FlowIssue[incompatible-call]\n  output.map(outputs => Object.getOwnPropertyNames(inputs).reduce((out, key, idx) => ({ ...out,\n    [key]: outputs[idx]\n  }), {}));\n}\n\nfunction isLoadable(x) {\n  return x instanceof BaseLoadable;\n}\n\nconst LoadableStaticInterface = {\n  of: value => Recoil_isPromise(value) ? loadableWithPromise(value) : isLoadable(value) ? value : loadableWithValue(value),\n  error: error => loadableWithError(error),\n  // $FlowIssue[unclear-type]\n  all: loadableAll,\n  isLoadable\n};\nvar Recoil_Loadable = {\n  loadableWithValue,\n  loadableWithError,\n  loadableWithPromise,\n  loadableLoading,\n  loadableAll,\n  isLoadable,\n  RecoilLoadable: LoadableStaticInterface\n};\n\nvar Recoil_Loadable_1 = Recoil_Loadable.loadableWithValue;\nvar Recoil_Loadable_2 = Recoil_Loadable.loadableWithError;\nvar Recoil_Loadable_3 = Recoil_Loadable.loadableWithPromise;\nvar Recoil_Loadable_4 = Recoil_Loadable.loadableLoading;\nvar Recoil_Loadable_5 = Recoil_Loadable.loadableAll;\nvar Recoil_Loadable_6 = Recoil_Loadable.isLoadable;\nvar Recoil_Loadable_7 = Recoil_Loadable.RecoilLoadable;\n\nvar Recoil_Loadable$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  loadableWithValue: Recoil_Loadable_1,\n  loadableWithError: Recoil_Loadable_2,\n  loadableWithPromise: Recoil_Loadable_3,\n  loadableLoading: Recoil_Loadable_4,\n  loadableAll: Recoil_Loadable_5,\n  isLoadable: Recoil_Loadable_6,\n  RecoilLoadable: Recoil_Loadable_7\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n// eslint-disable-next-line no-unused-vars\nclass AbstractRecoilValue {\n  constructor(newKey) {\n    _defineProperty(this, \"key\", void 0);\n\n    this.key = newKey;\n  }\n\n}\n\nclass RecoilState extends AbstractRecoilValue {}\n\nclass RecoilValueReadOnly extends AbstractRecoilValue {}\n\nfunction isRecoilValue(x) {\n  return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n}\n\nvar Recoil_RecoilValue = {\n  AbstractRecoilValue,\n  RecoilState,\n  RecoilValueReadOnly,\n  isRecoilValue\n};\n\nvar Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;\nvar Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;\nvar Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;\nvar Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\n\nvar Recoil_RecoilValue$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AbstractRecoilValue: Recoil_RecoilValue_1,\n  RecoilState: Recoil_RecoilValue_2,\n  RecoilValueReadOnly: Recoil_RecoilValue_3,\n  isRecoilValue: Recoil_RecoilValue_4\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction sprintf(format, ...args) {\n  let index = 0;\n  return format.replace(/%s/g, () => String(args[index++]));\n}\n\nvar sprintf_1 = (/* unused pure expression or super */ null && (sprintf));\n\nfunction expectationViolation(format, ...args) {\n  if (false) {}\n}\n\nvar expectationViolation_1 = expectationViolation;\n\n// @oss-only\n\n\nvar Recoil_expectationViolation = expectationViolation_1;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nconst gks = new Map().set('recoil_hamt_2020', true).set('recoil_sync_external_store', true).set('recoil_suppress_rerender_in_callback', true).set('recoil_memory_managament_2020', true);\n\nfunction Recoil_gkx_OSS(gk) {\n  var _gks$get;\n\n  return (_gks$get = gks.get(gk)) !== null && _gks$get !== void 0 ? _gks$get : false;\n}\n\nRecoil_gkx_OSS.setPass = gk => {\n  gks.set(gk, true);\n};\n\nRecoil_gkx_OSS.setFail = gk => {\n  gks.set(gk, false);\n};\n\nRecoil_gkx_OSS.clear = () => {\n  gks.clear();\n};\n\nvar Recoil_gkx = Recoil_gkx_OSS; // @oss-only\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the mapper function.\n */\n\nfunction mapIterable(iterable, callback) {\n  // Use generator to create iterable/iterator\n  return function* () {\n    let index = 0;\n\n    for (const value of iterable) {\n      yield callback(value, index++);\n    }\n  }();\n}\n\nvar Recoil_mapIterable = mapIterable;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction recoverableViolation(message, projectName, {\n  error\n} = {}) {\n  if (false) {}\n\n  return null;\n}\n\nvar recoverableViolation_1 = recoverableViolation;\n\n// @oss-only\n\n\nvar Recoil_recoverableViolation = recoverableViolation_1;\n\nclass DefaultValue {}\n\nconst DEFAULT_VALUE = new DefaultValue();\n\nclass RecoilValueNotReady extends Error {\n  constructor(key) {\n    super(`Tried to set the value of Recoil selector ${key} using an updater function, but it is an async selector in a pending or error state; this is not supported.`);\n  }\n\n}\n\n// flowlint-next-line unclear-type:off\nconst nodes = new Map(); // flowlint-next-line unclear-type:off\n\nconst recoilValues = new Map();\n/* eslint-disable no-redeclare */\n\nfunction recoilValuesForKeys(keys) {\n  return Recoil_mapIterable(keys, key => Recoil_nullthrows(recoilValues.get(key)));\n}\n\nfunction registerNode(node) {\n  if (nodes.has(node.key)) {\n    const message = `Duplicate atom key \"${node.key}\". This is a FATAL ERROR in\n      production. But it is safe to ignore this warning if it occurred because of\n      hot module replacement.`; // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:\n    // prettier-ignore\n    // @fb-only: if (__DEV__) {\n    // @fb-only: const isAcceptingUpdate = require('__debug').isAcceptingUpdate;\n    // prettier-ignore\n    // @fb-only: if (typeof isAcceptingUpdate !== 'function' || !isAcceptingUpdate()) {\n    // @fb-only: expectationViolation(message, 'recoil');\n    // @fb-only: }\n    // prettier-ignore\n    // @fb-only: } else {\n    // @fb-only: recoverableViolation(message, 'recoil');\n    // @fb-only: }\n\n    console.warn(message); // @oss-only\n  }\n\n  nodes.set(node.key, node);\n  const recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);\n  recoilValues.set(node.key, recoilValue);\n  return recoilValue;\n}\n/* eslint-enable no-redeclare */\n\n\nclass NodeMissingError extends Error {} // flowlint-next-line unclear-type:off\n\n\nfunction getNode(key) {\n  const node = nodes.get(key);\n\n  if (node == null) {\n    throw new NodeMissingError(`Missing definition for RecoilValue: \"${key}\"\"`);\n  }\n\n  return node;\n} // flowlint-next-line unclear-type:off\n\n\nfunction getNodeMaybe(key) {\n  return nodes.get(key);\n}\n\nconst configDeletionHandlers = new Map();\n\nfunction deleteNodeConfigIfPossible(key) {\n  var _node$shouldDeleteCon;\n\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const node = nodes.get(key);\n\n  if (node !== null && node !== void 0 && (_node$shouldDeleteCon = node.shouldDeleteConfigOnRelease) !== null && _node$shouldDeleteCon !== void 0 && _node$shouldDeleteCon.call(node)) {\n    var _getConfigDeletionHan;\n\n    nodes.delete(key);\n    (_getConfigDeletionHan = getConfigDeletionHandler(key)) === null || _getConfigDeletionHan === void 0 ? void 0 : _getConfigDeletionHan();\n    configDeletionHandlers.delete(key);\n  }\n}\n\nfunction setConfigDeletionHandler(key, fn) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  if (fn === undefined) {\n    configDeletionHandlers.delete(key);\n  } else {\n    configDeletionHandlers.set(key, fn);\n  }\n}\n\nfunction getConfigDeletionHandler(key) {\n  return configDeletionHandlers.get(key);\n}\n\nvar Recoil_Node = {\n  nodes,\n  recoilValues,\n  registerNode,\n  getNode,\n  getNodeMaybe,\n  deleteNodeConfigIfPossible,\n  setConfigDeletionHandler,\n  getConfigDeletionHandler,\n  recoilValuesForKeys,\n  NodeMissingError,\n  DefaultValue,\n  DEFAULT_VALUE,\n  RecoilValueNotReady\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction enqueueExecution(s, f) {\n  f();\n}\n\nvar Recoil_Queue = {\n  enqueueExecution\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hamt_1 = createCommonjsModule(function (module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n    @fileOverview Hash Array Mapped Trie.\n\n    Code based on: https://github.com/exclipy/pdata\n*/\n\n\nvar hamt = {}; // export\n\n/* Configuration\n ******************************************************************************/\n\nvar SIZE = 5;\nvar BUCKET_SIZE = Math.pow(2, SIZE);\nvar MASK = BUCKET_SIZE - 1;\nvar MAX_INDEX_NODE = BUCKET_SIZE / 2;\nvar MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n/*\n ******************************************************************************/\n\nvar nothing = {};\n\nvar constant = function constant(x) {\n  return function () {\n    return x;\n  };\n};\n/**\n    Get 32 bit hash of string.\n\n    Based on:\n    http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n*/\n\n\nvar hash = hamt.hash = function (str) {\n  var type = typeof str === 'undefined' ? 'undefined' : _typeof(str);\n  if (type === 'number') return str;\n  if (type !== 'string') str += '';\n  var hash = 0;\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    var c = str.charCodeAt(i);\n    hash = (hash << 5) - hash + c | 0;\n  }\n\n  return hash;\n};\n/* Bit Ops\n ******************************************************************************/\n\n/**\n    Hamming weight.\n\n    Taken from: http://jsperf.com/hamming-weight\n*/\n\n\nvar popcount = function popcount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n};\n\nvar hashFragment = function hashFragment(shift, h) {\n  return h >>> shift & MASK;\n};\n\nvar toBitmap = function toBitmap(x) {\n  return 1 << x;\n};\n\nvar fromBitmap = function fromBitmap(bitmap, bit) {\n  return popcount(bitmap & bit - 1);\n};\n/* Array Ops\n ******************************************************************************/\n\n/**\n    Set a value in an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to change.\n    @param v New value\n    @param arr Array.\n*/\n\n\nvar arrayUpdate = function arrayUpdate(mutate, at, v, arr) {\n  var out = arr;\n\n  if (!mutate) {\n    var len = arr.length;\n    out = new Array(len);\n\n    for (var i = 0; i < len; ++i) {\n      out[i] = arr[i];\n    }\n  }\n\n  out[at] = v;\n  return out;\n};\n/**\n    Remove a value from an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to remove.\n    @param arr Array.\n*/\n\n\nvar arraySpliceOut = function arraySpliceOut(mutate, at, arr) {\n  var newLen = arr.length - 1;\n  var i = 0;\n  var g = 0;\n  var out = arr;\n\n  if (mutate) {\n    i = g = at;\n  } else {\n    out = new Array(newLen);\n\n    while (i < at) {\n      out[g++] = arr[i++];\n    }\n  }\n\n  ++i;\n\n  while (i <= newLen) {\n    out[g++] = arr[i++];\n  }\n\n  if (mutate) {\n    out.length = newLen;\n  }\n\n  return out;\n};\n/**\n    Insert a value into an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to insert at.\n    @param v Value to insert,\n    @param arr Array.\n*/\n\n\nvar arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {\n  var len = arr.length;\n\n  if (mutate) {\n    var _i = len;\n\n    while (_i >= at) {\n      arr[_i--] = arr[_i];\n    }\n\n    arr[at] = v;\n    return arr;\n  }\n\n  var i = 0,\n      g = 0;\n  var out = new Array(len + 1);\n\n  while (i < at) {\n    out[g++] = arr[i++];\n  }\n\n  out[at] = v;\n\n  while (i < len) {\n    out[++g] = arr[i++];\n  }\n\n  return out;\n};\n/* Node Structures\n ******************************************************************************/\n\n\nvar LEAF = 1;\nvar COLLISION = 2;\nvar INDEX = 3;\nvar ARRAY = 4;\n/**\n    Empty node.\n*/\n\nvar empty = {\n  __hamt_isEmpty: true\n};\n\nvar isEmptyNode = function isEmptyNode(x) {\n  return x === empty || x && x.__hamt_isEmpty;\n};\n/**\n    Leaf holding a value.\n\n    @member edit Edit of the node.\n    @member hash Hash of key.\n    @member key Key.\n    @member value Value stored.\n*/\n\n\nvar Leaf = function Leaf(edit, hash, key, value) {\n  return {\n    type: LEAF,\n    edit: edit,\n    hash: hash,\n    key: key,\n    value: value,\n    _modify: Leaf__modify\n  };\n};\n/**\n    Leaf holding multiple values with the same hash but different keys.\n\n    @member edit Edit of the node.\n    @member hash Hash of key.\n    @member children Array of collision children node.\n*/\n\n\nvar Collision = function Collision(edit, hash, children) {\n  return {\n    type: COLLISION,\n    edit: edit,\n    hash: hash,\n    children: children,\n    _modify: Collision__modify\n  };\n};\n/**\n    Internal node with a sparse set of children.\n\n    Uses a bitmap and array to pack children.\n\n  @member edit Edit of the node.\n    @member mask Bitmap that encode the positions of children in the array.\n    @member children Array of child nodes.\n*/\n\n\nvar IndexedNode = function IndexedNode(edit, mask, children) {\n  return {\n    type: INDEX,\n    edit: edit,\n    mask: mask,\n    children: children,\n    _modify: IndexedNode__modify\n  };\n};\n/**\n    Internal node with many children.\n\n    @member edit Edit of the node.\n    @member size Number of children.\n    @member children Array of child nodes.\n*/\n\n\nvar ArrayNode = function ArrayNode(edit, size, children) {\n  return {\n    type: ARRAY,\n    edit: edit,\n    size: size,\n    children: children,\n    _modify: ArrayNode__modify\n  };\n};\n/**\n    Is `node` a leaf node?\n*/\n\n\nvar isLeaf = function isLeaf(node) {\n  return node === empty || node.type === LEAF || node.type === COLLISION;\n};\n/* Internal node operations.\n ******************************************************************************/\n\n/**\n    Expand an indexed node into an array node.\n\n  @param edit Current edit.\n    @param frag Index of added child.\n    @param child Added child.\n    @param mask Index node mask before child added.\n    @param subNodes Index node children before child added.\n*/\n\n\nvar expand = function expand(edit, frag, child, bitmap, subNodes) {\n  var arr = [];\n  var bit = bitmap;\n  var count = 0;\n\n  for (var i = 0; bit; ++i) {\n    if (bit & 1) arr[i] = subNodes[count++];\n    bit >>>= 1;\n  }\n\n  arr[frag] = child;\n  return ArrayNode(edit, count + 1, arr);\n};\n/**\n    Collapse an array node into a indexed node.\n\n  @param edit Current edit.\n    @param count Number of elements in new array.\n    @param removed Index of removed element.\n    @param elements Array node children before remove.\n*/\n\n\nvar pack = function pack(edit, count, removed, elements) {\n  var children = new Array(count - 1);\n  var g = 0;\n  var bitmap = 0;\n\n  for (var i = 0, len = elements.length; i < len; ++i) {\n    if (i !== removed) {\n      var elem = elements[i];\n\n      if (elem && !isEmptyNode(elem)) {\n        children[g++] = elem;\n        bitmap |= 1 << i;\n      }\n    }\n  }\n\n  return IndexedNode(edit, bitmap, children);\n};\n/**\n    Merge two leaf nodes.\n\n    @param shift Current shift.\n    @param h1 Node 1 hash.\n    @param n1 Node 1.\n    @param h2 Node 2 hash.\n    @param n2 Node 2.\n*/\n\n\nvar mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {\n  if (h1 === h2) return Collision(edit, h1, [n2, n1]);\n  var subH1 = hashFragment(shift, h1);\n  var subH2 = hashFragment(shift, h2);\n  return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);\n};\n/**\n    Update an entry in a collision list.\n\n    @param mutate Should mutation be used?\n    @param edit Current edit.\n    @param keyEq Key compare function.\n    @param hash Hash of collision.\n    @param list Collision list.\n    @param f Update function.\n    @param k Key to update.\n    @param size Size ref.\n*/\n\n\nvar updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {\n  var len = list.length;\n\n  for (var i = 0; i < len; ++i) {\n    var child = list[i];\n\n    if (keyEq(k, child.key)) {\n      var value = child.value;\n\n      var _newValue = f(value);\n\n      if (_newValue === value) return list;\n\n      if (_newValue === nothing) {\n        --size.value;\n        return arraySpliceOut(mutate, i, list);\n      }\n\n      return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);\n    }\n  }\n\n  var newValue = f();\n  if (newValue === nothing) return list;\n  ++size.value;\n  return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);\n};\n\nvar canEditNode = function canEditNode(edit, node) {\n  return edit === node.edit;\n};\n/* Editing\n ******************************************************************************/\n\n\nvar Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {\n  if (keyEq(k, this.key)) {\n    var _v = f(this.value);\n\n    if (_v === this.value) return this;else if (_v === nothing) {\n      --size.value;\n      return empty;\n    }\n\n    if (canEditNode(edit, this)) {\n      this.value = _v;\n      return this;\n    }\n\n    return Leaf(edit, h, k, _v);\n  }\n\n  var v = f();\n  if (v === nothing) return this;\n  ++size.value;\n  return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n};\n\nvar Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {\n  if (h === this.hash) {\n    var canEdit = canEditNode(edit, this);\n    var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);\n    if (list === this.children) return this;\n    return list.length > 1 ? Collision(edit, this.hash, list) : list[0]; // collapse single element collision list\n  }\n\n  var v = f();\n  if (v === nothing) return this;\n  ++size.value;\n  return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n};\n\nvar IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {\n  var mask = this.mask;\n  var children = this.children;\n  var frag = hashFragment(shift, h);\n  var bit = toBitmap(frag);\n  var indx = fromBitmap(mask, bit);\n  var exists = mask & bit;\n  var current = exists ? children[indx] : empty;\n\n  var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n  if (current === child) return this;\n  var canEdit = canEditNode(edit, this);\n  var bitmap = mask;\n  var newChildren = void 0;\n\n  if (exists && isEmptyNode(child)) {\n    // remove\n    bitmap &= ~bit;\n    if (!bitmap) return empty;\n    if (children.length <= 2 && isLeaf(children[indx ^ 1])) return children[indx ^ 1]; // collapse\n\n    newChildren = arraySpliceOut(canEdit, indx, children);\n  } else if (!exists && !isEmptyNode(child)) {\n    // add\n    if (children.length >= MAX_INDEX_NODE) return expand(edit, frag, child, mask, children);\n    bitmap |= bit;\n    newChildren = arraySpliceIn(canEdit, indx, child, children);\n  } else {\n    // modify\n    newChildren = arrayUpdate(canEdit, indx, child, children);\n  }\n\n  if (canEdit) {\n    this.mask = bitmap;\n    this.children = newChildren;\n    return this;\n  }\n\n  return IndexedNode(edit, bitmap, newChildren);\n};\n\nvar ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {\n  var count = this.size;\n  var children = this.children;\n  var frag = hashFragment(shift, h);\n  var child = children[frag];\n\n  var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n  if (child === newChild) return this;\n  var canEdit = canEditNode(edit, this);\n  var newChildren = void 0;\n\n  if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n    // add\n    ++count;\n    newChildren = arrayUpdate(canEdit, frag, newChild, children);\n  } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n    // remove\n    --count;\n    if (count <= MIN_ARRAY_NODE) return pack(edit, count, frag, children);\n    newChildren = arrayUpdate(canEdit, frag, empty, children);\n  } else {\n    // modify\n    newChildren = arrayUpdate(canEdit, frag, newChild, children);\n  }\n\n  if (canEdit) {\n    this.size = count;\n    this.children = newChildren;\n    return this;\n  }\n\n  return ArrayNode(edit, count, newChildren);\n};\n\nempty._modify = function (edit, keyEq, shift, f, h, k, size) {\n  var v = f();\n  if (v === nothing) return empty;\n  ++size.value;\n  return Leaf(edit, h, k, v);\n};\n/*\n ******************************************************************************/\n\n\nfunction Map(editable, edit, config, root, size) {\n  this._editable = editable;\n  this._edit = edit;\n  this._config = config;\n  this._root = root;\n  this._size = size;\n}\n\nMap.prototype.setTree = function (newRoot, newSize) {\n  if (this._editable) {\n    this._root = newRoot;\n    this._size = newSize;\n    return this;\n  }\n\n  return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);\n};\n/* Queries\n ******************************************************************************/\n\n/**\n    Lookup the value for `key` in `map` using a custom `hash`.\n\n    Returns the value or `alt` if none.\n*/\n\n\nvar tryGetHash = hamt.tryGetHash = function (alt, hash, key, map) {\n  var node = map._root;\n  var shift = 0;\n  var keyEq = map._config.keyEq;\n\n  while (true) {\n    switch (node.type) {\n      case LEAF:\n        {\n          return keyEq(key, node.key) ? node.value : alt;\n        }\n\n      case COLLISION:\n        {\n          if (hash === node.hash) {\n            var children = node.children;\n\n            for (var i = 0, len = children.length; i < len; ++i) {\n              var child = children[i];\n              if (keyEq(key, child.key)) return child.value;\n            }\n          }\n\n          return alt;\n        }\n\n      case INDEX:\n        {\n          var frag = hashFragment(shift, hash);\n          var bit = toBitmap(frag);\n\n          if (node.mask & bit) {\n            node = node.children[fromBitmap(node.mask, bit)];\n            shift += SIZE;\n            break;\n          }\n\n          return alt;\n        }\n\n      case ARRAY:\n        {\n          node = node.children[hashFragment(shift, hash)];\n\n          if (node) {\n            shift += SIZE;\n            break;\n          }\n\n          return alt;\n        }\n\n      default:\n        return alt;\n    }\n  }\n};\n\nMap.prototype.tryGetHash = function (alt, hash, key) {\n  return tryGetHash(alt, hash, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using internal hash function.\n\n    @see `tryGetHash`\n*/\n\n\nvar tryGet = hamt.tryGet = function (alt, key, map) {\n  return tryGetHash(alt, map._config.hash(key), key, map);\n};\n\nMap.prototype.tryGet = function (alt, key) {\n  return tryGet(alt, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using a custom `hash`.\n\n    Returns the value or `undefined` if none.\n*/\n\n\nvar getHash = hamt.getHash = function (hash, key, map) {\n  return tryGetHash(undefined, hash, key, map);\n};\n\nMap.prototype.getHash = function (hash, key) {\n  return getHash(hash, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using internal hash function.\n\n    @see `get`\n*/\n\n\nvar get = hamt.get = function (key, map) {\n  return tryGetHash(undefined, map._config.hash(key), key, map);\n};\n\nMap.prototype.get = function (key, alt) {\n  return tryGet(alt, key, this);\n};\n/**\n    Does an entry exist for `key` in `map`? Uses custom `hash`.\n*/\n\n\nvar hasHash = hamt.has = function (hash, key, map) {\n  return tryGetHash(nothing, hash, key, map) !== nothing;\n};\n\nMap.prototype.hasHash = function (hash, key) {\n  return hasHash(hash, key, this);\n};\n/**\n    Does an entry exist for `key` in `map`? Uses internal hash function.\n*/\n\n\nvar has = hamt.has = function (key, map) {\n  return hasHash(map._config.hash(key), key, map);\n};\n\nMap.prototype.has = function (key) {\n  return has(key, this);\n};\n\nvar defKeyCompare = function defKeyCompare(x, y) {\n  return x === y;\n};\n/**\n    Create an empty map.\n\n    @param config Configuration.\n*/\n\n\nhamt.make = function (config) {\n  return new Map(0, 0, {\n    keyEq: config && config.keyEq || defKeyCompare,\n    hash: config && config.hash || hash\n  }, empty, 0);\n};\n/**\n    Empty map.\n*/\n\n\nhamt.empty = hamt.make();\n/**\n    Does `map` contain any elements?\n*/\n\nvar isEmpty = hamt.isEmpty = function (map) {\n  return map && !!isEmptyNode(map._root);\n};\n\nMap.prototype.isEmpty = function () {\n  return isEmpty(this);\n};\n/* Updates\n ******************************************************************************/\n\n/**\n    Alter the value stored for `key` in `map` using function `f` using\n    custom hash.\n\n    `f` is invoked with the current value for `k` if it exists,\n    or no arguments if no such value exists. `modify` will always either\n    update or insert a value into the map.\n\n    Returns a map with the modified value. Does not alter `map`.\n*/\n\n\nvar modifyHash = hamt.modifyHash = function (f, hash, key, map) {\n  var size = {\n    value: map._size\n  };\n\n  var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);\n\n  return map.setTree(newRoot, size.value);\n};\n\nMap.prototype.modifyHash = function (hash, key, f) {\n  return modifyHash(f, hash, key, this);\n};\n/**\n    Alter the value stored for `key` in `map` using function `f` using\n    internal hash function.\n\n    @see `modifyHash`\n*/\n\n\nvar modify = hamt.modify = function (f, key, map) {\n  return modifyHash(f, map._config.hash(key), key, map);\n};\n\nMap.prototype.modify = function (key, f) {\n  return modify(f, key, this);\n};\n/**\n    Store `value` for `key` in `map` using custom `hash`.\n\n    Returns a map with the modified value. Does not alter `map`.\n*/\n\n\nvar setHash = hamt.setHash = function (hash, key, value, map) {\n  return modifyHash(constant(value), hash, key, map);\n};\n\nMap.prototype.setHash = function (hash, key, value) {\n  return setHash(hash, key, value, this);\n};\n/**\n    Store `value` for `key` in `map` using internal hash function.\n\n    @see `setHash`\n*/\n\n\nvar set = hamt.set = function (key, value, map) {\n  return setHash(map._config.hash(key), key, value, map);\n};\n\nMap.prototype.set = function (key, value) {\n  return set(key, value, this);\n};\n/**\n    Remove the entry for `key` in `map`.\n\n    Returns a map with the value removed. Does not alter `map`.\n*/\n\n\nvar del = constant(nothing);\n\nvar removeHash = hamt.removeHash = function (hash, key, map) {\n  return modifyHash(del, hash, key, map);\n};\n\nMap.prototype.removeHash = Map.prototype.deleteHash = function (hash, key) {\n  return removeHash(hash, key, this);\n};\n/**\n    Remove the entry for `key` in `map` using internal hash function.\n\n    @see `removeHash`\n*/\n\n\nvar remove = hamt.remove = function (key, map) {\n  return removeHash(map._config.hash(key), key, map);\n};\n\nMap.prototype.remove = Map.prototype.delete = function (key) {\n  return remove(key, this);\n};\n/* Mutation\n ******************************************************************************/\n\n/**\n    Mark `map` as mutable.\n */\n\n\nvar beginMutation = hamt.beginMutation = function (map) {\n  return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);\n};\n\nMap.prototype.beginMutation = function () {\n  return beginMutation(this);\n};\n/**\n    Mark `map` as immutable.\n */\n\n\nvar endMutation = hamt.endMutation = function (map) {\n  map._editable = map._editable && map._editable - 1;\n  return map;\n};\n\nMap.prototype.endMutation = function () {\n  return endMutation(this);\n};\n/**\n    Mutate `map` within the context of `f`.\n    @param f\n    @param map HAMT\n*/\n\n\nvar mutate = hamt.mutate = function (f, map) {\n  var transient = beginMutation(map);\n  f(transient);\n  return endMutation(transient);\n};\n\nMap.prototype.mutate = function (f) {\n  return mutate(f, this);\n};\n/* Traversal\n ******************************************************************************/\n\n/**\n    Apply a continuation.\n*/\n\n\nvar appk = function appk(k) {\n  return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);\n};\n/**\n    Recursively visit all values stored in an array of nodes lazily.\n*/\n\n\nvar lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {\n  while (i < len) {\n    var child = children[i++];\n    if (child && !isEmptyNode(child)) return lazyVisit(child, f, [len, children, i, f, k]);\n  }\n\n  return appk(k);\n};\n/**\n    Recursively visit all values stored in `node` lazily.\n*/\n\n\nvar lazyVisit = function lazyVisit(node, f, k) {\n  switch (node.type) {\n    case LEAF:\n      return {\n        value: f(node),\n        rest: k\n      };\n\n    case COLLISION:\n    case ARRAY:\n    case INDEX:\n      var children = node.children;\n      return lazyVisitChildren(children.length, children, 0, f, k);\n\n    default:\n      return appk(k);\n  }\n};\n\nvar DONE = {\n  done: true\n};\n/**\n    Javascript iterator over a map.\n*/\n\nfunction MapIterator(v) {\n  this.v = v;\n}\n\nMapIterator.prototype.next = function () {\n  if (!this.v) return DONE;\n  var v0 = this.v;\n  this.v = appk(v0.rest);\n  return v0;\n};\n\nMapIterator.prototype[Symbol.iterator] = function () {\n  return this;\n};\n/**\n    Lazily visit each value in map with function `f`.\n*/\n\n\nvar visit = function visit(map, f) {\n  return new MapIterator(lazyVisit(map._root, f));\n};\n/**\n    Get a Javascsript iterator of `map`.\n\n    Iterates over `[key, value]` arrays.\n*/\n\n\nvar buildPairs = function buildPairs(x) {\n  return [x.key, x.value];\n};\n\nvar entries = hamt.entries = function (map) {\n  return visit(map, buildPairs);\n};\n\nMap.prototype.entries = Map.prototype[Symbol.iterator] = function () {\n  return entries(this);\n};\n/**\n    Get array of all keys in `map`.\n\n    Order is not guaranteed.\n*/\n\n\nvar buildKeys = function buildKeys(x) {\n  return x.key;\n};\n\nvar keys = hamt.keys = function (map) {\n  return visit(map, buildKeys);\n};\n\nMap.prototype.keys = function () {\n  return keys(this);\n};\n/**\n    Get array of all values in `map`.\n\n    Order is not guaranteed, duplicates are preserved.\n*/\n\n\nvar buildValues = function buildValues(x) {\n  return x.value;\n};\n\nvar values = hamt.values = Map.prototype.values = function (map) {\n  return visit(map, buildValues);\n};\n\nMap.prototype.values = function () {\n  return values(this);\n};\n/* Fold\n ******************************************************************************/\n\n/**\n    Visit every entry in the map, aggregating data.\n\n    Order of nodes is not guaranteed.\n\n    @param f Function mapping accumulated value, value, and key to new value.\n    @param z Starting value.\n    @param m HAMT\n*/\n\n\nvar fold = hamt.fold = function (f, z, m) {\n  var root = m._root;\n  if (root.type === LEAF) return f(z, root.value, root.key);\n  var toVisit = [root.children];\n  var children = void 0;\n\n  while (children = toVisit.pop()) {\n    for (var i = 0, len = children.length; i < len;) {\n      var child = children[i++];\n\n      if (child && child.type) {\n        if (child.type === LEAF) z = f(z, child.value, child.key);else toVisit.push(child.children);\n      }\n    }\n  }\n\n  return z;\n};\n\nMap.prototype.fold = function (f, z) {\n  return fold(f, z, this);\n};\n/**\n    Visit every entry in the map, aggregating data.\n\n    Order of nodes is not guaranteed.\n\n    @param f Function invoked with value and key\n    @param map HAMT\n*/\n\n\nvar forEach = hamt.forEach = function (f, map) {\n  return fold(function (_, value, key) {\n    return f(value, key, map);\n  }, null, map);\n};\n\nMap.prototype.forEach = function (f) {\n  return forEach(f, this);\n};\n/* Aggregate\n ******************************************************************************/\n\n/**\n    Get the number of entries in `map`.\n*/\n\n\nvar count = hamt.count = function (map) {\n  return map._size;\n};\n\nMap.prototype.count = function () {\n  return count(this);\n};\n\nObject.defineProperty(Map.prototype, 'size', {\n  get: Map.prototype.count\n});\n/* Export\n ******************************************************************************/\n\nif ( module.exports) {\n  module.exports = hamt;\n} else {\n  undefined.hamt = hamt;\n}\n});\n\nclass BuiltInMap {\n  constructor(existing) {\n    _defineProperty(this, \"_map\", void 0);\n\n    this._map = new Map(existing === null || existing === void 0 ? void 0 : existing.entries());\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  get(k) {\n    return this._map.get(k);\n  }\n\n  has(k) {\n    return this._map.has(k);\n  }\n\n  set(k, v) {\n    this._map.set(k, v);\n\n    return this;\n  }\n\n  delete(k) {\n    this._map.delete(k);\n\n    return this;\n  }\n\n  clone() {\n    return persistentMap(this);\n  }\n\n  toMap() {\n    return new Map(this._map);\n  }\n\n}\n\nclass HashArrayMappedTrieMap {\n  // Because hamt.empty is not a function there is no way to introduce type\n  // parameters on it, so empty is typed as HAMTPlusMap<string, mixed>.\n  // $FlowIssue\n  constructor(existing) {\n    _defineProperty(this, \"_hamt\", hamt_1.empty.beginMutation());\n\n    if (existing instanceof HashArrayMappedTrieMap) {\n      const h = existing._hamt.endMutation();\n\n      existing._hamt = h.beginMutation();\n      this._hamt = h.beginMutation();\n    } else if (existing) {\n      for (const [k, v] of existing.entries()) {\n        this._hamt.set(k, v);\n      }\n    }\n  }\n\n  keys() {\n    return this._hamt.keys();\n  }\n\n  entries() {\n    return this._hamt.entries();\n  }\n\n  get(k) {\n    return this._hamt.get(k);\n  }\n\n  has(k) {\n    return this._hamt.has(k);\n  }\n\n  set(k, v) {\n    this._hamt.set(k, v);\n\n    return this;\n  }\n\n  delete(k) {\n    this._hamt.delete(k);\n\n    return this;\n  }\n\n  clone() {\n    return persistentMap(this);\n  }\n\n  toMap() {\n    return new Map(this._hamt);\n  }\n\n}\n\nfunction persistentMap(existing) {\n  if (Recoil_gkx('recoil_hamt_2020')) {\n    return new HashArrayMappedTrieMap(existing);\n  } else {\n    return new BuiltInMap(existing);\n  }\n}\n\nvar Recoil_PersistentMap = {\n  persistentMap\n};\n\nvar Recoil_PersistentMap_1 = Recoil_PersistentMap.persistentMap;\n\nvar Recoil_PersistentMap$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  persistentMap: Recoil_PersistentMap_1\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a set containing all of the values from the first set that are not\n * present in any of the subsequent sets.\n *\n * Note: this is written procedurally (i.e., without filterSet) for performant\n * use in tight loops.\n */\n\nfunction differenceSets(set, ...setsWithValuesToRemove) {\n  const ret = new Set();\n\n  FIRST: for (const value of set) {\n    for (const otherSet of setsWithValuesToRemove) {\n      if (otherSet.has(value)) {\n        continue FIRST;\n      }\n    }\n\n    ret.add(value);\n  }\n\n  return ret;\n}\n\nvar Recoil_differenceSets = differenceSets;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a new Map object with the same keys as the original, but with the\n * values replaced with the output of the given callback function.\n */\n\nfunction mapMap(map, callback) {\n  const result = new Map();\n  map.forEach((value, key) => {\n    result.set(key, callback(value, key));\n  });\n  return result;\n}\n\nvar Recoil_mapMap = mapMap;\n\nfunction makeGraph() {\n  return {\n    nodeDeps: new Map(),\n    nodeToNodeSubscriptions: new Map()\n  };\n}\n\nfunction cloneGraph(graph) {\n  return {\n    nodeDeps: Recoil_mapMap(graph.nodeDeps, s => new Set(s)),\n    nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, s => new Set(s))\n  };\n} // Note that this overwrites the deps of existing nodes, rather than unioning\n// the new deps with the old deps.\n\n\nfunction mergeDependencyMapIntoGraph(deps, graph, // If olderGraph is given then we will not overwrite changes made to the given\n// graph compared with olderGraph:\nolderGraph) {\n  const {\n    nodeDeps,\n    nodeToNodeSubscriptions\n  } = graph;\n  deps.forEach((upstreams, downstream) => {\n    const existingUpstreams = nodeDeps.get(downstream);\n\n    if (existingUpstreams && olderGraph && existingUpstreams !== olderGraph.nodeDeps.get(downstream)) {\n      return;\n    } // Update nodeDeps:\n\n\n    nodeDeps.set(downstream, new Set(upstreams)); // Add new deps to nodeToNodeSubscriptions:\n\n    const addedUpstreams = existingUpstreams == null ? upstreams : Recoil_differenceSets(upstreams, existingUpstreams);\n    addedUpstreams.forEach(upstream => {\n      if (!nodeToNodeSubscriptions.has(upstream)) {\n        nodeToNodeSubscriptions.set(upstream, new Set());\n      }\n\n      const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n      existing.add(downstream);\n    }); // Remove removed deps from nodeToNodeSubscriptions:\n\n    if (existingUpstreams) {\n      const removedUpstreams = Recoil_differenceSets(existingUpstreams, upstreams);\n      removedUpstreams.forEach(upstream => {\n        if (!nodeToNodeSubscriptions.has(upstream)) {\n          return;\n        }\n\n        const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n        existing.delete(downstream);\n\n        if (existing.size === 0) {\n          nodeToNodeSubscriptions.delete(upstream);\n        }\n      });\n    }\n  });\n}\n\nfunction saveDependencyMapToStore(dependencyMap, store, version) {\n  var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;\n\n  const storeState = store.getState();\n\n  if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to save dependencies to a discarded tree');\n  } // Merge the dependencies discovered into the store's dependency map\n  // for the version that was read:\n\n\n  const graph = store.getGraph(version);\n  mergeDependencyMapIntoGraph(dependencyMap, graph); // If this version is not the latest version, also write these dependencies\n  // into later versions if they don't already have their own:\n\n  if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {\n    const currentGraph = store.getGraph(storeState.currentTree.version);\n    mergeDependencyMapIntoGraph(dependencyMap, currentGraph, graph);\n  }\n\n  if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {\n    var _storeState$nextTree2;\n\n    const nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;\n\n    if (nextVersion !== undefined) {\n      const nextGraph = store.getGraph(nextVersion);\n      mergeDependencyMapIntoGraph(dependencyMap, nextGraph, graph);\n    }\n  }\n}\n\nfunction mergeDepsIntoDependencyMap(from, into) {\n  from.forEach((upstreamDeps, downstreamNode) => {\n    if (!into.has(downstreamNode)) {\n      into.set(downstreamNode, new Set());\n    }\n\n    const deps = Recoil_nullthrows(into.get(downstreamNode));\n    upstreamDeps.forEach(dep => deps.add(dep));\n  });\n}\n\nfunction addToDependencyMap(downstream, upstream, dependencyMap) {\n  if (!dependencyMap.has(downstream)) {\n    dependencyMap.set(downstream, new Set());\n  }\n\n  Recoil_nullthrows(dependencyMap.get(downstream)).add(upstream);\n}\n\nvar Recoil_Graph = {\n  addToDependencyMap,\n  cloneGraph,\n  graph: makeGraph,\n  mergeDepsIntoDependencyMap,\n  saveDependencyMapToStore\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nlet nextTreeStateVersion = 0;\n\nconst getNextTreeStateVersion = () => nextTreeStateVersion++;\n\nlet nextStoreID = 0;\n\nconst getNextStoreID = () => nextStoreID++;\n\nlet nextComponentID = 0;\n\nconst getNextComponentID = () => nextComponentID++;\n\nvar Recoil_Keys = {\n  getNextTreeStateVersion,\n  getNextStoreID,\n  getNextComponentID\n};\n\nconst {\n  persistentMap: persistentMap$1\n} = Recoil_PersistentMap$1;\n\nconst {\n  graph\n} = Recoil_Graph;\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$1\n} = Recoil_Keys;\n\nfunction makeEmptyTreeState() {\n  const version = getNextTreeStateVersion$1();\n  return {\n    version,\n    stateID: version,\n    transactionMetadata: {},\n    dirtyAtoms: new Set(),\n    atomValues: persistentMap$1(),\n    nonvalidatedAtoms: persistentMap$1()\n  };\n}\n\nfunction makeEmptyStoreState() {\n  const currentTree = makeEmptyTreeState();\n  return {\n    currentTree,\n    nextTree: null,\n    previousTree: null,\n    commitDepth: 0,\n    knownAtoms: new Set(),\n    knownSelectors: new Set(),\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(currentTree.version, graph()),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    nodeCleanupFunctions: new Map()\n  };\n}\n\nvar Recoil_State = {\n  makeEmptyTreeState,\n  makeEmptyStoreState,\n  getNextTreeStateVersion: getNextTreeStateVersion$1\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nclass RetentionZone {}\n\nfunction retentionZone() {\n  return new RetentionZone();\n}\n\nvar Recoil_RetentionZone = {\n  RetentionZone,\n  retentionZone\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Utilities for working with built-in Maps and Sets without mutating them.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction setByAddingToSet(set, v) {\n  const next = new Set(set);\n  next.add(v);\n  return next;\n}\n\nfunction setByDeletingFromSet(set, v) {\n  const next = new Set(set);\n  next.delete(v);\n  return next;\n}\n\nfunction mapBySettingInMap(map, k, v) {\n  const next = new Map(map);\n  next.set(k, v);\n  return next;\n}\n\nfunction mapByUpdatingInMap(map, k, updater) {\n  const next = new Map(map);\n  next.set(k, updater(next.get(k)));\n  return next;\n}\n\nfunction mapByDeletingFromMap(map, k) {\n  const next = new Map(map);\n  next.delete(k);\n  return next;\n}\n\nfunction mapByDeletingMultipleFromMap(map, ks) {\n  const next = new Map(map);\n  ks.forEach(k => next.delete(k));\n  return next;\n}\n\nvar Recoil_CopyOnWrite = {\n  setByAddingToSet,\n  setByDeletingFromSet,\n  mapBySettingInMap,\n  mapByUpdatingInMap,\n  mapByDeletingFromMap,\n  mapByDeletingMultipleFromMap\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the filter function.\n */\n\nfunction* filterIterable(iterable, predicate) {\n  // Use generator to create iterable/iterator\n  let index = 0;\n\n  for (const value of iterable) {\n    if (predicate(value, index++)) {\n      yield value;\n    }\n  }\n}\n\nvar Recoil_filterIterable = filterIterable;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Return a proxy object based on the provided base and factories objects.\n * The proxy will include all properties of the base object as-is.\n * The factories object contains callbacks to obtain the values of the properies\n * for its keys.\n *\n * This is useful for providing users an object where some properties may be\n * lazily computed only on first access.\n */\n// $FlowIssue[unclear-type]\n\nfunction lazyProxy(base, factories) {\n  const proxy = new Proxy(base, {\n    // Compute and cache lazy property if not already done.\n    get: (target, prop) => {\n      if (!(prop in target) && prop in factories) {\n        target[prop] = factories[prop]();\n      }\n\n      return target[prop];\n    },\n    // This method allows user to iterate keys as normal\n    ownKeys: target => {\n\n      return Object.keys(target);\n    }\n  }); // $FlowIssue[incompatible-return]\n\n  return proxy;\n}\n\nvar Recoil_lazyProxy = lazyProxy;\n\nconst {\n  getNode: getNode$1,\n  getNodeMaybe: getNodeMaybe$1,\n  recoilValuesForKeys: recoilValuesForKeys$1\n} = Recoil_Node;\n\nconst {\n  RetentionZone: RetentionZone$1\n} = Recoil_RetentionZone;\n\nconst {\n  setByAddingToSet: setByAddingToSet$1\n} = Recoil_CopyOnWrite;\n\n\n\n\n\n\n\n // flowlint-next-line unclear-type:off\n\n\nconst emptySet = Object.freeze(new Set());\n\nclass ReadOnlyRecoilValueError extends Error {}\n\nfunction initializeRetentionForNode(store, nodeKey, retainedBy) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return () => undefined;\n  }\n\n  const {\n    nodesRetainedByZone\n  } = store.getState().retention;\n\n  function addToZone(zone) {\n    let set = nodesRetainedByZone.get(zone);\n\n    if (!set) {\n      nodesRetainedByZone.set(zone, set = new Set());\n    }\n\n    set.add(nodeKey);\n  }\n\n  if (retainedBy instanceof RetentionZone$1) {\n    addToZone(retainedBy);\n  } else if (Array.isArray(retainedBy)) {\n    for (const zone of retainedBy) {\n      addToZone(zone);\n    }\n  }\n\n  return () => {\n    if (!Recoil_gkx('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    const {\n      retention\n    } = store.getState();\n\n    function deleteFromZone(zone) {\n      const set = retention.nodesRetainedByZone.get(zone);\n      set === null || set === void 0 ? void 0 : set.delete(nodeKey);\n\n      if (set && set.size === 0) {\n        retention.nodesRetainedByZone.delete(zone);\n      }\n    }\n\n    if (retainedBy instanceof RetentionZone$1) {\n      deleteFromZone(retainedBy);\n    } else if (Array.isArray(retainedBy)) {\n      for (const zone of retainedBy) {\n        deleteFromZone(zone);\n      }\n    }\n  };\n}\n\nfunction initializeNodeIfNewToStore(store, treeState, key, trigger) {\n  const storeState = store.getState();\n\n  if (storeState.nodeCleanupFunctions.has(key)) {\n    return;\n  }\n\n  const node = getNode$1(key);\n  const retentionCleanup = initializeRetentionForNode(store, key, node.retainedBy);\n  const nodeCleanup = node.init(store, treeState, trigger);\n  storeState.nodeCleanupFunctions.set(key, () => {\n    nodeCleanup();\n    retentionCleanup();\n  });\n}\n\nfunction initializeNode(store, key, trigger) {\n  initializeNodeIfNewToStore(store, store.getState().currentTree, key, trigger);\n}\n\nfunction cleanUpNode(store, key) {\n  var _state$nodeCleanupFun;\n\n  const state = store.getState();\n  (_state$nodeCleanupFun = state.nodeCleanupFunctions.get(key)) === null || _state$nodeCleanupFun === void 0 ? void 0 : _state$nodeCleanupFun();\n  state.nodeCleanupFunctions.delete(key);\n} // Get the current value loadable of a node and update the state.\n// Update dependencies and subscriptions for selectors.\n// Update saved value validation for atoms.\n\n\nfunction getNodeLoadable(store, state, key) {\n  initializeNodeIfNewToStore(store, state, key, 'get');\n  return getNode$1(key).get(store, state);\n} // Peek at the current value loadable for a node without any evaluation or state change\n\n\nfunction peekNodeLoadable(store, state, key) {\n  return getNode$1(key).peek(store, state);\n} // Write value directly to state bypassing the Node interface as the node\n// definitions may not have been loaded yet when processing the initial snapshot.\n\n\nfunction setUnvalidatedAtomValue_DEPRECATED(state, key, newValue) {\n  var _node$invalidate;\n\n  const node = getNodeMaybe$1(key);\n  node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n  return { ...state,\n    atomValues: state.atomValues.clone().delete(key),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone().set(key, newValue),\n    dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)\n  };\n} // Return the discovered dependencies and values to be written by setting\n// a node value. (Multiple values may be written due to selectors getting to\n// set upstreams; deps may be discovered because of reads in updater functions.)\n\n\nfunction setNodeValue(store, state, key, newValue) {\n  const node = getNode$1(key);\n\n  if (node.set == null) {\n    throw new ReadOnlyRecoilValueError(`Attempt to set read-only RecoilValue: ${key}`);\n  }\n\n  const set = node.set; // so flow doesn't lose the above refinement.\n\n  initializeNodeIfNewToStore(store, state, key, 'set');\n  return set(store, state, newValue);\n}\n\nfunction peekNodeInfo(store, state, key) {\n  const storeState = store.getState();\n  const graph = store.getGraph(state.version);\n  const type = getNode$1(key).nodeType;\n  return Recoil_lazyProxy({\n    type\n  }, {\n    loadable: () => peekNodeLoadable(store, state, key),\n    isActive: () => storeState.knownAtoms.has(key) || storeState.knownSelectors.has(key),\n    isSet: () => type === 'selector' ? false : state.atomValues.has(key),\n    isModified: () => state.dirtyAtoms.has(key),\n    // Report current dependencies.  If the node hasn't been evaluated, then\n    // dependencies may be missing based on the current state.\n    deps: () => {\n      var _graph$nodeDeps$get;\n\n      return recoilValuesForKeys$1((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []);\n    },\n    // Reports all \"current\" subscribers.  Evaluating other nodes or\n    // previous in-progress async evaluations may introduce new subscribers.\n    subscribers: () => {\n      var _storeState$nodeToCom, _storeState$nodeToCom2;\n\n      return {\n        nodes: recoilValuesForKeys$1(Recoil_filterIterable(getDownstreamNodes(store, state, new Set([key])), nodeKey => nodeKey !== key)),\n        components: Recoil_mapIterable((_storeState$nodeToCom = (_storeState$nodeToCom2 = storeState.nodeToComponentSubscriptions.get(key)) === null || _storeState$nodeToCom2 === void 0 ? void 0 : _storeState$nodeToCom2.values()) !== null && _storeState$nodeToCom !== void 0 ? _storeState$nodeToCom : [], ([name]) => ({\n          name\n        }))\n      };\n    }\n  });\n} // Find all of the recursively dependent nodes\n\n\nfunction getDownstreamNodes(store, state, keys) {\n  const visitedNodes = new Set();\n  const visitingNodes = Array.from(keys);\n  const graph = store.getGraph(state.version);\n\n  for (let key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n    var _graph$nodeToNodeSubs;\n\n    visitedNodes.add(key);\n    const subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;\n\n    for (const downstreamNode of subscribedNodes) {\n      if (!visitedNodes.has(downstreamNode)) {\n        visitingNodes.push(downstreamNode);\n      }\n    }\n  }\n\n  return visitedNodes;\n}\n\nvar Recoil_FunctionalCore = {\n  getNodeLoadable,\n  peekNodeLoadable,\n  setNodeValue,\n  initializeNode,\n  cleanUpNode,\n  setUnvalidatedAtomValue_DEPRECATED,\n  peekNodeInfo,\n  getDownstreamNodes\n};\n\nvar _createMutableSource, _useMutableSource, _useSyncExternalStore;\n\n\n\n\n\nconst createMutableSource = // flowlint-next-line unclear-type:off\n(_createMutableSource = react__WEBPACK_IMPORTED_MODULE_0__.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : react__WEBPACK_IMPORTED_MODULE_0__.unstable_createMutableSource;\nconst useMutableSource = // flowlint-next-line unclear-type:off\n(_useMutableSource = react__WEBPACK_IMPORTED_MODULE_0__.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react__WEBPACK_IMPORTED_MODULE_0__.unstable_useMutableSource; // https://github.com/reactwg/react-18/discussions/86\n\nconst useSyncExternalStore = // flowlint-next-line unclear-type:off\n(_useSyncExternalStore = react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore) !== null && _useSyncExternalStore !== void 0 ? _useSyncExternalStore : // flowlint-next-line unclear-type:off\nreact__WEBPACK_IMPORTED_MODULE_0__.unstable_useSyncExternalStore;\n\n/**\n * mode: The React API and approach to use for syncing state with React\n * early: Re-renders from Recoil updates occur:\n *    1) earlier\n *    2) in sync with React updates in the same batch\n *    3) before transaction observers instead of after.\n * concurrent: Is the current mode compatible with Concurrent Mode and useTransition()\n */\nfunction reactMode() {\n  // NOTE: This mode is currently broken with some Suspense cases\n  // see Recoil_selector-test.js\n  if (Recoil_gkx('recoil_transition_support')) {\n    return {\n      mode: 'TRANSITION_SUPPORT',\n      early: true,\n      concurrent: true\n    };\n  }\n\n  if (Recoil_gkx('recoil_sync_external_store') && useSyncExternalStore != null) {\n    return {\n      mode: 'SYNC_EXTERNAL_STORE',\n      early: true,\n      concurrent: false\n    };\n  }\n\n  if (Recoil_gkx('recoil_mutable_source') && useMutableSource != null && typeof window !== 'undefined' && !window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE) {\n    return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {\n      mode: 'MUTABLE_SOURCE',\n      early: true,\n      concurrent: true\n    } : {\n      mode: 'MUTABLE_SOURCE',\n      early: false,\n      concurrent: false\n    };\n  }\n\n  return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {\n    mode: 'LEGACY',\n    early: true,\n    concurrent: false\n  } : {\n    mode: 'LEGACY',\n    early: false,\n    concurrent: false\n  };\n}\n\nvar Recoil_ReactMode = {\n  createMutableSource,\n  useMutableSource,\n  useSyncExternalStore,\n  reactMode\n};\n\nconst {\n  getDownstreamNodes: getDownstreamNodes$1,\n  getNodeLoadable: getNodeLoadable$1,\n  setNodeValue: setNodeValue$1\n} = Recoil_FunctionalCore;\n\nconst {\n  getNextComponentID: getNextComponentID$1\n} = Recoil_Keys;\n\nconst {\n  getNode: getNode$2,\n  getNodeMaybe: getNodeMaybe$2\n} = Recoil_Node;\n\nconst {\n  DefaultValue: DefaultValue$1,\n  RecoilValueNotReady: RecoilValueNotReady$1\n} = Recoil_Node;\n\nconst {\n  reactMode: reactMode$1\n} = Recoil_ReactMode;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  isRecoilValue: isRecoilValue$1\n} = Recoil_RecoilValue$1;\n\n\n\n\n\nfunction getRecoilValueAsLoadable(store, {\n  key\n}, treeState = store.getState().currentTree) {\n  var _storeState$nextTree, _storeState$previousT;\n\n  // Reading from an older tree can cause bugs because the dependencies that we\n  // discover during the read are lost.\n  const storeState = store.getState();\n\n  if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to read from a discarded tree');\n  }\n\n  const loadable = getNodeLoadable$1(store, treeState, key);\n\n  if (loadable.state === 'loading') {\n    loadable.contents.catch(() => {\n      /**\n       * HACK: intercept thrown error here to prevent an uncaught promise exception. Ideally this would happen closer to selector\n       * execution (perhaps introducing a new ERROR class to be resolved by async selectors that are in an error state)\n       */\n      return;\n    });\n  }\n\n  return loadable;\n}\n\nfunction applyAtomValueWrites(atomValues, writes) {\n  const result = atomValues.clone();\n  writes.forEach((v, k) => {\n    if (v.state === 'hasValue' && v.contents instanceof DefaultValue$1) {\n      result.delete(k);\n    } else {\n      result.set(k, v);\n    }\n  });\n  return result;\n}\n\nfunction valueFromValueOrUpdater(store, state, {\n  key\n}, valueOrUpdater) {\n  if (typeof valueOrUpdater === 'function') {\n    // Updater form: pass in the current value. Throw if the current value\n    // is unavailable (namely when updating an async selector that's\n    // pending or errored):\n    const current = getNodeLoadable$1(store, state, key);\n\n    if (current.state === 'loading') {\n      throw new RecoilValueNotReady$1(key);\n    } else if (current.state === 'hasError') {\n      throw current.contents;\n    } // T itself may be a function, so our refinement is not sufficient:\n\n\n    return valueOrUpdater(current.contents); // flowlint-line unclear-type:off\n  } else {\n    return valueOrUpdater;\n  }\n}\n\nfunction applyAction(store, state, action) {\n  if (action.type === 'set') {\n    const {\n      recoilValue,\n      valueOrUpdater\n    } = action;\n    const newValue = valueFromValueOrUpdater(store, state, recoilValue, valueOrUpdater);\n    const writes = setNodeValue$1(store, state, recoilValue.key, newValue);\n\n    for (const [key, loadable] of writes.entries()) {\n      writeLoadableToTreeState(state, key, loadable);\n    }\n  } else if (action.type === 'setLoadable') {\n    const {\n      recoilValue: {\n        key\n      },\n      loadable\n    } = action;\n    writeLoadableToTreeState(state, key, loadable);\n  } else if (action.type === 'markModified') {\n    const {\n      recoilValue: {\n        key\n      }\n    } = action;\n    state.dirtyAtoms.add(key);\n  } else if (action.type === 'setUnvalidated') {\n    var _node$invalidate;\n\n    // Write value directly to state bypassing the Node interface as the node\n    // definitions may not have been loaded yet when processing the initial snapshot.\n    const {\n      recoilValue: {\n        key\n      },\n      unvalidatedValue\n    } = action;\n    const node = getNodeMaybe$2(key);\n    node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n    state.atomValues.delete(key);\n    state.nonvalidatedAtoms.set(key, unvalidatedValue);\n    state.dirtyAtoms.add(key);\n  } else {\n    Recoil_recoverableViolation(`Unknown action ${action.type}`);\n  }\n}\n\nfunction writeLoadableToTreeState(state, key, loadable) {\n  if (loadable.state === 'hasValue' && loadable.contents instanceof DefaultValue$1) {\n    state.atomValues.delete(key);\n  } else {\n    state.atomValues.set(key, loadable);\n  }\n\n  state.dirtyAtoms.add(key);\n  state.nonvalidatedAtoms.delete(key);\n}\n\nfunction applyActionsToStore(store, actions) {\n  store.replaceState(state => {\n    const newState = copyTreeState(state);\n\n    for (const action of actions) {\n      applyAction(store, newState, action);\n    }\n\n    invalidateDownstreams(store, newState);\n    return newState;\n  });\n}\n\nfunction queueOrPerformStateUpdate(store, action) {\n  if (batchStack.length) {\n    const actionsByStore = batchStack[batchStack.length - 1];\n    let actions = actionsByStore.get(store);\n\n    if (!actions) {\n      actionsByStore.set(store, actions = []);\n    }\n\n    actions.push(action);\n  } else {\n    applyActionsToStore(store, [action]);\n  }\n}\n\nconst batchStack = [];\n\nfunction batchStart() {\n  const actionsByStore = new Map();\n  batchStack.push(actionsByStore);\n  return () => {\n    for (const [store, actions] of actionsByStore) {\n      applyActionsToStore(store, actions);\n    }\n\n    const popped = batchStack.pop();\n\n    if (popped !== actionsByStore) {\n      Recoil_recoverableViolation('Incorrect order of batch popping');\n    }\n  };\n}\n\nfunction copyTreeState(state) {\n  return { ...state,\n    atomValues: state.atomValues.clone(),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone(),\n    dirtyAtoms: new Set(state.dirtyAtoms)\n  };\n}\n\nfunction invalidateDownstreams(store, state) {\n  // Inform any nodes that were changed or downstream of changes so that they\n  // can clear out any caches as needed due to the update:\n  const downstreams = getDownstreamNodes$1(store, state, state.dirtyAtoms);\n\n  for (const key of downstreams) {\n    var _getNodeMaybe, _getNodeMaybe$invalid;\n\n    (_getNodeMaybe = getNodeMaybe$2(key)) === null || _getNodeMaybe === void 0 ? void 0 : (_getNodeMaybe$invalid = _getNodeMaybe.invalidate) === null || _getNodeMaybe$invalid === void 0 ? void 0 : _getNodeMaybe$invalid.call(_getNodeMaybe, state);\n  }\n}\n\nfunction setRecoilValue(store, recoilValue, valueOrUpdater) {\n  queueOrPerformStateUpdate(store, {\n    type: 'set',\n    recoilValue,\n    valueOrUpdater\n  });\n}\n\nfunction setRecoilValueLoadable(store, recoilValue, loadable) {\n  if (loadable instanceof DefaultValue$1) {\n    return setRecoilValue(store, recoilValue, loadable);\n  }\n\n  queueOrPerformStateUpdate(store, {\n    type: 'setLoadable',\n    recoilValue,\n    loadable: loadable\n  });\n}\n\nfunction markRecoilValueModified(store, recoilValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'markModified',\n    recoilValue\n  });\n}\n\nfunction setUnvalidatedRecoilValue(store, recoilValue, unvalidatedValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'setUnvalidated',\n    recoilValue,\n    unvalidatedValue\n  });\n}\n\nfunction subscribeToRecoilValue(store, {\n  key\n}, callback, componentDebugName = null) {\n  const subID = getNextComponentID$1();\n  const storeState = store.getState();\n\n  if (!storeState.nodeToComponentSubscriptions.has(key)) {\n    storeState.nodeToComponentSubscriptions.set(key, new Map());\n  }\n\n  Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, [componentDebugName !== null && componentDebugName !== void 0 ? componentDebugName : '<not captured>', callback]); // Handle the case that, during the same tick that we are subscribing, an atom\n  // has been updated by some effect handler. Otherwise we will miss the update.\n\n  const mode = reactMode$1();\n\n  if (mode.early && (mode.mode === 'LEGACY' || mode.mode === 'MUTABLE_SOURCE')) {\n    const nextTree = store.getState().nextTree;\n\n    if (nextTree && nextTree.dirtyAtoms.has(key)) {\n      callback(nextTree);\n    }\n  }\n\n  return {\n    release: () => {\n      const releaseStoreState = store.getState();\n      const subs = releaseStoreState.nodeToComponentSubscriptions.get(key);\n\n      if (subs === undefined || !subs.has(subID)) {\n        Recoil_recoverableViolation(`Subscription missing at release time for atom ${key}. This is a bug in Recoil.`);\n        return;\n      }\n\n      subs.delete(subID);\n\n      if (subs.size === 0) {\n        releaseStoreState.nodeToComponentSubscriptions.delete(key);\n      }\n    }\n  };\n}\n\nfunction refreshRecoilValue(store, recoilValue) {\n  var _node$clearCache;\n\n  const {\n    currentTree\n  } = store.getState();\n  const node = getNode$2(recoilValue.key);\n  (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, currentTree);\n}\n\nvar Recoil_RecoilValueInterface = {\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  getRecoilValueAsLoadable,\n  setRecoilValue,\n  setRecoilValueLoadable,\n  markRecoilValueModified,\n  setUnvalidatedRecoilValue,\n  subscribeToRecoilValue,\n  isRecoilValue: isRecoilValue$1,\n  applyAtomValueWrites,\n  // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot\n  batchStart,\n  writeLoadableToTreeState,\n  invalidateDownstreams,\n  copyTreeState,\n  refreshRecoilValue,\n  invalidateDownstreams_FOR_TESTING: invalidateDownstreams\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * The someSet() method tests whether some elements in the given Set pass the\n * test implemented by the provided function.\n */\n\nfunction someSet(set, callback, context) {\n  const iterator = set.entries();\n  let current = iterator.next();\n\n  while (!current.done) {\n    const entry = current.value;\n\n    if (callback.call(context, entry[1], entry[0], set)) {\n      return true;\n    }\n\n    current = iterator.next();\n  }\n\n  return false;\n}\n\nvar Recoil_someSet = someSet;\n\nconst {\n  cleanUpNode: cleanUpNode$1\n} = Recoil_FunctionalCore;\n\nconst {\n  deleteNodeConfigIfPossible: deleteNodeConfigIfPossible$1,\n  getNode: getNode$3\n} = Recoil_Node;\n\nconst {\n  RetentionZone: RetentionZone$2\n} = Recoil_RetentionZone;\n\n\n\n\n\n\n\n // Components that aren't mounted after suspending for this long will be assumed\n// to be discarded and their resources released.\n\n\nconst SUSPENSE_TIMEOUT_MS = 120000;\nconst emptySet$1 = new Set();\n\nfunction releaseRetainablesNowOnCurrentTree(store, retainables) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree;\n\n  if (storeState.nextTree) {\n    Recoil_recoverableViolation('releaseNodesNowOnCurrentTree should only be called at the end of a batch');\n    return; // leak memory rather than erase something that's about to be used.\n  }\n\n  const nodes = new Set();\n\n  for (const r of retainables) {\n    if (r instanceof RetentionZone$2) {\n      for (const n of nodesRetainedByZone(storeState, r)) {\n        nodes.add(n);\n      }\n    } else {\n      nodes.add(r);\n    }\n  }\n\n  const releasableNodes = findReleasableNodes(store, nodes);\n\n  for (const node of releasableNodes) {\n    releaseNode(store, treeState, node);\n  }\n}\n\nfunction findReleasableNodes(store, searchFromNodes) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree;\n  const graph = store.getGraph(treeState.version);\n  const releasableNodes = new Set(); // mutated to collect answer\n\n  const nonReleasableNodes = new Set();\n  findReleasableNodesInner(searchFromNodes);\n  return releasableNodes;\n\n  function findReleasableNodesInner(searchFromNodes) {\n    const releasableNodesFoundThisIteration = new Set();\n    const downstreams = getDownstreamNodesInTopologicalOrder(store, treeState, searchFromNodes, releasableNodes, // don't descend into these\n    nonReleasableNodes // don't descend into these\n    ); // Find which of the downstream nodes are releasable and which are not:\n\n    for (const node of downstreams) {\n      var _storeState$retention;\n\n      // Not releasable if configured to be retained forever:\n      if (getNode$3(node).retainedBy === 'recoilRoot') {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if retained directly by a component:\n\n\n      if (((_storeState$retention = storeState.retention.referenceCounts.get(node)) !== null && _storeState$retention !== void 0 ? _storeState$retention : 0) > 0) {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if retained by a zone:\n\n\n      if (zonesThatCouldRetainNode(node).some(z => storeState.retention.referenceCounts.get(z))) {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if it has a non-releasable child (which will already be in\n      // nonReleasableNodes because we are going in topological order):\n\n\n      const nodeChildren = graph.nodeToNodeSubscriptions.get(node);\n\n      if (nodeChildren && Recoil_someSet(nodeChildren, child => nonReleasableNodes.has(child))) {\n        nonReleasableNodes.add(node);\n        continue;\n      }\n\n      releasableNodes.add(node);\n      releasableNodesFoundThisIteration.add(node);\n    } // If we found any releasable nodes, we need to walk UP from those nodes to\n    // find whether their parents can now be released as well:\n\n\n    const parents = new Set();\n\n    for (const node of releasableNodesFoundThisIteration) {\n      for (const parent of (_graph$nodeDeps$get = graph.nodeDeps.get(node)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : emptySet$1) {\n        var _graph$nodeDeps$get;\n\n        if (!releasableNodes.has(parent)) {\n          parents.add(parent);\n        }\n      }\n    }\n\n    if (parents.size) {\n      findReleasableNodesInner(parents);\n    }\n  }\n} // Children before parents\n\n\nfunction getDownstreamNodesInTopologicalOrder(store, treeState, nodes, // Mutable set is destroyed in place\ndoNotDescendInto1, doNotDescendInto2) {\n  const graph = store.getGraph(treeState.version);\n  const answer = [];\n  const visited = new Set();\n\n  while (nodes.size > 0) {\n    visit(Recoil_nullthrows(nodes.values().next().value));\n  }\n\n  return answer;\n\n  function visit(node) {\n    if (doNotDescendInto1.has(node) || doNotDescendInto2.has(node)) {\n      nodes.delete(node);\n      return;\n    }\n\n    if (visited.has(node)) {\n      return;\n    }\n\n    const children = graph.nodeToNodeSubscriptions.get(node);\n\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n\n    visited.add(node);\n    nodes.delete(node);\n    answer.push(node);\n  }\n}\n\nfunction releaseNode(store, treeState, node) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  } // Atom effects, in-closure caches, etc.:\n\n\n  cleanUpNode$1(store, node); // Delete from store state:\n\n  const storeState = store.getState();\n  storeState.knownAtoms.delete(node);\n  storeState.knownSelectors.delete(node);\n  storeState.nodeTransactionSubscriptions.delete(node);\n  storeState.retention.referenceCounts.delete(node);\n  const zones = zonesThatCouldRetainNode(node);\n\n  for (const zone of zones) {\n    var _storeState$retention2;\n\n    (_storeState$retention2 = storeState.retention.nodesRetainedByZone.get(zone)) === null || _storeState$retention2 === void 0 ? void 0 : _storeState$retention2.delete(node);\n  } // Note that we DO NOT delete from nodeToComponentSubscriptions because this\n  // already happens when the last component that was retaining the node unmounts,\n  // and this could happen either before or after that.\n  // Delete from TreeState and dep graph:\n\n\n  treeState.atomValues.delete(node);\n  treeState.dirtyAtoms.delete(node);\n  treeState.nonvalidatedAtoms.delete(node);\n  const graph = storeState.graphsByVersion.get(treeState.version);\n\n  if (graph) {\n    const deps = graph.nodeDeps.get(node);\n\n    if (deps !== undefined) {\n      graph.nodeDeps.delete(node);\n\n      for (const dep of deps) {\n        var _graph$nodeToNodeSubs;\n\n        (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(dep)) === null || _graph$nodeToNodeSubs === void 0 ? void 0 : _graph$nodeToNodeSubs.delete(node);\n      }\n    } // No need to delete sub's deps as there should be no subs at this point.\n    // But an invariant would require deleting nodes in topological order.\n\n\n    graph.nodeToNodeSubscriptions.delete(node);\n  } // Node config (for family members only as their configs can be recreated, and\n  // only if they are not retained within any other Stores):\n\n\n  deleteNodeConfigIfPossible$1(node);\n}\n\nfunction nodesRetainedByZone(storeState, zone) {\n  var _storeState$retention3;\n\n  return (_storeState$retention3 = storeState.retention.nodesRetainedByZone.get(zone)) !== null && _storeState$retention3 !== void 0 ? _storeState$retention3 : emptySet$1;\n}\n\nfunction zonesThatCouldRetainNode(node) {\n  const retainedBy = getNode$3(node).retainedBy;\n\n  if (retainedBy === undefined || retainedBy === 'components' || retainedBy === 'recoilRoot') {\n    return [];\n  } else if (retainedBy instanceof RetentionZone$2) {\n    return [retainedBy];\n  } else {\n    return retainedBy; // it's an array of zones\n  }\n}\n\nfunction scheduleOrPerformPossibleReleaseOfRetainable(store, retainable) {\n  const state = store.getState();\n\n  if (state.nextTree) {\n    state.retention.retainablesToCheckForRelease.add(retainable);\n  } else {\n    releaseRetainablesNowOnCurrentTree(store, new Set([retainable]));\n  }\n}\n\nfunction updateRetainCount(store, retainable, delta) {\n  var _map$get;\n\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const map = store.getState().retention.referenceCounts;\n  const newCount = ((_map$get = map.get(retainable)) !== null && _map$get !== void 0 ? _map$get : 0) + delta;\n\n  if (newCount === 0) {\n    updateRetainCountToZero(store, retainable);\n  } else {\n    map.set(retainable, newCount);\n  }\n}\n\nfunction updateRetainCountToZero(store, retainable) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const map = store.getState().retention.referenceCounts;\n  map.delete(retainable);\n  scheduleOrPerformPossibleReleaseOfRetainable(store, retainable);\n}\n\nfunction releaseScheduledRetainablesNow(store) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const state = store.getState();\n  releaseRetainablesNowOnCurrentTree(store, state.retention.retainablesToCheckForRelease);\n  state.retention.retainablesToCheckForRelease.clear();\n}\n\nfunction retainedByOptionWithDefault(r) {\n  // The default will change from 'recoilRoot' to 'components' in the future.\n  return r === undefined ? 'recoilRoot' : r;\n}\n\nvar Recoil_Retention = {\n  SUSPENSE_TIMEOUT_MS,\n  updateRetainCount,\n  updateRetainCountToZero,\n  releaseScheduledRetainablesNow,\n  retainedByOptionWithDefault\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\nconst {\n  unstable_batchedUpdates\n} = react_dom__WEBPACK_IMPORTED_MODULE_1__;\n\nvar ReactBatchedUpdates = {\n  unstable_batchedUpdates\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\n// @fb-only: const {unstable_batchedUpdates} = require('ReactDOMComet');\n// prettier-ignore\nconst {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n} = ReactBatchedUpdates; // @oss-only\n\n\nvar Recoil_ReactBatchedUpdates = {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\nconst {\n  batchStart: batchStart$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  unstable_batchedUpdates: unstable_batchedUpdates$2\n} = Recoil_ReactBatchedUpdates;\n\nlet batcher = unstable_batchedUpdates$2; // flowlint-next-line unclear-type:off\n\n/**\n * Sets the provided batcher function as the batcher function used by Recoil.\n *\n * Set the batcher to a custom batcher for your renderer,\n * if you use a renderer other than React DOM or React Native.\n */\nconst setBatcher = newBatcher => {\n  batcher = newBatcher;\n};\n/**\n * Returns the current batcher function.\n */\n\n\nconst getBatcher = () => batcher;\n/**\n * Calls the current batcher function and passes the\n * provided callback function.\n */\n\n\nconst batchUpdates = callback => {\n  batcher(() => {\n    let batchEnd = () => undefined;\n\n    try {\n      batchEnd = batchStart$1();\n      callback();\n    } finally {\n      batchEnd();\n    }\n  });\n};\n\nvar Recoil_Batching = {\n  getBatcher,\n  setBatcher,\n  batchUpdates\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Combines multiple Iterables into a single Iterable.\n * Traverses the input Iterables in the order provided and maintains the order\n * of their elements.\n *\n * Example:\n * ```\n * const r = Array.from(concatIterables(['a', 'b'], ['c'], ['d', 'e', 'f']));\n * r == ['a', 'b', 'c', 'd', 'e', 'f'];\n * ```\n */\n\nfunction* concatIterables(iters) {\n  for (const iter of iters) {\n    for (const val of iter) {\n      yield val;\n    }\n  }\n}\n\nvar Recoil_concatIterables = concatIterables;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nconst isSSR = typeof window === 'undefined';\nconst isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'; // eslint-disable-line fb-www/typeof-undefined\n\nvar Recoil_Environment = {\n  isSSR,\n  isReactNative\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Caches a function's results based on the key returned by the passed\n * hashFunction.\n */\n\nfunction memoizeWithArgsHash(fn, hashFunction) {\n  let cache;\n\n  const memoizedFn = (...args) => {\n    if (!cache) {\n      cache = {};\n    }\n\n    const key = hashFunction(...args);\n\n    if (!Object.hasOwnProperty.call(cache, key)) {\n      cache[key] = fn.apply(this, args);\n    }\n\n    return cache[key];\n  };\n\n  return memoizedFn;\n}\n/**\n * Caches a function's results based on a comparison of the arguments.\n * Only caches the last return of the function.\n * Defaults to reference equality\n */\n\n\nfunction memoizeOneWithArgsHash(fn, hashFunction) {\n  let lastKey;\n  let lastResult; // breaking cache when arguments change\n\n  const memoizedFn = (...args) => {\n    const key = hashFunction(...args);\n\n    if (lastKey === key) {\n      return lastResult;\n    }\n\n    lastKey = key;\n    lastResult = fn.apply(this, args);\n    return lastResult;\n  };\n\n  return memoizedFn;\n}\n/**\n * Caches a function's results based on a comparison of the arguments.\n * Only caches the last return of the function.\n * Defaults to reference equality\n */\n\n\nfunction memoizeOneWithArgsHashAndInvalidation(fn, hashFunction) {\n  let lastKey;\n  let lastResult; // breaking cache when arguments change\n\n  const memoizedFn = (...args) => {\n    const key = hashFunction(...args);\n\n    if (lastKey === key) {\n      return lastResult;\n    }\n\n    lastKey = key;\n    lastResult = fn.apply(this, args);\n    return lastResult;\n  };\n\n  const invalidate = () => {\n    lastKey = null;\n  };\n\n  return [memoizedFn, invalidate];\n}\n\nvar Recoil_Memoize = {\n  memoizeWithArgsHash,\n  memoizeOneWithArgsHash,\n  memoizeOneWithArgsHashAndInvalidation\n};\n\nconst {\n  batchUpdates: batchUpdates$1\n} = Recoil_Batching;\n\nconst {\n  initializeNode: initializeNode$1,\n  peekNodeInfo: peekNodeInfo$1\n} = Recoil_FunctionalCore;\n\nconst {\n  graph: graph$1\n} = Recoil_Graph;\n\nconst {\n  getNextStoreID: getNextStoreID$1\n} = Recoil_Keys;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$1,\n  recoilValues: recoilValues$1,\n  recoilValuesForKeys: recoilValuesForKeys$2\n} = Recoil_Node;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$2,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$1,\n  setRecoilValue: setRecoilValue$1,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  updateRetainCount: updateRetainCount$1\n} = Recoil_Retention;\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$2,\n  makeEmptyStoreState: makeEmptyStoreState$1\n} = Recoil_State;\n\n\n\nconst {\n  isSSR: isSSR$1\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\nconst {\n  memoizeOneWithArgsHashAndInvalidation: memoizeOneWithArgsHashAndInvalidation$1\n} = Recoil_Memoize;\n\n\n\n // Opaque at this surface because it's part of the public API from here.\n\n\nconst retainWarning = (/* unused pure expression or super */ null && (`\nRecoil Snapshots only last for the duration of the callback they are provided to. To keep a Snapshot longer, do this:\n\n  const release = snapshot.retain();\n  try {\n    await doSomethingWithSnapshot(snapshot);\n  } finally {\n    release();\n  }\n\nThis is currently a DEV-only warning but will become a thrown exception in the next release of Recoil.\n`)); // A \"Snapshot\" is \"read-only\" and captures a specific set of values of atoms.\n// However, the data-flow-graph and selector values may evolve as selector\n// evaluation functions are executed and async selectors resolve.\n\nclass Snapshot {\n  // eslint-disable-next-line fb-www/no-uninitialized-properties\n  constructor(storeState) {\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_refCount\", 1);\n\n    _defineProperty(this, \"getLoadable\", recoilValue => {\n      this.checkRefCount_INTERNAL();\n      return getRecoilValueAsLoadable$1(this._store, recoilValue);\n    });\n\n    _defineProperty(this, \"getPromise\", recoilValue => {\n      this.checkRefCount_INTERNAL();\n      return this.getLoadable(recoilValue).toPromise();\n    });\n\n    _defineProperty(this, \"getNodes_UNSTABLE\", opt => {\n      this.checkRefCount_INTERNAL(); // TODO Deal with modified selectors\n\n      if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {\n        if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {\n          return [];\n        }\n\n        const state = this._store.getState().currentTree;\n\n        return recoilValuesForKeys$2(state.dirtyAtoms);\n      }\n\n      const knownAtoms = this._store.getState().knownAtoms;\n\n      const knownSelectors = this._store.getState().knownSelectors;\n\n      return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys$2(Recoil_concatIterables([this._store.getState().knownAtoms, this._store.getState().knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), ({\n        key\n      }) => !knownAtoms.has(key) && !knownSelectors.has(key));\n    });\n\n    _defineProperty(this, \"getInfo_UNSTABLE\", ({\n      key\n    }) => {\n      this.checkRefCount_INTERNAL(); // $FlowFixMe[escaped-generic]\n\n      return peekNodeInfo$1(this._store, this._store.getState().currentTree, key);\n    });\n\n    _defineProperty(this, \"map\", mapper => {\n      this.checkRefCount_INTERNAL();\n      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n      mapper(mutableSnapshot); // if removing batchUpdates from `set` add it here\n\n      return mutableSnapshot;\n    });\n\n    _defineProperty(this, \"asyncMap\", async mapper => {\n      this.checkRefCount_INTERNAL();\n      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n      mutableSnapshot.retain(); // Retain new snapshot during async mapper\n\n      await mapper(mutableSnapshot); // Continue to retain the new snapshot for the user, but auto-release it\n      // after the next tick, the same as a new synchronous snapshot.\n\n      mutableSnapshot.autoRelease_INTERNAL();\n      return mutableSnapshot;\n    });\n\n    this._store = {\n      storeID: getNextStoreID$1(),\n      getState: () => storeState,\n      replaceState: replacer => {\n        storeState.currentTree = replacer(storeState.currentTree); // no batching so nextTree is never active\n      },\n      getGraph: version => {\n        const graphs = storeState.graphsByVersion;\n\n        if (graphs.has(version)) {\n          return Recoil_nullthrows(graphs.get(version));\n        }\n\n        const newGraph = graph$1();\n        graphs.set(version, newGraph);\n        return newGraph;\n      },\n      subscribeToTransactions: () => ({\n        release: () => {}\n      }),\n      addTransactionMetadata: () => {\n        throw Recoil_err('Cannot subscribe to Snapshots');\n      }\n    }; // Initialize any nodes that are live in the parent store (primarily so that\n    // this snapshot gets counted towards the node's live stores count).\n    // TODO Optimize this when cloning snapshots for callbacks\n\n    for (const nodeKey of this._store.getState().knownAtoms) {\n      initializeNode$1(this._store, nodeKey, 'get');\n      updateRetainCount$1(this._store, nodeKey, 1);\n    }\n\n    this.autoRelease_INTERNAL();\n  }\n\n  retain() {\n    if (this._refCount <= 0) {\n      if (false) {} else {\n        Recoil_recoverableViolation('Attempt to retain() Snapshot that was already released.');\n      }\n    }\n\n    this._refCount++;\n    let released = false;\n    return () => {\n      if (!released) {\n        released = true;\n\n        this._release();\n      }\n    };\n  }\n  /**\n   * Release the snapshot on the next tick.  This means the snapshot is retained\n   * during the execution of the current function using it.\n   */\n\n\n  autoRelease_INTERNAL() {\n    if (!isSSR$1) {\n      window.setTimeout(() => this._release(), 0);\n    }\n  }\n\n  _release() {\n    this._refCount--;\n\n    if (this._refCount === 0) {\n      this._store.getState().nodeCleanupFunctions.forEach(cleanup => cleanup());\n\n      this._store.getState().nodeCleanupFunctions.clear();\n\n      if (!Recoil_gkx('recoil_memory_managament_2020')) {\n        return;\n      } // Temporarily nerfing this to allow us to find broken call sites without\n      // actually breaking anybody yet.\n      // for (const k of this._store.getState().knownAtoms) {\n      //   updateRetainCountToZero(this._store, k);\n      // }\n\n    } else if (this._refCount < 0) {\n      if (false) {}\n    }\n  }\n\n  isRetained() {\n    return this._refCount > 0;\n  }\n\n  checkRefCount_INTERNAL() {\n    if (Recoil_gkx('recoil_memory_managament_2020') && this._refCount <= 0) {\n      if (false) {} // What we will ship later:\n      // throw err(retainWarning);\n\n    }\n  }\n\n  getStore_INTERNAL() {\n    this.checkRefCount_INTERNAL();\n    return this._store;\n  }\n\n  getID() {\n    this.checkRefCount_INTERNAL();\n    return this._store.getState().currentTree.stateID;\n  } // We want to allow the methods to be destructured and used as accessors\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n}\n\nfunction cloneStoreState(store, treeState, bumpVersion = false) {\n  const storeState = store.getState();\n  const version = bumpVersion ? getNextTreeStateVersion$2() : treeState.version;\n  return {\n    currentTree: bumpVersion ? {\n      // TODO snapshots shouldn't really have versions because a new version number\n      // is always assigned when the snapshot is gone to.\n      version,\n      stateID: version,\n      transactionMetadata: { ...treeState.transactionMetadata\n      },\n      dirtyAtoms: new Set(treeState.dirtyAtoms),\n      atomValues: treeState.atomValues.clone(),\n      nonvalidatedAtoms: treeState.nonvalidatedAtoms.clone()\n    } : treeState,\n    commitDepth: 0,\n    nextTree: null,\n    previousTree: null,\n    knownAtoms: new Set(storeState.knownAtoms),\n    // FIXME here's a copy\n    knownSelectors: new Set(storeState.knownSelectors),\n    // FIXME here's a copy\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    // FIXME here's a copy\n    // Create blank cleanup handlers for atoms so snapshots don't re-run\n    // atom effects.\n    nodeCleanupFunctions: new Map(Recoil_mapIterable(storeState.nodeCleanupFunctions.entries(), ([key]) => [key, () => {}]))\n  };\n} // Factory to build a fresh snapshot\n\n\nfunction freshSnapshot(initializeState) {\n  const snapshot = new Snapshot(makeEmptyStoreState$1());\n  return initializeState != null ? snapshot.map(initializeState) : snapshot;\n} // Factory to clone a snapahot state\n\n\nconst [memoizedCloneSnapshot, invalidateMemoizedSnapshot] = memoizeOneWithArgsHashAndInvalidation$1((store, version) => {\n  const storeState = store.getState();\n  const treeState = version === 'current' ? storeState.currentTree : Recoil_nullthrows(storeState.previousTree);\n  return new Snapshot(cloneStoreState(store, treeState));\n}, (store, version) => {\n  var _store$getState$previ;\n\n  return String(version) + String(store.storeID) + String(store.getState().currentTree.version) + String((_store$getState$previ = store.getState().previousTree) === null || _store$getState$previ === void 0 ? void 0 : _store$getState$previ.version);\n});\n\nfunction cloneSnapshot(store, version = 'current') {\n  const snapshot = memoizedCloneSnapshot(store, version);\n\n  if (!snapshot.isRetained()) {\n    invalidateMemoizedSnapshot();\n    return memoizedCloneSnapshot(store, version);\n  }\n\n  return snapshot;\n}\n\nclass MutableSnapshot extends Snapshot {\n  constructor(snapshot, batch) {\n    super(cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true));\n\n    _defineProperty(this, \"_batch\", void 0);\n\n    _defineProperty(this, \"set\", (recoilState, newValueOrUpdater) => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // This batchUpdates ensures this `set` is applied immediately and you can\n      // read the written value after calling `set`. I would like to remove this\n      // behavior and only batch in `Snapshot.map`, but this would be a breaking\n      // change potentially.\n\n      this._batch(() => {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, newValueOrUpdater);\n      });\n    });\n\n    _defineProperty(this, \"reset\", recoilState => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n      this._batch(() => {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n      });\n    });\n\n    _defineProperty(this, \"setUnvalidatedAtomValues_DEPRECATED\", values => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n      batchUpdates$1(() => {\n        for (const [k, v] of values.entries()) {\n          updateRetainCount$1(store, k, 1);\n          setUnvalidatedRecoilValue$1(store, new AbstractRecoilValue$2(k), v);\n        }\n      });\n    });\n\n    this._batch = batch;\n  } // We want to allow the methods to be destructured and used as accessors\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n}\n\nvar Recoil_Snapshot = {\n  Snapshot,\n  MutableSnapshot,\n  freshSnapshot,\n  cloneSnapshot\n};\n\nvar Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;\nvar Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;\nvar Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;\nvar Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\n\nvar Recoil_Snapshot$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Snapshot: Recoil_Snapshot_1,\n  MutableSnapshot: Recoil_Snapshot_2,\n  freshSnapshot: Recoil_Snapshot_3,\n  cloneSnapshot: Recoil_Snapshot_4\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction unionSets(...sets) {\n  const result = new Set();\n\n  for (const set of sets) {\n    for (const value of set) {\n      result.add(value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_unionSets = unionSets;\n\nconst {\n  useRef\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n/**\n * The same as `useRef()` except that if a function is specified then it will\n * call that function to get the value to initialize the reference with.\n * This is similar to how `useState()` behaves when given a function.  It allows\n * the user to avoid generating the initial value for subsequent renders.\n * The tradeoff is that to set the reference to a function itself you need to\n * nest it: useRefInitOnce(() => () => {...});\n */\n\n\nfunction useRefInitOnce(initialValue) {\n  // $FlowExpectedError[incompatible-call]\n  const ref = useRef(initialValue);\n\n  if (ref.current === initialValue && typeof initialValue === 'function') {\n    // $FlowExpectedError[incompatible-use]\n    ref.current = initialValue();\n  }\n\n  return ref;\n}\n\nvar Recoil_useRefInitOnce = useRefInitOnce;\n\n// @fb-only: const RecoilusagelogEvent = require('RecoilusagelogEvent');\n// @fb-only: const RecoilUsageLogFalcoEvent = require('RecoilUsageLogFalcoEvent');\n// @fb-only: const URI = require('URI');\n\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$3,\n  makeEmptyStoreState: makeEmptyStoreState$2\n} = Recoil_State;\n\nconst {\n  cleanUpNode: cleanUpNode$2,\n  getDownstreamNodes: getDownstreamNodes$2,\n  initializeNode: initializeNode$2,\n  setNodeValue: setNodeValue$2,\n  setUnvalidatedAtomValue_DEPRECATED: setUnvalidatedAtomValue_DEPRECATED$1\n} = Recoil_FunctionalCore;\n\nconst {\n  graph: graph$2\n} = Recoil_Graph;\n\nconst {\n  cloneGraph: cloneGraph$1\n} = Recoil_Graph;\n\nconst {\n  getNextStoreID: getNextStoreID$2\n} = Recoil_Keys;\n\nconst {\n  createMutableSource: createMutableSource$1,\n  reactMode: reactMode$2\n} = Recoil_ReactMode;\n\nconst {\n  applyAtomValueWrites: applyAtomValueWrites$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  releaseScheduledRetainablesNow: releaseScheduledRetainablesNow$1\n} = Recoil_Retention;\n\nconst {\n  freshSnapshot: freshSnapshot$1\n} = Recoil_Snapshot$1;\n\n\n\nconst {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef: useRef$1,\n  useState\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction notInAContext() {\n  throw Recoil_err('This component must be used inside a <RecoilRoot> component.');\n}\n\nconst defaultStore = Object.freeze({\n  storeID: getNextStoreID$2(),\n  getState: notInAContext,\n  replaceState: notInAContext,\n  getGraph: notInAContext,\n  subscribeToTransactions: notInAContext,\n  addTransactionMetadata: notInAContext\n});\nlet stateReplacerIsBeingExecuted = false;\n\nfunction startNextTreeIfNeeded(store) {\n  if (stateReplacerIsBeingExecuted) {\n    throw Recoil_err('An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.');\n  }\n\n  const storeState = store.getState();\n\n  if (storeState.nextTree === null) {\n    if (Recoil_gkx('recoil_memory_managament_2020') && Recoil_gkx('recoil_release_on_cascading_update_killswitch_2021')) {\n      // If this is a cascading update (that is, rendering due to one state change\n      // invokes a second state change), we won't have cleaned up retainables yet\n      // because this normally happens after notifying components. Do it before\n      // proceeding with the cascading update so that it remains predictable:\n      if (storeState.commitDepth > 0) {\n        releaseScheduledRetainablesNow$1(store);\n      }\n    }\n\n    const version = storeState.currentTree.version;\n    const nextVersion = getNextTreeStateVersion$3();\n    storeState.nextTree = { ...storeState.currentTree,\n      version: nextVersion,\n      stateID: nextVersion,\n      dirtyAtoms: new Set(),\n      transactionMetadata: {}\n    };\n    storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));\n  }\n}\n\nconst AppContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  current: defaultStore\n});\n\nconst useStoreRef = () => useContext(AppContext); // $FlowExpectedError[incompatible-call]\n\n\nconst MutableSourceContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\n\nfunction useRecoilMutableSource() {\n  const mutableSource = useContext(MutableSourceContext);\n\n  if (mutableSource == null) {\n    Recoil_expectationViolation('Attempted to use a Recoil hook outside of a <RecoilRoot>. ' + '<RecoilRoot> must be an ancestor of any component that uses ' + 'Recoil hooks.');\n  }\n\n  return mutableSource;\n}\n\nfunction notifyComponents(store, storeState, treeState) {\n  const dependentNodes = getDownstreamNodes$2(store, treeState, treeState.dirtyAtoms);\n\n  for (const key of dependentNodes) {\n    const comps = storeState.nodeToComponentSubscriptions.get(key);\n\n    if (comps) {\n      for (const [_subID, [_debugName, callback]] of comps) {\n        callback(treeState);\n      }\n    }\n  }\n}\n\nfunction sendEndOfBatchNotifications(store) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:\n\n  const dirtyAtoms = treeState.dirtyAtoms;\n\n  if (dirtyAtoms.size) {\n    // Execute Node-specific subscribers before global subscribers\n    for (const [key, subscriptions] of storeState.nodeTransactionSubscriptions) {\n      if (dirtyAtoms.has(key)) {\n        for (const [_, subscription] of subscriptions) {\n          subscription(store);\n        }\n      }\n    }\n\n    for (const [_, subscription] of storeState.transactionSubscriptions) {\n      subscription(store);\n    }\n\n    if (!reactMode$2().early || storeState.suspendedComponentResolvers.size > 0) {\n      // Notifying components is needed to wake from suspense, even when using\n      // early rendering.\n      notifyComponents(store, storeState, treeState); // Wake all suspended components so the right one(s) can try to re-render.\n      // We need to wake up components not just when some asynchronous selector\n      // resolved, but also when changing synchronous values because this may cause\n      // a selector to change from asynchronous to synchronous, in which case there\n      // would be no follow-up asynchronous resolution to wake us up.\n      // TODO OPTIMIZATION Only wake up related downstream components\n\n      storeState.suspendedComponentResolvers.forEach(cb => cb());\n      storeState.suspendedComponentResolvers.clear();\n    }\n  } // Special behavior ONLY invoked by useInterface.\n  // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n\n  storeState.queuedComponentCallbacks_DEPRECATED.forEach(cb => cb(treeState));\n  storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);\n}\n\nfunction endBatch(store) {\n  const storeState = store.getState();\n  storeState.commitDepth++;\n\n  try {\n    const {\n      nextTree\n    } = storeState; // Ignore commits that are not because of Recoil transactions -- namely,\n    // because something above RecoilRoot re-rendered:\n\n    if (nextTree === null) {\n      return;\n    } // nextTree is now committed -- note that copying and reset occurs when\n    // a transaction begins, in startNextTreeIfNeeded:\n\n\n    storeState.previousTree = storeState.currentTree;\n    storeState.currentTree = nextTree;\n    storeState.nextTree = null;\n    sendEndOfBatchNotifications(store);\n\n    if (storeState.previousTree != null) {\n      storeState.graphsByVersion.delete(storeState.previousTree.version);\n    } else {\n      Recoil_recoverableViolation('Ended batch with no previous state, which is unexpected', 'recoil');\n    }\n\n    storeState.previousTree = null;\n\n    if (Recoil_gkx('recoil_memory_managament_2020')) {\n      releaseScheduledRetainablesNow$1(store);\n    }\n  } finally {\n    storeState.commitDepth--;\n  }\n}\n/*\n * The purpose of the Batcher is to observe when React batches end so that\n * Recoil state changes can be batched. Whenever Recoil state changes, we call\n * setState on the batcher. Then we wait for that change to be committed, which\n * signifies the end of the batch. That's when we respond to the Recoil change.\n */\n\n\nfunction Batcher({\n  setNotifyBatcherOfChange\n}) {\n  const storeRef = useStoreRef();\n  const [, setState] = useState([]);\n  setNotifyBatcherOfChange(() => setState({}));\n  useEffect(() => {\n    setNotifyBatcherOfChange(() => setState({})); // If an asynchronous selector resolves after the Batcher is unmounted,\n    // notifyBatcherOfChange will still be called. An error gets thrown whenever\n    // setState is called after a component is already unmounted, so this sets\n    // notifyBatcherOfChange to be a no-op.\n\n    return () => {\n      setNotifyBatcherOfChange(() => {});\n    };\n  }, [setNotifyBatcherOfChange]);\n  useEffect(() => {\n    // enqueueExecution runs this function immediately; it is only used to\n    // manipulate the order of useEffects during tests, since React seems to\n    // call useEffect in an unpredictable order sometimes.\n    Recoil_Queue.enqueueExecution('Batcher', () => {\n      endBatch(storeRef.current);\n    });\n  });\n  return null;\n}\n\nif (false) {} // When removing this deprecated function, remove stateBySettingRecoilValue\n// which will no longer be needed.\n\n\nfunction initialStoreState_DEPRECATED(store, initializeState) {\n  const initial = makeEmptyStoreState$2();\n  initializeState({\n    // $FlowFixMe[escaped-generic]\n    set: (atom, value) => {\n      const state = initial.currentTree;\n      const writes = setNodeValue$2(store, state, atom.key, value);\n      const writtenNodes = new Set(writes.keys());\n      const nonvalidatedAtoms = state.nonvalidatedAtoms.clone();\n\n      for (const n of writtenNodes) {\n        nonvalidatedAtoms.delete(n);\n      }\n\n      initial.currentTree = { ...state,\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),\n        atomValues: applyAtomValueWrites$1(state.atomValues, writes),\n        // NB: PLEASE un-export applyAtomValueWrites when deleting this code\n        nonvalidatedAtoms\n      };\n    },\n    setUnvalidatedAtomValues: atomValues => {\n      // FIXME replace this with a mutative loop\n      atomValues.forEach((v, k) => {\n        initial.currentTree = setUnvalidatedAtomValue_DEPRECATED$1(initial.currentTree, k, v);\n      });\n    }\n  });\n  return initial;\n} // Initialize state snapshot for <RecoilRoot> for the initializeState prop.\n// Atom effect initialization takes precedence over this prop.\n// Any atom effects will be run before initialization, but then cleaned up,\n// they are then re-run when used as part of rendering.  These semantics are\n// compatible with React StrictMode where effects may be re-run multiple times\n// but state initialization only happens once the first time.\n\n\nfunction initialStoreState(initializeState) {\n  // Initialize a snapshot and get its store\n  const snapshot = freshSnapshot$1().map(initializeState);\n  const storeState = snapshot.getStore_INTERNAL().getState(); // Counteract the snapshot auto-release\n\n  snapshot.retain(); // Cleanup any effects run during initialization and clear the handlers so\n  // they will re-initialize if used during rendering.  This allows atom effect\n  // initialization to take precedence over initializeState and be compatible\n  // with StrictMode semantics.\n\n  storeState.nodeCleanupFunctions.forEach(cleanup => cleanup());\n  storeState.nodeCleanupFunctions.clear();\n  return storeState;\n}\n\nlet nextID = 0;\n\nfunction RecoilRoot_INTERNAL({\n  initializeState_DEPRECATED,\n  initializeState,\n  store_INTERNAL: storeProp,\n  // For use with React \"context bridging\"\n  children\n}) {\n  // prettier-ignore\n  // @fb-only: useEffect(() => {\n  // @fb-only: if (gkx('recoil_usage_logging')) {\n  // @fb-only: try {\n  // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({\n  // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,\n  // @fb-only: path: URI.getRequestURI().getPath(),\n  // @fb-only: }));\n  // @fb-only: } catch {\n  // @fb-only: recoverableViolation(\n  // @fb-only: 'Error when logging Recoil Usage event',\n  // @fb-only: 'recoil',\n  // @fb-only: );\n  // @fb-only: }\n  // @fb-only: }\n  // @fb-only: }, []);\n  let storeStateRef; // eslint-disable-line prefer-const\n\n  const getGraph = version => {\n    const graphs = storeStateRef.current.graphsByVersion;\n\n    if (graphs.has(version)) {\n      return Recoil_nullthrows(graphs.get(version));\n    }\n\n    const newGraph = graph$2();\n    graphs.set(version, newGraph);\n    return newGraph;\n  };\n\n  const subscribeToTransactions = (callback, key) => {\n    if (key == null) {\n      // Global transaction subscriptions\n      const {\n        transactionSubscriptions\n      } = storeRef.current.getState();\n      const id = nextID++;\n      transactionSubscriptions.set(id, callback);\n      return {\n        release: () => {\n          transactionSubscriptions.delete(id);\n        }\n      };\n    } else {\n      // Node-specific transaction subscriptions:\n      const {\n        nodeTransactionSubscriptions\n      } = storeRef.current.getState();\n\n      if (!nodeTransactionSubscriptions.has(key)) {\n        nodeTransactionSubscriptions.set(key, new Map());\n      }\n\n      const id = nextID++;\n      Recoil_nullthrows(nodeTransactionSubscriptions.get(key)).set(id, callback);\n      return {\n        release: () => {\n          const subs = nodeTransactionSubscriptions.get(key);\n\n          if (subs) {\n            subs.delete(id);\n\n            if (subs.size === 0) {\n              nodeTransactionSubscriptions.delete(key);\n            }\n          }\n        }\n      };\n    }\n  };\n\n  const addTransactionMetadata = metadata => {\n    startNextTreeIfNeeded(storeRef.current);\n\n    for (const k of Object.keys(metadata)) {\n      Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n    }\n  };\n\n  const replaceState = replacer => {\n    startNextTreeIfNeeded(storeRef.current); // Use replacer to get the next state:\n\n    const nextTree = Recoil_nullthrows(storeStateRef.current.nextTree);\n    let replaced;\n\n    try {\n      stateReplacerIsBeingExecuted = true;\n      replaced = replacer(nextTree);\n    } finally {\n      stateReplacerIsBeingExecuted = false;\n    }\n\n    if (replaced === nextTree) {\n      return;\n    }\n\n    if (false) {} // Save changes to nextTree and schedule a React update:\n\n\n    storeStateRef.current.nextTree = replaced;\n\n    if (reactMode$2().early) {\n      notifyComponents(storeRef.current, storeStateRef.current, replaced);\n    }\n\n    Recoil_nullthrows(notifyBatcherOfChange.current)();\n  };\n\n  const notifyBatcherOfChange = useRef$1(null);\n  const setNotifyBatcherOfChange = useCallback(x => {\n    notifyBatcherOfChange.current = x;\n  }, [notifyBatcherOfChange]);\n  const storeRef = Recoil_useRefInitOnce(() => storeProp !== null && storeProp !== void 0 ? storeProp : {\n    storeID: getNextStoreID$2(),\n    getState: () => storeStateRef.current,\n    replaceState,\n    getGraph,\n    subscribeToTransactions,\n    addTransactionMetadata\n  });\n\n  if (storeProp != null) {\n    storeRef.current = storeProp;\n  }\n\n  storeStateRef = Recoil_useRefInitOnce(() => initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(storeRef.current, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());\n  const mutableSource = useMemo(() => createMutableSource$1 === null || createMutableSource$1 === void 0 ? void 0 : createMutableSource$1(storeStateRef, () => storeStateRef.current.currentTree.version), [storeStateRef]); // Cleanup when the <RecoilRoot> is unmounted\n\n  useEffect(() => {\n    // React is free to call effect cleanup handlers and effects at will, the\n    // deps array is only an optimization.  For example, React strict mode\n    // will execute each effect twice for testing.  Therefore, we need symmetry\n    // to re-initialize all known atoms after they were cleaned up.\n    const store = storeRef.current;\n\n    for (const atomKey of new Set(store.getState().knownAtoms)) {\n      initializeNode$2(store, atomKey, 'get');\n    }\n\n    return () => {\n      for (const atomKey of store.getState().knownAtoms) {\n        cleanUpNode$2(store, atomKey);\n      }\n    };\n  }, [storeRef]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AppContext.Provider, {\n    value: storeRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MutableSourceContext.Provider, {\n    value: mutableSource\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Batcher, {\n    setNotifyBatcherOfChange: setNotifyBatcherOfChange\n  }), children));\n}\n\nfunction RecoilRoot(props) {\n  const {\n    override,\n    ...propsExceptOverride\n  } = props;\n  const ancestorStoreRef = useStoreRef();\n\n  if (override === false && ancestorStoreRef.current !== defaultStore) {\n    // If ancestorStoreRef.current !== defaultStore, it means that this\n    // RecoilRoot is not nested within another.\n    return props.children;\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RecoilRoot_INTERNAL, propsExceptOverride);\n}\n\nfunction useRecoilStoreID() {\n  return useStoreRef().current.storeID;\n}\n\nvar Recoil_RecoilRoot = {\n  RecoilRoot,\n  useStoreRef,\n  useRecoilMutableSource,\n  useRecoilStoreID,\n  notifyComponents_FOR_TESTING: notifyComponents,\n  sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction shallowArrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar Recoil_shallowArrayEqual = shallowArrayEqual;\n\nconst {\n  useEffect: useEffect$1,\n  useRef: useRef$2\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nfunction usePrevious(value) {\n  const ref = useRef$2();\n  useEffect$1(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar Recoil_usePrevious = usePrevious;\n\nconst {\n  useStoreRef: useStoreRef$1\n} = Recoil_RecoilRoot;\n\nconst {\n  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$1\n} = Recoil_Retention;\n\nconst {\n  updateRetainCount: updateRetainCount$2\n} = Recoil_Retention;\n\nconst {\n  RetentionZone: RetentionZone$3\n} = Recoil_RetentionZone;\n\nconst {\n  useEffect: useEffect$2,\n  useRef: useRef$3\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nconst {\n  isSSR: isSSR$2\n} = Recoil_Environment;\n\n\n\n\n\n // I don't see a way to avoid the any type here because we want to accept readable\n// and writable values with any type parameter, but normally with writable ones\n// RecoilState<SomeT> is not a subtype of RecoilState<mixed>.\n\n\n// flowlint-line unclear-type:off\nfunction useRetain(toRetain) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  } // eslint-disable-next-line fb-www/react-hooks\n\n\n  return useRetain_ACTUAL(toRetain);\n}\n\nfunction useRetain_ACTUAL(toRetain) {\n  const array = Array.isArray(toRetain) ? toRetain : [toRetain];\n  const retainables = array.map(a => a instanceof RetentionZone$3 ? a : a.key);\n  const storeRef = useStoreRef$1();\n  useEffect$2(() => {\n    if (!Recoil_gkx('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    const store = storeRef.current;\n\n    if (timeoutID.current && !isSSR$2) {\n      // Already performed a temporary retain on render, simply cancel the release\n      // of that temporary retain.\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n    } else {\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, 1);\n      }\n    }\n\n    return () => {\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }; // eslint-disable-next-line fb-www/react-hooks-deps\n  }, [storeRef, ...retainables]); // We want to retain if the component suspends. This is terrible but the Suspense\n  // API affords us no better option. If we suspend and never commit after some\n  // seconds, then release. The 'actual' retain/release in the effect above\n  // cancels this.\n\n  const timeoutID = useRef$3();\n  const previousRetainables = Recoil_usePrevious(retainables);\n\n  if (!isSSR$2 && (previousRetainables === undefined || !Recoil_shallowArrayEqual(previousRetainables, retainables))) {\n    const store = storeRef.current;\n\n    for (const r of retainables) {\n      updateRetainCount$2(store, r, 1);\n    }\n\n    if (previousRetainables) {\n      for (const r of previousRetainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }\n\n    if (timeoutID.current) {\n      window.clearTimeout(timeoutID.current);\n    }\n\n    timeoutID.current = window.setTimeout(() => {\n      timeoutID.current = null;\n\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }, SUSPENSE_TIMEOUT_MS$1);\n  }\n}\n\nvar Recoil_useRetain = useRetain;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * MIT License\n *\n * Copyright (c) 2014-2019 Georg Tavonius\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nconst UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction stackTraceParser(stackString) {\n  const lines = stackString.split('\\n');\n  return lines.reduce((stack, line) => {\n    const parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\n\nconst chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  const parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  const submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nconst winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  const parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nconst geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  const parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  const submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nconst javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  const parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nconst nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  const parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar Recoil_stackTraceParser = (/* unused pure expression or super */ null && (stackTraceParser));\n\nconst {\n  useRef: useRef$4\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\n\n\n\n\nfunction useComponentName() {\n  const nameRef = useRef$4();\n\n  if (false) { var _nameRef$current; } // @fb-only: return \"<component name only available when both in dev mode and when passing GK 'recoil_infer_component_names'>\";\n\n\n  return '<component name not available>'; // @oss-only\n}\n\nvar Recoil_useComponentName = useComponentName;\n\nconst {\n  batchUpdates: batchUpdates$2\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$2\n} = Recoil_Node;\n\nconst {\n  reactMode: reactMode$3,\n  useMutableSource: useMutableSource$1,\n  useSyncExternalStore: useSyncExternalStore$1\n} = Recoil_ReactMode;\n\nconst {\n  useRecoilMutableSource: useRecoilMutableSource$1,\n  useStoreRef: useStoreRef$2\n} = Recoil_RecoilRoot;\n\nconst {\n  isRecoilValue: isRecoilValue$2\n} = Recoil_RecoilValue$1;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$3,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$2,\n  setRecoilValue: setRecoilValue$2,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$2,\n  subscribeToRecoilValue: subscribeToRecoilValue$1\n} = Recoil_RecoilValueInterface;\n\n\n\nconst {\n  useCallback: useCallback$1,\n  useEffect: useEffect$3,\n  useMemo: useMemo$1,\n  useRef: useRef$5,\n  useState: useState$1\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nconst {\n  setByAddingToSet: setByAddingToSet$2\n} = Recoil_CopyOnWrite;\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction handleLoadable(loadable, recoilValue, storeRef) {\n  // We can't just throw the promise we are waiting on to Suspense.  If the\n  // upstream dependencies change it may produce a state in which the component\n  // can render, but it would still be suspended on a Promise that may never resolve.\n  if (loadable.state === 'hasValue') {\n    return loadable.contents;\n  } else if (loadable.state === 'loading') {\n    const promise = new Promise(resolve => {\n      storeRef.current.getState().suspendedComponentResolvers.add(resolve);\n    }); // $FlowFixMe Flow(prop-missing) for integrating with tools that inspect thrown promises @fb-only\n    // @fb-only: promise.displayName = `Recoil State: ${recoilValue.key}`;\n\n    throw promise;\n  } else if (loadable.state === 'hasError') {\n    throw loadable.contents;\n  } else {\n    throw Recoil_err(`Invalid value of loadable atom \"${recoilValue.key}\"`);\n  }\n}\n\nfunction validateRecoilValue(recoilValue, hookName) {\n  if (!isRecoilValue$2(recoilValue)) {\n    throw Recoil_err(`Invalid argument to ${hookName}: expected an atom or selector but got ${String(recoilValue)}`);\n  }\n}\n\n/**\n * Various things are broken with useRecoilInterface, particularly concurrent\n * mode, React strict mode, and memory management. They will not be fixed.\n * */\nfunction useRecoilInterface_DEPRECATED() {\n  const componentName = Recoil_useComponentName();\n  const storeRef = useStoreRef$2();\n  const [, forceUpdate] = useState$1([]);\n  const recoilValuesUsed = useRef$5(new Set());\n  recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render\n\n  const previousSubscriptions = useRef$5(new Set());\n  const subscriptions = useRef$5(new Map());\n  const unsubscribeFrom = useCallback$1(key => {\n    const sub = subscriptions.current.get(key);\n\n    if (sub) {\n      sub.release();\n      subscriptions.current.delete(key);\n    }\n  }, [subscriptions]);\n  const updateState = useCallback$1((_state, key) => {\n    if (subscriptions.current.has(key)) {\n      forceUpdate([]);\n    }\n  }, []); // Effect to add/remove subscriptions as nodes are used\n\n  useEffect$3(() => {\n    const store = storeRef.current;\n    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(key => {\n      if (subscriptions.current.has(key)) {\n        Recoil_expectationViolation(`Double subscription to RecoilValue \"${key}\"`);\n        return;\n      }\n\n      const sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);\n      subscriptions.current.set(key, sub);\n      /**\n       * Since we're subscribing in an effect we need to update to the latest\n       * value of the atom since it may have changed since we rendered. We can\n       * go ahead and do that now, unless we're in the middle of a batch --\n       * in which case we should do it at the end of the batch, due to the\n       * following edge case: Suppose an atom is updated in another useEffect\n       * of this same component. Then the following sequence of events occur:\n       * 1. Atom is updated and subs fired (but we may not be subscribed\n       *    yet depending on order of effects, so we miss this) Updated value\n       *    is now in nextTree, but not currentTree.\n       * 2. This effect happens. We subscribe and update.\n       * 3. From the update we re-render and read currentTree, with old value.\n       * 4. Batcher's effect sets currentTree to nextTree.\n       * In this sequence we miss the update. To avoid that, add the update\n       * to queuedComponentCallback if a batch is in progress.\n       */\n      // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n      const state = store.getState();\n\n      if (state.nextTree) {\n        store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {\n          updateState(store.getState(), key);\n        });\n      } else {\n        updateState(store.getState(), key);\n      }\n    });\n    Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(key => {\n      unsubscribeFrom(key);\n    });\n    previousSubscriptions.current = recoilValuesUsed.current;\n  }); // Effect to unsubscribe from all when unmounting\n\n  useEffect$3(() => {\n    const currentSubscriptions = subscriptions.current; // Restore subscriptions that were cleared due to StrictMode running this effect twice\n\n    Recoil_differenceSets(recoilValuesUsed.current, new Set(currentSubscriptions.keys())).forEach(key => {\n      const sub = subscribeToRecoilValue$1(storeRef.current, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);\n      currentSubscriptions.set(key, sub);\n    });\n    return () => currentSubscriptions.forEach((_, key) => unsubscribeFrom(key));\n  }, [componentName, storeRef, unsubscribeFrom, updateState]);\n  return useMemo$1(() => {\n    // eslint-disable-next-line no-shadow\n    function useSetRecoilState(recoilState) {\n      if (false) {}\n\n      return newValueOrUpdater => {\n        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n      };\n    } // eslint-disable-next-line no-shadow\n\n\n    function useResetRecoilState(recoilState) {\n      if (false) {}\n\n      return () => setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilValueLoadable(recoilValue) {\n      var _storeState$nextTree;\n\n      if (false) {}\n\n      if (!recoilValuesUsed.current.has(recoilValue.key)) {\n        recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);\n      } // TODO Restore optimization to memoize lookup\n\n\n      const storeState = storeRef.current.getState();\n      return getRecoilValueAsLoadable$2(storeRef.current, recoilValue, reactMode$3().early ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : storeState.currentTree);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilValue(recoilValue) {\n      if (false) {}\n\n      const loadable = useRecoilValueLoadable(recoilValue);\n      return handleLoadable(loadable, recoilValue, storeRef);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilState(recoilState) {\n      if (false) {}\n\n      return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilStateLoadable(recoilState) {\n      if (false) {}\n\n      return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    return {\n      getRecoilValue: useRecoilValue,\n      getRecoilValueLoadable: useRecoilValueLoadable,\n      getRecoilState: useRecoilState,\n      getRecoilStateLoadable: useRecoilStateLoadable,\n      getSetRecoilState: useSetRecoilState,\n      getResetRecoilState: useResetRecoilState\n    };\n  }, [recoilValuesUsed, storeRef]);\n}\n\nconst recoilComponentGetRecoilValueCount_FOR_TESTING = {\n  current: 0\n};\n\nfunction useRecoilValueLoadable_SYNC_EXTERNAL_STORE(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const componentName = Recoil_useComponentName();\n  const getSnapshot = useCallback$1(() => {\n    var _storeState$nextTree2;\n\n    if (false) {}\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree2 = storeState.nextTree) !== null && _storeState$nextTree2 !== void 0 ? _storeState$nextTree2 : storeState.currentTree : storeState.currentTree;\n    const loadable = getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n    return {\n      loadable,\n      key: recoilValue.key\n    };\n  }, [storeRef, recoilValue]); // Memoize the state to avoid unnecessary rerenders\n\n  const memoizePreviousSnapshot = useCallback$1(getState => {\n    let prevState;\n    return () => {\n      var _prevState, _prevState2;\n\n      const nextState = getState();\n\n      if ((_prevState = prevState) !== null && _prevState !== void 0 && _prevState.loadable.is(nextState.loadable) && ((_prevState2 = prevState) === null || _prevState2 === void 0 ? void 0 : _prevState2.key) === nextState.key) {\n        return prevState;\n      }\n\n      prevState = nextState;\n      return nextState;\n    };\n  }, []);\n  const getMemoizedSnapshot = useMemo$1(() => memoizePreviousSnapshot(getSnapshot), [getSnapshot, memoizePreviousSnapshot]);\n  const subscribe = useCallback$1(notify => {\n    const store = storeRef.current;\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, notify, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName]);\n  return useSyncExternalStore$1(subscribe, getMemoizedSnapshot, // getSnapshot()\n  getMemoizedSnapshot // getServerSnapshot() for SSR support\n  ).loadable;\n}\n\nfunction useRecoilValueLoadable_MUTABLE_SOURCE(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree3;\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree3 = storeState.nextTree) !== null && _storeState$nextTree3 !== void 0 ? _storeState$nextTree3 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const getLoadableWithTesting = useCallback$1(() => {\n    if (false) {}\n\n    return getLoadable();\n  }, [getLoadable]);\n  const componentName = Recoil_useComponentName();\n  const subscribe = useCallback$1((_storeState, notify) => {\n    const store = storeRef.current;\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, () => {\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return notify();\n      } // Only re-render if the value has changed.\n      // This will evaluate the atom/selector now as well as when the\n      // component renders, but that may help with prefetching.\n\n\n      const newLoadable = getLoadable();\n\n      if (!prevLoadableRef.current.is(newLoadable)) {\n        notify();\n      } // If the component is suspended then the effect setting prevLoadableRef\n      // will not run.  So, set the previous value here when its subscription\n      // is fired to wake it up.  We can't just rely on this, though, because\n      // this only executes when an atom/selector is dirty and the atom/selector\n      // passed to the hook can dynamically change.\n\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName, getLoadable]);\n  const source = useRecoilMutableSource$1();\n\n  if (source == null) {\n    throw Recoil_err('Recoil hooks must be used in components contained within a <RecoilRoot> component.');\n  }\n\n  const loadable = useMutableSource$1(source, getLoadableWithTesting, subscribe);\n  const prevLoadableRef = useRef$5(loadable);\n  useEffect$3(() => {\n    prevLoadableRef.current = loadable;\n  });\n  return loadable;\n}\n\nfunction useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const componentName = Recoil_useComponentName(); // Accessors to get the current state\n\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree4;\n\n    if (false) {}\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree4 = storeState.nextTree) !== null && _storeState$nextTree4 !== void 0 ? _storeState$nextTree4 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const getState = useCallback$1(() => ({\n    loadable: getLoadable(),\n    key: recoilValue.key\n  }), [getLoadable, recoilValue.key]); // Memoize state snapshots\n\n  const updateState = useCallback$1(prevState => {\n    const nextState = getState();\n    return prevState.loadable.is(nextState.loadable) && prevState.key === nextState.key ? prevState : nextState;\n  }, [getState]); // Subscribe to Recoil state changes\n\n  useEffect$3(() => {\n    const subscription = subscribeToRecoilValue$1(storeRef.current, recoilValue, _state => {\n      setState(updateState);\n    }, componentName); // Update state in case we are using a different key\n\n    setState(updateState);\n    return subscription.release;\n  }, [componentName, recoilValue, storeRef, updateState]); // Get the current state\n\n  const [state, setState] = useState$1(getState); // If we changed keys, then return the state for the new key.\n  // This is important in case the old key would cause the component to suspend.\n  // We don't have to set the new state here since the subscribing effect above\n  // will do that.\n\n  return state.key !== recoilValue.key ? getState().loadable : state.loadable;\n}\n\nfunction useRecoilValueLoadable_LEGACY(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const [, forceUpdate] = useState$1([]);\n  const componentName = Recoil_useComponentName();\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree5;\n\n    if (false) {}\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree5 = storeState.nextTree) !== null && _storeState$nextTree5 !== void 0 ? _storeState$nextTree5 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const loadable = getLoadable();\n  const prevLoadableRef = useRef$5(loadable);\n  useEffect$3(() => {\n    prevLoadableRef.current = loadable;\n  });\n  useEffect$3(() => {\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, _state => {\n      var _prevLoadableRef$curr;\n\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      const newLoadable = getLoadable();\n\n      if (!((_prevLoadableRef$curr = prevLoadableRef.current) !== null && _prevLoadableRef$curr !== void 0 && _prevLoadableRef$curr.is(newLoadable))) {\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    /**\n     * Since we're subscribing in an effect we need to update to the latest\n     * value of the atom since it may have changed since we rendered. We can\n     * go ahead and do that now, unless we're in the middle of a batch --\n     * in which case we should do it at the end of the batch, due to the\n     * following edge case: Suppose an atom is updated in another useEffect\n     * of this same component. Then the following sequence of events occur:\n     * 1. Atom is updated and subs fired (but we may not be subscribed\n     *    yet depending on order of effects, so we miss this) Updated value\n     *    is now in nextTree, but not currentTree.\n     * 2. This effect happens. We subscribe and update.\n     * 3. From the update we re-render and read currentTree, with old value.\n     * 4. Batcher's effect sets currentTree to nextTree.\n     * In this sequence we miss the update. To avoid that, add the update\n     * to queuedComponentCallback if a batch is in progress.\n     */\n\n    if (storeState.nextTree) {\n      store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {\n        prevLoadableRef.current = null;\n        forceUpdate([]);\n      });\n    } else {\n      var _prevLoadableRef$curr2;\n\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      const newLoadable = getLoadable();\n\n      if (!((_prevLoadableRef$curr2 = prevLoadableRef.current) !== null && _prevLoadableRef$curr2 !== void 0 && _prevLoadableRef$curr2.is(newLoadable))) {\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }\n\n    return subscription.release;\n  }, [componentName, getLoadable, recoilValue, storeRef]);\n  return loadable;\n}\n/**\n  Like useRecoilValue(), but either returns the value if available or\n  just undefined if not available for any reason, such as pending or error.\n*/\n\n\nfunction useRecoilValueLoadable(recoilValue) {\n  if (false) {}\n\n  if (Recoil_gkx('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    Recoil_useRetain(recoilValue);\n  }\n\n  return {\n    TRANSITION_SUPPORT: useRecoilValueLoadable_TRANSITION_SUPPORT,\n    SYNC_EXTERNAL_STORE: useRecoilValueLoadable_SYNC_EXTERNAL_STORE,\n    MUTABLE_SOURCE: useRecoilValueLoadable_MUTABLE_SOURCE,\n    LEGACY: useRecoilValueLoadable_LEGACY\n  }[reactMode$3().mode](recoilValue);\n}\n/**\n  Returns the value represented by the RecoilValue.\n  If the value is pending, it will throw a Promise to suspend the component,\n  if the value is an error it will throw it for the nearest React error boundary.\n  This will also subscribe the component for any updates in the value.\n  */\n\n\nfunction useRecoilValue(recoilValue) {\n  if (false) {}\n\n  const storeRef = useStoreRef$2();\n  const loadable = useRecoilValueLoadable(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n/**\n  Returns a function that allows the value of a RecoilState to be updated, but does\n  not subscribe the component to changes to that RecoilState.\n*/\n\n\nfunction useSetRecoilState(recoilState) {\n  if (false) {}\n\n  const storeRef = useStoreRef$2();\n  return useCallback$1(newValueOrUpdater => {\n    setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n  }, [storeRef, recoilState]);\n}\n/**\n  Returns a function that will reset the value of a RecoilState to its default\n*/\n\n\nfunction useResetRecoilState(recoilState) {\n  if (false) {}\n\n  const storeRef = useStoreRef$2();\n  return useCallback$1(() => {\n    setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n  }, [storeRef, recoilState]);\n}\n/**\n  Equivalent to useState(). Allows the value of the RecoilState to be read and written.\n  Subsequent updates to the RecoilState will cause the component to re-render. If the\n  RecoilState is pending, this will suspend the component and initiate the\n  retrieval of the value. If evaluating the RecoilState resulted in an error, this will\n  throw the error so that the nearest React error boundary can catch it.\n*/\n\n\nfunction useRecoilState(recoilState) {\n  if (false) {}\n\n  return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n}\n/**\n  Like useRecoilState(), but does not cause Suspense or React error handling. Returns\n  an object that indicates whether the RecoilState is available, pending, or\n  unavailable due to an error.\n*/\n\n\nfunction useRecoilStateLoadable(recoilState) {\n  if (false) {}\n\n  return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n}\n\nfunction useSetUnvalidatedAtomValues() {\n  const storeRef = useStoreRef$2();\n  return (values, transactionMetadata = {}) => {\n    batchUpdates$2(() => {\n      storeRef.current.addTransactionMetadata(transactionMetadata);\n      values.forEach((value, key) => setUnvalidatedRecoilValue$2(storeRef.current, new AbstractRecoilValue$3(key), value));\n    });\n  };\n}\n/**\n * Experimental variants of hooks with support for useTransition()\n */\n\n\nfunction useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {\n  if (false) {}\n\n  if (Recoil_gkx('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    Recoil_useRetain(recoilValue);\n  }\n\n  return useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue);\n}\n\nfunction useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {\n  if (false) {}\n\n  const storeRef = useStoreRef$2();\n  const loadable = useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n\nfunction useRecoilState_TRANSITION_SUPPORT_UNSTABLE(recoilState) {\n  if (false) {}\n\n  return [useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilState), useSetRecoilState(recoilState)];\n}\n\nvar Recoil_Hooks = {\n  recoilComponentGetRecoilValueCount_FOR_TESTING,\n  useRecoilInterface: useRecoilInterface_DEPRECATED,\n  useRecoilState,\n  useRecoilStateLoadable,\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useResetRecoilState,\n  useSetRecoilState,\n  useSetUnvalidatedAtomValues,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE\n};\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a map containing all of the keys + values from the original map where\n * the given callback returned true.\n */\n\nfunction filterMap(map, callback) {\n  const result = new Map();\n\n  for (const [key, value] of map) {\n    if (callback(value, key)) {\n      result.set(key, value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_filterMap = filterMap;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n/**\n * Returns a set containing all of the values from the original set where\n * the given callback returned true.\n */\n\nfunction filterSet(set, callback) {\n  const result = new Set();\n\n  for (const value of set) {\n    if (callback(value)) {\n      result.add(value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_filterSet = filterSet;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction mergeMaps(...maps) {\n  const result = new Map();\n\n  for (let i = 0; i < maps.length; i++) {\n    const iterator = maps[i].keys();\n    let nextKey;\n\n    while (!(nextKey = iterator.next()).done) {\n      // $FlowFixMe[incompatible-call] - map/iterator knows nothing about flow types\n      result.set(nextKey.value, maps[i].get(nextKey.value));\n    }\n  }\n  /* $FlowFixMe[incompatible-return] (>=0.66.0 site=www,mobile) This comment\n   * suppresses an error found when Flow v0.66 was deployed. To see the error\n   * delete this comment and run Flow. */\n\n\n  return result;\n}\n\nvar Recoil_mergeMaps = mergeMaps;\n\nconst {\n  batchUpdates: batchUpdates$3\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$3,\n  getNode: getNode$4,\n  nodes: nodes$1\n} = Recoil_Node;\n\nconst {\n  useStoreRef: useStoreRef$3\n} = Recoil_RecoilRoot;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$4,\n  setRecoilValueLoadable: setRecoilValueLoadable$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$2\n} = Recoil_Retention;\n\nconst {\n  cloneSnapshot: cloneSnapshot$1\n} = Recoil_Snapshot$1;\n\nconst {\n  useCallback: useCallback$2,\n  useEffect: useEffect$4,\n  useRef: useRef$6,\n  useState: useState$2\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nconst {\n  isSSR: isSSR$3\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useTransactionSubscription(callback) {\n  const storeRef = useStoreRef$3();\n  useEffect$4(() => {\n    const sub = storeRef.current.subscribeToTransactions(callback);\n    return sub.release;\n  }, [callback, storeRef]);\n}\n\nfunction externallyVisibleAtomValuesInState(state) {\n  const atomValues = state.atomValues.toMap();\n  const persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, (v, k) => {\n    const node = getNode$4(k);\n    const persistence = node.persistence_UNSTABLE;\n    return persistence != null && persistence.type !== 'none' && v.state === 'hasValue';\n  }), v => v.contents); // Merge in nonvalidated atoms; we may not have defs for them but they will\n  // all have persistence on or they wouldn't be there in the first place.\n\n  return Recoil_mergeMaps(state.nonvalidatedAtoms.toMap(), persistedAtomContentsValues);\n}\n\n/**\n  Calls the given callback after any atoms have been modified and the consequent\n  component re-renders have been committed. This is intended for persisting\n  the values of the atoms to storage. The stored values can then be restored\n  using the useSetUnvalidatedAtomValues hook.\n\n  The callback receives the following info:\n\n  atomValues: The current value of every atom that is both persistable (persistence\n              type not set to 'none') and whose value is available (not in an\n              error or loading state).\n\n  previousAtomValues: The value of every persistable and available atom before\n               the transaction began.\n\n  atomInfo: A map containing the persistence settings for each atom. Every key\n            that exists in atomValues will also exist in atomInfo.\n\n  modifiedAtoms: The set of atoms that were written to during the transaction.\n\n  transactionMetadata: Arbitrary information that was added via the\n          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n          transaction, to avoid loops.\n*/\nfunction useTransactionObservation_DEPRECATED(callback) {\n  useTransactionSubscription(useCallback$2(store => {\n    let previousTree = store.getState().previousTree;\n    const currentTree = store.getState().currentTree;\n\n    if (!previousTree) {\n      Recoil_recoverableViolation('Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil');\n      previousTree = store.getState().currentTree; // attempt to trundle on\n    }\n\n    const atomValues = externallyVisibleAtomValuesInState(currentTree);\n    const previousAtomValues = externallyVisibleAtomValuesInState(previousTree);\n    const atomInfo = Recoil_mapMap(nodes$1, node => {\n      var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;\n\n      return {\n        persistence_UNSTABLE: {\n          type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : 'none',\n          backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false\n        }\n      };\n    }); // Filter on existance in atomValues so that externally-visible rules\n    // are also applied to modified atoms (specifically exclude selectors):\n\n    const modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, k => atomValues.has(k) || previousAtomValues.has(k));\n    callback({\n      atomValues,\n      previousAtomValues,\n      atomInfo,\n      modifiedAtoms,\n      transactionMetadata: { ...currentTree.transactionMetadata\n      }\n    });\n  }, [callback]));\n}\n\nfunction useRecoilTransactionObserver(callback) {\n  useTransactionSubscription(useCallback$2(store => {\n    const snapshot = cloneSnapshot$1(store, 'current');\n    const previousSnapshot = cloneSnapshot$1(store, 'previous');\n    callback({\n      snapshot,\n      previousSnapshot\n    });\n  }, [callback]));\n} // Return a snapshot of the current state and subscribe to all state changes\n\n\nfunction useRecoilSnapshot() {\n  const storeRef = useStoreRef$3();\n  const [snapshot, setSnapshot] = useState$2(() => cloneSnapshot$1(storeRef.current));\n  const previousSnapshot = Recoil_usePrevious(snapshot);\n  const timeoutID = useRef$6();\n  const releaseRef = useRef$6();\n  useTransactionSubscription(useCallback$2(store => setSnapshot(cloneSnapshot$1(store)), [])); // Retain snapshot for duration component is mounted\n\n  useEffect$4(() => {\n    const release = snapshot.retain(); // Release the retain from the rendering call\n\n    if (timeoutID.current && !isSSR$3) {\n      var _releaseRef$current;\n\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n      (_releaseRef$current = releaseRef.current) === null || _releaseRef$current === void 0 ? void 0 : _releaseRef$current.call(releaseRef);\n      releaseRef.current = null;\n    }\n\n    return release;\n  }, [snapshot]); // Retain snapshot until above effect is run.\n  // Release after a threshold in case component is suspended.\n\n  if (previousSnapshot !== snapshot && !isSSR$3) {\n    // Release the previous snapshot\n    if (timeoutID.current) {\n      var _releaseRef$current2;\n\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n      (_releaseRef$current2 = releaseRef.current) === null || _releaseRef$current2 === void 0 ? void 0 : _releaseRef$current2.call(releaseRef);\n      releaseRef.current = null;\n    }\n\n    releaseRef.current = snapshot.retain();\n    timeoutID.current = window.setTimeout(() => {\n      var _releaseRef$current3;\n\n      timeoutID.current = null;\n      (_releaseRef$current3 = releaseRef.current) === null || _releaseRef$current3 === void 0 ? void 0 : _releaseRef$current3.call(releaseRef);\n      releaseRef.current = null;\n    }, SUSPENSE_TIMEOUT_MS$2);\n  }\n\n  return snapshot;\n}\n\nfunction gotoSnapshot(store, snapshot) {\n  var _storeState$nextTree;\n\n  const storeState = store.getState();\n  const prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;\n  const next = snapshot.getStore_INTERNAL().getState().currentTree;\n  batchUpdates$3(() => {\n    const keysToUpdate = new Set();\n\n    for (const keys of [prev.atomValues.keys(), next.atomValues.keys()]) {\n      for (const key of keys) {\n        var _prev$atomValues$get, _next$atomValues$get;\n\n        if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$4(key).shouldRestoreFromSnapshots) {\n          keysToUpdate.add(key);\n        }\n      }\n    }\n\n    keysToUpdate.forEach(key => {\n      setRecoilValueLoadable$1(store, new AbstractRecoilValue$4(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$3);\n    });\n    store.replaceState(state => ({ ...state,\n      stateID: snapshot.getID()\n    }));\n  });\n}\n\nfunction useGotoRecoilSnapshot() {\n  const storeRef = useStoreRef$3();\n  return useCallback$2(snapshot => gotoSnapshot(storeRef.current, snapshot), [storeRef]);\n}\n\nvar Recoil_SnapshotHooks = {\n  useRecoilSnapshot,\n  gotoSnapshot,\n  useGotoRecoilSnapshot,\n  useRecoilTransactionObserver,\n  useTransactionObservation_DEPRECATED,\n  useTransactionSubscription_DEPRECATED: useTransactionSubscription\n};\n\nconst {\n  peekNodeInfo: peekNodeInfo$2\n} = Recoil_FunctionalCore;\n\nconst {\n  useStoreRef: useStoreRef$4\n} = Recoil_RecoilRoot;\n\nfunction useGetRecoilValueInfo() {\n  const storeRef = useStoreRef$4();\n  return ({\n    key\n  }) => peekNodeInfo$2(storeRef.current, storeRef.current.getState().currentTree, key);\n}\n\nvar Recoil_useGetRecoilValueInfo = useGetRecoilValueInfo;\n\nconst {\n  reactMode: reactMode$4\n} = Recoil_ReactMode;\n\nconst {\n  RecoilRoot: RecoilRoot$1,\n  useStoreRef: useStoreRef$5\n} = Recoil_RecoilRoot;\n\n\n\nconst {\n  useMemo: useMemo$2\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nfunction useRecoilBridgeAcrossReactRoots() {\n  // The test fails when using useMutableSource(), but only if act() is used\n  // for the nested root.  So, this may only be a testing environment issue.\n  if (reactMode$4().mode === 'MUTABLE_SOURCE') {\n    // eslint-disable-next-line fb-www/no-console\n    console.warn('Warning: There are known issues using useRecoilBridgeAcrossReactRoots() in recoil_mutable_source rendering mode.  Please consider upgrading to recoil_sync_external_store mode.');\n  }\n\n  const store = useStoreRef$5().current;\n  return useMemo$2(() => {\n    // eslint-disable-next-line no-shadow\n    function RecoilBridge({\n      children\n    }) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RecoilRoot$1, {\n        store_INTERNAL: store\n      }, children);\n    }\n\n    return RecoilBridge;\n  }, [store]);\n}\n\nvar Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;\n\nconst {\n  loadableWithValue: loadableWithValue$1\n} = Recoil_Loadable$1;\n\nconst {\n  initializeNode: initializeNode$3\n} = Recoil_FunctionalCore;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$4,\n  getNode: getNode$5\n} = Recoil_Node;\n\nconst {\n  copyTreeState: copyTreeState$1,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$3,\n  invalidateDownstreams: invalidateDownstreams$1,\n  writeLoadableToTreeState: writeLoadableToTreeState$1\n} = Recoil_RecoilValueInterface;\n\n\n\nfunction isAtom(recoilValue) {\n  return getNode$5(recoilValue.key).nodeType === 'atom';\n}\n\nclass TransactionInterfaceImpl {\n  constructor(store, treeState) {\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_treeState\", void 0);\n\n    _defineProperty(this, \"_changes\", void 0);\n\n    _defineProperty(this, \"get\", recoilValue => {\n      if (this._changes.has(recoilValue.key)) {\n        // $FlowFixMe[incompatible-return]\n        return this._changes.get(recoilValue.key);\n      }\n\n      if (!isAtom(recoilValue)) {\n        throw Recoil_err('Reading selectors within atomicUpdate is not supported');\n      }\n\n      const loadable = getRecoilValueAsLoadable$3(this._store, recoilValue, this._treeState);\n\n      if (loadable.state === 'hasValue') {\n        return loadable.contents;\n      } else if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      } else {\n        throw Recoil_err(`Expected Recoil atom ${recoilValue.key} to have a value, but it is in a loading state.`);\n      }\n    });\n\n    _defineProperty(this, \"set\", (recoilState, valueOrUpdater) => {\n      if (!isAtom(recoilState)) {\n        throw Recoil_err('Setting selectors within atomicUpdate is not supported');\n      }\n\n      if (typeof valueOrUpdater === 'function') {\n        const current = this.get(recoilState);\n\n        this._changes.set(recoilState.key, valueOrUpdater(current)); // flowlint-line unclear-type:off\n\n      } else {\n        // Initialize atom and run effects if not initialized yet\n        initializeNode$3(this._store, recoilState.key, 'set');\n\n        this._changes.set(recoilState.key, valueOrUpdater);\n      }\n    });\n\n    _defineProperty(this, \"reset\", recoilState => {\n      this.set(recoilState, DEFAULT_VALUE$4);\n    });\n\n    this._store = store;\n    this._treeState = treeState;\n    this._changes = new Map();\n  } // Allow destructing\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n  newTreeState_INTERNAL() {\n    if (this._changes.size === 0) {\n      return this._treeState;\n    }\n\n    const newState = copyTreeState$1(this._treeState);\n\n    for (const [k, v] of this._changes) {\n      writeLoadableToTreeState$1(newState, k, loadableWithValue$1(v));\n    }\n\n    invalidateDownstreams$1(this._store, newState);\n    return newState;\n  }\n\n}\n\nfunction atomicUpdater(store) {\n  return fn => {\n    store.replaceState(treeState => {\n      const changeset = new TransactionInterfaceImpl(store, treeState);\n      fn(changeset);\n      return changeset.newTreeState_INTERNAL();\n    });\n  };\n}\n\nvar Recoil_AtomicUpdates = {\n  atomicUpdater\n};\n\nvar Recoil_AtomicUpdates_1 = Recoil_AtomicUpdates.atomicUpdater;\n\nvar Recoil_AtomicUpdates$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  atomicUpdater: Recoil_AtomicUpdates_1\n});\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar invariant_1 = invariant;\n\n// @oss-only\n\n\nvar Recoil_invariant = invariant_1;\n\nconst {\n  atomicUpdater: atomicUpdater$1\n} = Recoil_AtomicUpdates$1;\n\nconst {\n  batchUpdates: batchUpdates$4\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$5\n} = Recoil_Node;\n\nconst {\n  useStoreRef: useStoreRef$6\n} = Recoil_RecoilRoot;\n\nconst {\n  refreshRecoilValue: refreshRecoilValue$1,\n  setRecoilValue: setRecoilValue$3\n} = Recoil_RecoilValueInterface;\n\nconst {\n  Snapshot: Snapshot$1,\n  cloneSnapshot: cloneSnapshot$2\n} = Recoil_Snapshot$1;\n\nconst {\n  gotoSnapshot: gotoSnapshot$1\n} = Recoil_SnapshotHooks;\n\nconst {\n  useCallback: useCallback$3\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\n\n\n\n\n\n\nclass Sentinel {}\n\nconst SENTINEL = new Sentinel();\n\nfunction recoilCallback(store, fn, args, extraInterface) {\n  let ret = SENTINEL;\n  batchUpdates$4(() => {\n    const errMsg = 'useRecoilCallback() expects a function that returns a function: ' + 'it accepts a function of the type (RecoilInterface) => (Args) => ReturnType ' + 'and returns a callback function (Args) => ReturnType, where RecoilInterface is ' + 'an object {snapshot, set, ...} and Args and ReturnType are the argument and return ' + 'types of the callback you want to create.  Please see the docs ' + 'at recoiljs.org for details.';\n\n    if (typeof fn !== 'function') {\n      throw Recoil_err(errMsg);\n    } // Clone the snapshot lazily to avoid overhead if the callback does not use it.\n    // Note that this means the snapshot may represent later state from when\n    // the callback was called if it first accesses the snapshot asynchronously.\n\n\n    const callbackInterface = Recoil_lazyProxy({ ...(extraInterface !== null && extraInterface !== void 0 ? extraInterface : {}),\n      // flowlint-line unclear-type:off\n      set: (node, newValue) => setRecoilValue$3(store, node, newValue),\n      reset: node => setRecoilValue$3(store, node, DEFAULT_VALUE$5),\n      refresh: node => refreshRecoilValue$1(store, node),\n      gotoSnapshot: snapshot => gotoSnapshot$1(store, snapshot),\n      transact_UNSTABLE: transaction => atomicUpdater$1(store)(transaction)\n    }, {\n      snapshot: () => cloneSnapshot$2(store)\n    });\n    const callback = fn(callbackInterface);\n\n    if (typeof callback !== 'function') {\n      throw Recoil_err(errMsg);\n    }\n\n    ret = callback(...args);\n  });\n  !!(ret instanceof Sentinel) ?  false ? 0 : Recoil_invariant(false) : void 0;\n  return ret;\n}\n\nfunction useRecoilCallback(fn, deps) {\n  const storeRef = useStoreRef$6();\n  return useCallback$3( // $FlowIssue[incompatible-call]\n  (...args) => {\n    return recoilCallback(storeRef.current, fn, args);\n  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_useRecoilCallback = {\n  recoilCallback,\n  useRecoilCallback\n};\n\nconst {\n  useStoreRef: useStoreRef$7\n} = Recoil_RecoilRoot;\n\nconst {\n  refreshRecoilValue: refreshRecoilValue$2\n} = Recoil_RecoilValueInterface;\n\nconst {\n  useCallback: useCallback$4\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nfunction useRecoilRefresher(recoilValue) {\n  const storeRef = useStoreRef$7();\n  return useCallback$4(() => {\n    const store = storeRef.current;\n    refreshRecoilValue$2(store, recoilValue);\n  }, [recoilValue, storeRef]);\n}\n\nvar Recoil_useRecoilRefresher = useRecoilRefresher;\n\nconst {\n  atomicUpdater: atomicUpdater$2\n} = Recoil_AtomicUpdates$1;\n\nconst {\n  useStoreRef: useStoreRef$8\n} = Recoil_RecoilRoot;\n\nconst {\n  useMemo: useMemo$3\n} = react__WEBPACK_IMPORTED_MODULE_0__;\n\nfunction useRecoilTransaction(fn, deps) {\n  const storeRef = useStoreRef$8();\n  return useMemo$3(() => (...args) => {\n    const atomicUpdate = atomicUpdater$2(storeRef.current);\n    atomicUpdate(transactionInterface => {\n      fn(transactionInterface)(...args);\n    });\n  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_useRecoilTransaction = useRecoilTransaction;\n\nclass TreeCache {\n  constructor(options) {\n    var _options$onHit, _options$onSet, _options$mapNodeValue;\n\n    _defineProperty(this, \"_numLeafs\", void 0);\n\n    _defineProperty(this, \"_root\", void 0);\n\n    _defineProperty(this, \"_onHit\", void 0);\n\n    _defineProperty(this, \"_onSet\", void 0);\n\n    _defineProperty(this, \"_mapNodeValue\", void 0);\n\n    this._numLeafs = 0;\n    this._root = null;\n    this._onHit = (_options$onHit = options === null || options === void 0 ? void 0 : options.onHit) !== null && _options$onHit !== void 0 ? _options$onHit : () => {};\n    this._onSet = (_options$onSet = options === null || options === void 0 ? void 0 : options.onSet) !== null && _options$onSet !== void 0 ? _options$onSet : () => {};\n    this._mapNodeValue = (_options$mapNodeValue = options === null || options === void 0 ? void 0 : options.mapNodeValue) !== null && _options$mapNodeValue !== void 0 ? _options$mapNodeValue : val => val;\n  }\n\n  size() {\n    return this._numLeafs;\n  } // TODO: nodeCount(): number\n\n\n  root() {\n    return this._root;\n  }\n\n  get(getNodeValue, handlers) {\n    var _this$getLeafNode;\n\n    return (_this$getLeafNode = this.getLeafNode(getNodeValue, handlers)) === null || _this$getLeafNode === void 0 ? void 0 : _this$getLeafNode.value;\n  }\n\n  getLeafNode(getNodeValue, handlers) {\n    return findLeaf(this.root(), nodeKey => this._mapNodeValue(getNodeValue(nodeKey)), {\n      onNodeVisit: node => {\n        handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n        if (node.type === 'leaf') {\n          this._onHit(node);\n        }\n      }\n    });\n  }\n\n  set(route, value, handlers) {\n    let leafNode;\n    let newRoot = null;\n\n    const setRetryablePart = () => {\n      newRoot = addLeaf(this.root(), route.map(([nodeKey, nodeValue]) => [nodeKey, this._mapNodeValue(nodeValue)]), null, value, null, {\n        onNodeVisit: node => {\n          handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n          if (node.type === 'leaf') {\n            leafNode = node;\n          }\n        }\n      }, () => {\n        this.clear();\n        setRetryablePart();\n      });\n    };\n\n    setRetryablePart();\n\n    if (!this.root()) {\n      this._root = newRoot;\n    }\n\n    this._numLeafs++;\n\n    this._onSet(Recoil_nullthrows(leafNode));\n  }\n\n  delete(node) {\n    if (!this.root()) {\n      return false;\n    }\n\n    const root = Recoil_nullthrows(this.root());\n    const existsInTree = pruneNodeFromTree(root, node, node.parent);\n\n    if (!existsInTree) {\n      return false;\n    }\n\n    if (node === root || root.type === 'branch' && !root.branches.size) {\n      this._root = null;\n      this._numLeafs = 0;\n      return true;\n    }\n\n    this._numLeafs -= countDownstreamLeaves(node);\n    return true;\n  }\n\n  clear() {\n    this._numLeafs = 0;\n    this._root = null;\n  }\n\n}\n\nconst findLeaf = (root, getNodeValue, handlers) => {\n  var _handlers$onNodeVisit;\n\n  if (root == null) {\n    return undefined;\n  }\n\n  handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit = handlers.onNodeVisit) === null || _handlers$onNodeVisit === void 0 ? void 0 : _handlers$onNodeVisit.call(handlers, root);\n\n  if (root.type === 'leaf') {\n    return root;\n  }\n\n  const nodeValue = getNodeValue(root.nodeKey);\n  return findLeaf(root.branches.get(nodeValue), getNodeValue, handlers);\n};\n\nconst addLeaf = (root, route, parent, value, branchKey, handlers, onAbort) => {\n  var _handlers$onNodeVisit2;\n\n  let node;\n\n  if (root == null) {\n    if (route.length === 0) {\n      node = {\n        type: 'leaf',\n        value,\n        parent,\n        branchKey\n      };\n    } else {\n      const [path, ...rest] = route;\n      const [nodeKey, nodeValue] = path;\n      node = {\n        type: 'branch',\n        nodeKey,\n        parent,\n        branches: new Map(),\n        branchKey\n      };\n      node.branches.set(nodeValue, addLeaf(null, rest, node, value, nodeValue, handlers, onAbort));\n    }\n  } else {\n    node = root;\n\n    if (route.length) {\n      const [path, ...rest] = route;\n      const [nodeKey, nodeValue] = path;\n\n      if (root.type !== 'branch' || root.nodeKey !== nodeKey) {\n        Recoil_recoverableViolation('Existing cache must have a branch midway through the ' + 'route with matching node key. Resetting cache.');\n        onAbort();\n        return node; // ignored\n      }\n\n      root.branches.set(nodeValue, addLeaf(root.branches.get(nodeValue), rest, root, value, nodeValue, handlers, onAbort));\n    }\n  }\n\n  handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit2 = handlers.onNodeVisit) === null || _handlers$onNodeVisit2 === void 0 ? void 0 : _handlers$onNodeVisit2.call(handlers, node);\n  return node;\n};\n\nconst pruneNodeFromTree = (root, node, parent) => {\n  if (!parent) {\n    return root === node;\n  }\n\n  parent.branches.delete(node.branchKey);\n  return pruneUpstreamBranches(root, parent, parent.parent);\n};\n\nconst pruneUpstreamBranches = (root, branchNode, parent) => {\n  if (!parent) {\n    return root === branchNode;\n  }\n\n  if (branchNode.branches.size === 0) {\n    parent.branches.delete(branchNode.branchKey);\n  }\n\n  return pruneUpstreamBranches(root, parent, parent.parent);\n};\n\nconst countDownstreamLeaves = node => node.type === 'leaf' ? 1 : Array.from(node.branches.values()).reduce((sum, currNode) => sum + countDownstreamLeaves(currNode), 0);\n\nvar Recoil_TreeCache = {\n  TreeCache\n};\n\nvar Recoil_TreeCache_1 = Recoil_TreeCache.TreeCache;\n\nvar Recoil_TreeCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TreeCache: Recoil_TreeCache_1\n});\n\nclass LRUCache {\n  constructor(options) {\n    var _options$mapKey;\n\n    _defineProperty(this, \"_maxSize\", void 0);\n\n    _defineProperty(this, \"_size\", void 0);\n\n    _defineProperty(this, \"_head\", void 0);\n\n    _defineProperty(this, \"_tail\", void 0);\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._maxSize = options.maxSize;\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;\n  }\n\n  head() {\n    return this._head;\n  }\n\n  tail() {\n    return this._tail;\n  }\n\n  size() {\n    return this._size;\n  }\n\n  maxSize() {\n    return this._maxSize;\n  }\n\n  has(key) {\n    return this._map.has(this._keyMapper(key));\n  }\n\n  get(key) {\n    const mappedKey = this._keyMapper(key);\n\n    const node = this._map.get(mappedKey);\n\n    if (!node) {\n      return undefined;\n    }\n\n    this.set(key, node.value);\n    return node.value;\n  }\n\n  set(key, val) {\n    const mappedKey = this._keyMapper(key);\n\n    const existingNode = this._map.get(mappedKey);\n\n    if (existingNode) {\n      this.delete(key);\n    }\n\n    const head = this.head();\n    const node = {\n      key,\n      right: head,\n      left: null,\n      value: val\n    };\n\n    if (head) {\n      head.left = node;\n    } else {\n      this._tail = node;\n    }\n\n    this._map.set(mappedKey, node);\n\n    this._head = node;\n    this._size++;\n\n    this._maybeDeleteLRU();\n  }\n\n  _maybeDeleteLRU() {\n    if (this.size() > this.maxSize()) {\n      this.deleteLru();\n    }\n  }\n\n  deleteLru() {\n    const tail = this.tail();\n\n    if (tail) {\n      this.delete(tail.key);\n    }\n  }\n\n  delete(key) {\n    const mappedKey = this._keyMapper(key);\n\n    if (!this._size || !this._map.has(mappedKey)) {\n      return;\n    }\n\n    const node = Recoil_nullthrows(this._map.get(mappedKey));\n    const right = node.right;\n    const left = node.left;\n\n    if (right) {\n      right.left = node.left;\n    }\n\n    if (left) {\n      left.right = node.right;\n    }\n\n    if (node === this.head()) {\n      this._head = right;\n    }\n\n    if (node === this.tail()) {\n      this._tail = left;\n    }\n\n    this._map.delete(mappedKey);\n\n    this._size--;\n  }\n\n  clear() {\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n  }\n\n}\n\nvar Recoil_LRUCache = {\n  LRUCache\n};\n\nvar Recoil_LRUCache_1 = Recoil_LRUCache.LRUCache;\n\nvar Recoil_LRUCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LRUCache: Recoil_LRUCache_1\n});\n\nconst {\n  LRUCache: LRUCache$1\n} = Recoil_LRUCache$1;\n\nconst {\n  TreeCache: TreeCache$1\n} = Recoil_TreeCache$1;\n\nfunction treeCacheLRU(maxSize, mapNodeValue = v => v) {\n  const lruCache = new LRUCache$1({\n    maxSize\n  });\n  const cache = new TreeCache$1({\n    mapNodeValue,\n    onHit: node => {\n      lruCache.set(node, true);\n    },\n    onSet: node => {\n      const lruNode = lruCache.tail();\n      lruCache.set(node, true);\n\n      if (lruNode && cache.size() > maxSize) {\n        cache.delete(lruNode.key);\n      }\n    }\n  }); // $FlowFixMe[method-unbinding]\n\n  return cache;\n}\n\nvar Recoil_treeCacheLRU = treeCacheLRU;\n\nconst TIME_WARNING_THRESHOLD_MS = 15;\n\nfunction stringify(x, opt, key) {\n  // A optimization to avoid the more expensive JSON.stringify() for simple strings\n  // This may lose protection for u2028 and u2029, though.\n  if (typeof x === 'string' && !x.includes('\"') && !x.includes('\\\\')) {\n    return `\"${x}\"`;\n  } // Handle primitive types\n\n\n  switch (typeof x) {\n    case 'undefined':\n      return '';\n    // JSON.stringify(undefined) returns undefined, but we always want to return a string\n\n    case 'boolean':\n      return x ? 'true' : 'false';\n\n    case 'number':\n    case 'symbol':\n      // case 'bigint': // BigInt is not supported in www\n      return String(x);\n\n    case 'string':\n      // Add surrounding quotes and escape internal quotes\n      return JSON.stringify(x);\n\n    case 'function':\n      if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {\n        throw Recoil_err('Attempt to serialize function in a Recoil cache key');\n      }\n\n      return `__FUNCTION(${x.name})__`;\n  }\n\n  if (x === null) {\n    return 'null';\n  } // Fallback case for unknown types\n\n\n  if (typeof x !== 'object') {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n  } // Deal with all promises as equivalent for now.\n\n\n  if (Recoil_isPromise(x)) {\n    return '__PROMISE__';\n  } // Arrays handle recursive stringification\n\n\n  if (Array.isArray(x)) {\n    return `[${x.map((v, i) => stringify(v, opt, i.toString()))}]`;\n  } // If an object defines a toJSON() method, then use that to override the\n  // serialization.  This matches the behavior of JSON.stringify().\n  // Pass the key for compatibility.\n  // Immutable.js collections define this method to allow us to serialize them.\n\n\n  if (typeof x.toJSON === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(x.toJSON(key), opt, key);\n  } // For built-in Maps, sort the keys in a stable order instead of the\n  // default insertion order.  Support non-string keys.\n\n\n  if (x instanceof Map) {\n    const obj = {};\n\n    for (const [k, v] of x) {\n      // Stringify will escape any nested quotes\n      obj[typeof k === 'string' ? k : stringify(k, opt)] = v;\n    }\n\n    return stringify(obj, opt, key);\n  } // For built-in Sets, sort the keys in a stable order instead of the\n  // default insertion order.\n\n\n  if (x instanceof Set) {\n    return stringify(Array.from(x).sort((a, b) => stringify(a, opt).localeCompare(stringify(b, opt))), opt, key);\n  } // Anything else that is iterable serialize as an Array.\n\n\n  if (Symbol !== undefined && x[Symbol.iterator] != null && typeof x[Symbol.iterator] === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(Array.from(x), opt, key);\n  } // For all other Objects, sort the keys in a stable order.\n\n\n  return `{${Object.keys(x).filter(k => x[k] !== undefined).sort() // stringify the key to add quotes and escape any nested slashes or quotes.\n  .map(k => `${stringify(k, opt)}:${stringify(x[k], opt, k)}`).join(',')}}`;\n} // Utility similar to JSON.stringify() except:\n// * Serialize built-in Sets as an Array\n// * Serialize built-in Maps as an Object.  Supports non-string keys.\n// * Serialize other iterables as arrays\n// * Sort the keys of Objects and Maps to have a stable order based on string conversion.\n//    This overrides their default insertion order.\n// * Still uses toJSON() of any object to override serialization\n// * Support Symbols (though don't guarantee uniqueness)\n// * We could support BigInt, but Flow doesn't seem to like it.\n// See Recoil_stableStringify-test.js for examples\n\n\nfunction stableStringify(x, opt = {\n  allowFunctions: false\n}) {\n  if (false) {}\n\n  return stringify(x, opt);\n}\n\nvar Recoil_stableStringify = stableStringify;\n\nconst {\n  TreeCache: TreeCache$2\n} = Recoil_TreeCache$1;\n\n\n\n\n\n\n\n\n\nconst defaultPolicy = {\n  equality: 'reference',\n  eviction: 'keep-all',\n  maxSize: Infinity\n};\n\nfunction treeCacheFromPolicy({\n  equality = defaultPolicy.equality,\n  eviction = defaultPolicy.eviction,\n  maxSize = defaultPolicy.maxSize\n} = defaultPolicy) {\n  const valueMapper = getValueMapper(equality);\n  const treeCache = getTreeCache(eviction, maxSize, valueMapper);\n  return treeCache;\n}\n\nfunction getValueMapper(equality) {\n  switch (equality) {\n    case 'reference':\n      return val => val;\n\n    case 'value':\n      return val => Recoil_stableStringify(val);\n  }\n\n  throw Recoil_err(`Unrecognized equality policy ${equality}`);\n}\n\nfunction getTreeCache(eviction, maxSize, mapNodeValue) {\n  switch (eviction) {\n    case 'keep-all':\n      // $FlowFixMe[method-unbinding]\n      return new TreeCache$2({\n        mapNodeValue\n      });\n\n    case 'lru':\n      return Recoil_treeCacheLRU(Recoil_nullthrows(maxSize), mapNodeValue);\n\n    case 'most-recent':\n      return Recoil_treeCacheLRU(1, mapNodeValue);\n  }\n\n  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);\n}\n\nvar Recoil_treeCacheFromPolicy = treeCacheFromPolicy;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction isNode(object) {\n  var _ownerDocument, _doc$defaultView;\n\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  const doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;\n  const defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;\n  return !!(object != null && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nvar Recoil_isNode = (/* unused pure expression or super */ null && (isNode));\n\nconst {\n  isReactNative: isReactNative$1,\n  isSSR: isSSR$4\n} = Recoil_Environment;\n\n\n\n\n\nfunction shouldNotBeFrozen(value) {\n  // Primitives and functions:\n  if (value === null || typeof value !== 'object') {\n    return true;\n  } // React elements:\n\n\n  switch (typeof value.$$typeof) {\n    case 'symbol':\n      return true;\n\n    case 'number':\n      return true;\n  } // Immutable structures:\n\n\n  if (value['@@__IMMUTABLE_ITERABLE__@@'] != null || value['@@__IMMUTABLE_KEYED__@@'] != null || value['@@__IMMUTABLE_INDEXED__@@'] != null || value['@@__IMMUTABLE_ORDERED__@@'] != null || value['@@__IMMUTABLE_RECORD__@@'] != null) {\n    return true;\n  } // DOM nodes:\n\n\n  if (Recoil_isNode(value)) {\n    return true;\n  }\n\n  if (Recoil_isPromise(value)) {\n    return true;\n  }\n\n  if (value instanceof Error) {\n    return true;\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return true;\n  } // Some environments, just as Jest, don't work with the instanceof check\n\n\n  if (!isSSR$4 && !isReactNative$1 && ( // $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709\n  value === window || value instanceof Window)) {\n    return true;\n  }\n\n  return false;\n} // Recursively freeze a value to enforce it is read-only.\n// This may also have minimal performance improvements for enumerating\n// objects (based on browser implementations, of course)\n\n\nfunction deepFreezeValue(value) {\n  if (typeof value !== 'object' || shouldNotBeFrozen(value)) {\n    return;\n  }\n\n  Object.freeze(value); // Make all properties read-only\n\n  for (const key in value) {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      const prop = value[key]; // Prevent infinite recurssion for circular references.\n\n      if (typeof prop === 'object' && prop != null && !Object.isFrozen(prop)) {\n        deepFreezeValue(prop);\n      }\n    }\n  }\n\n  Object.seal(value); // This also makes existing properties non-configurable.\n}\n\nvar Recoil_deepFreezeValue = (/* unused pure expression or super */ null && (deepFreezeValue));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is a stub for some integration into FB internal stuff\n */\nfunction startPerfBlock(_id) {\n  return () => null;\n}\n\nvar Recoil_PerformanceTimings = {\n  startPerfBlock\n};\n\nconst {\n  loadableWithError: loadableWithError$1,\n  loadableWithPromise: loadableWithPromise$1,\n  loadableWithValue: loadableWithValue$2\n} = Recoil_Loadable$1;\n\n\n\nconst {\n  getNodeLoadable: getNodeLoadable$2,\n  peekNodeLoadable: peekNodeLoadable$1,\n  setNodeValue: setNodeValue$3\n} = Recoil_FunctionalCore;\n\nconst {\n  saveDependencyMapToStore: saveDependencyMapToStore$1\n} = Recoil_Graph;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$6,\n  RecoilValueNotReady: RecoilValueNotReady$2,\n  getConfigDeletionHandler: getConfigDeletionHandler$1,\n  getNode: getNode$6,\n  registerNode: registerNode$1\n} = Recoil_Node;\n\nconst {\n  isRecoilValue: isRecoilValue$3\n} = Recoil_RecoilValue$1;\n\nconst {\n  markRecoilValueModified: markRecoilValueModified$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  retainedByOptionWithDefault: retainedByOptionWithDefault$1\n} = Recoil_Retention;\n\nconst {\n  recoilCallback: recoilCallback$1\n} = Recoil_useRecoilCallback;\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  startPerfBlock: startPerfBlock$1\n} = Recoil_PerformanceTimings;\n\nclass Canceled {}\n\nconst CANCELED = new Canceled();\n/**\n * An ExecutionId is an arbitrary ID that lets us distinguish executions from\n * each other. This is necessary as we need a way of solving this problem:\n * \"given 3 async executions, only update state for the 'latest' execution when\n * it finishes running regardless of when the other 2 finish\". ExecutionIds\n * provide a convenient way of identifying executions so that we can track and\n * manage them over time.\n */\n\nconst dependencyStack = []; // for detecting circular dependencies.\n\nconst waitingStores = new Map();\n\nconst getNewExecutionId = (() => {\n  let executionId = 0;\n  return () => executionId++;\n})();\n/* eslint-disable no-redeclare */\n\n\nfunction selector(options) {\n  let recoilValue = null;\n  const {\n    key,\n    get,\n    cachePolicy_UNSTABLE: cachePolicy\n  } = options;\n  const set = options.set != null ? options.set : undefined; // flow\n\n  if (false) {} // This is every discovered dependency across all executions\n\n\n  const discoveredDependencyNodeKeys = new Set();\n  const cache = Recoil_treeCacheFromPolicy(cachePolicy !== null && cachePolicy !== void 0 ? cachePolicy : {\n    equality: 'reference',\n    eviction: 'keep-all'\n  });\n  const retainedBy = retainedByOptionWithDefault$1(options.retainedBy_UNSTABLE);\n  const executionInfoMap = new Map();\n  let liveStoresCount = 0;\n\n  function selectorIsLive() {\n    return !Recoil_gkx('recoil_memory_managament_2020') || liveStoresCount > 0;\n  }\n\n  function selectorInit(store) {\n    store.getState().knownSelectors.add(key);\n    liveStoresCount++;\n    return () => {\n      liveStoresCount--;\n    };\n  }\n\n  function selectorShouldDeleteConfigOnRelease() {\n    return getConfigDeletionHandler$1(key) !== undefined && !selectorIsLive();\n  }\n\n  function resolveAsync(store, state, executionId, loadable, depValues) {\n    setCache(state, loadable, depValues);\n    setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n    notifyStoresOfResolvedAsync(store, executionId);\n  }\n\n  function notifyStoresOfResolvedAsync(store, executionId) {\n    if (isLatestExecution(store, executionId)) {\n      clearExecutionInfo(store);\n    }\n\n    const stores = waitingStores.get(executionId);\n\n    if (stores !== undefined) {\n      for (const waitingStore of stores) {\n        markRecoilValueModified$1(waitingStore, Recoil_nullthrows(recoilValue));\n      }\n\n      waitingStores.delete(executionId);\n    }\n  }\n\n  function markStoreWaitingForResolvedAsync(store, executionId) {\n    let stores = waitingStores.get(executionId);\n\n    if (stores == null) {\n      waitingStores.set(executionId, stores = new Set());\n    }\n\n    stores.add(store);\n  }\n\n  function getCachedNodeLoadable(store, state, nodeKey) {\n    const isKeyPointingToSelector = store.getState().knownSelectors.has(nodeKey);\n    /**\n     * It's important that we don't bypass calling getNodeLoadable for atoms\n     * as getNodeLoadable has side effects in state\n     */\n\n    if (isKeyPointingToSelector && state.atomValues.has(nodeKey)) {\n      return Recoil_nullthrows(state.atomValues.get(nodeKey));\n    }\n\n    const loadable = getNodeLoadable$2(store, state, nodeKey);\n\n    if (loadable.state !== 'loading' && isKeyPointingToSelector) {\n      state.atomValues.set(nodeKey, loadable);\n    }\n\n    return loadable;\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * returned from a selector's get() (either explicitly or implicitly by\n   * running a function that uses the \"async\" keyword). If a selector's get()\n   * returns a promise, we have two possibilities:\n   *\n   * 1. The promise will resolve, in which case it will have completely finished\n   *    executing without any remaining pending dependencies. No more retries\n   *    are needed and we can proceed with updating the cache and notifying\n   *    subscribers (if it is the latest execution, otherwise only the cache\n   *    will be updated and subscriptions will not be fired). This is the case\n   *    handled by the attached then() handler.\n   *\n   * 2. The promise will throw because it either has an error or it came across\n   *    an async dependency that has not yet resolved, in which case we will\n   *    call wrapDepdencyPromise(), whose responsibility is to handle dependency\n   *    promises. This case is handled by the attached catch() handler.\n   *\n   * Both branches will eventually resolve to the final result of the selector\n   * (or an error if a real error occurred).\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was thrown--AKA a\n   * dependency promise. Dependency promises should be passed to\n   * wrapPendingDependencyPromise()).\n   */\n\n\n  function wrapPendingPromise(store, promise, state, depValues, executionId, loadingDepsState) {\n    return promise.then(value => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      const loadable = loadableWithValue$2(value);\n      resolveAsync(store, state, executionId, loadable, depValues);\n      return value;\n    }).catch(errorOrPromise => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      updateExecutionInfoDepValues(store, executionId, depValues);\n\n      if (Recoil_isPromise(errorOrPromise)) {\n        return wrapPendingDependencyPromise(store, errorOrPromise, state, depValues, executionId, loadingDepsState);\n      }\n\n      const loadable = loadableWithError$1(errorOrPromise);\n      resolveAsync(store, state, executionId, loadable, depValues);\n      throw errorOrPromise;\n    });\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * thrown from a selector's get(). If a selector's get() throws a promise,\n   * we have two possibilities:\n   *\n   * 1. The promise will resolve, meaning one of our selector's dependencies is\n   *    now available and we should \"retry\" our get() by running it again. This\n   *    is the case handled by the attached then() handler.\n   *\n   * 2. The promise will throw because something went wrong with the dependency\n   *    promise (in other words a real error occurred). This case is handled by\n   *    the attached catch() handler. If the dependency promise throws, it is\n   *    _always_ a real error and not another dependency promise (any dependency\n   *    promises would have been handled upstream).\n   *\n   * The then() branch will eventually resolve to the final result of the\n   * selector (or an error if a real error occurs), and the catch() will always\n   * resolve to an error because the dependency promise is a promise that was\n   * wrapped upstream, meaning it will only resolve to its real value or to a\n   * real error.\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was returned from\n   * get(). The intention is that this function is only passed promises that\n   * were thrown due to a pending dependency. Promises returned by get() should\n   * be passed to wrapPendingPromise() instead.\n   */\n\n\n  function wrapPendingDependencyPromise(store, promise, state, existingDeps, executionId, loadingDepsState) {\n    return promise.then(resolvedDep => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      } // Check if we are handling a pending Recoil dependency or if the user\n      // threw their own Promise to \"suspend\" a selector evaluation.  We need\n      // to check that the loadingDepPromise actually matches the promise that\n      // we caught in case the selector happened to catch the promise we threw\n      // for a pending Recoil dependency from `getRecoilValue()` and threw\n      // their own promise instead.\n\n\n      if (loadingDepsState.loadingDepKey != null && loadingDepsState.loadingDepPromise === promise) {\n        /**\n         * Note for async atoms, this means we are changing the atom's value\n         * in the store for the given version. This should be alright because\n         * the version of state is now stale and a new version will have\n         * already been triggered by the atom being resolved (see this logic\n         * in Recoil_atom.js)\n         */\n        state.atomValues.set(loadingDepsState.loadingDepKey, loadableWithValue$2(resolvedDep));\n      } else {\n        /**\n         * If resolvedDepKey is not defined, the promise was a user-thrown\n         * promise. User-thrown promises are an advanced feature and they\n         * should be avoided in almost all cases. Using `loadable.map()` inside\n         * of selectors for loading loadables and then throwing that mapped\n         * loadable's promise is an example of a user-thrown promise.\n         *\n         * When we hit a user-thrown promise, we have to bail out of an optimization\n         * where we bypass calculating selector cache keys for selectors that\n         * have been previously seen for a given state (these selectors are saved in\n         * state.atomValues) to avoid stale state as we have no way of knowing\n         * what state changes happened (if any) in result to the promise resolving.\n         *\n         * Ideally we would only bail out selectors that are in the chain of\n         * dependencies for this selector, but there's currently no way to get\n         * a full list of a selector's downstream nodes because the state that\n         * is executing may be a discarded tree (so store.getGraph(state.version)\n         * will be empty), and the full dep tree may not be in the selector\n         * caches in the case where the selector's cache was cleared. To solve\n         * for this we would have to keep track of all running selector\n         * executions and their downstream deps. Because this only covers edge\n         * cases, that complexity might not be justifyable.\n         */\n        store.getState().knownSelectors.forEach(nodeKey => {\n          state.atomValues.delete(nodeKey);\n        });\n      }\n      /**\n       * Optimization: Now that the dependency has resolved, let's try hitting\n       * the cache in case the dep resolved to a value we have previously seen.\n       *\n       * TODO:\n       * Note this optimization is not perfect because it only prevents re-executions\n       * _after_ the point where an async dependency is found. Any code leading\n       * up to the async dependency may have run unnecessarily. The ideal case\n       * would be to wait for the async dependency to resolve first, check the\n       * cache, and prevent _any_ execution of the selector if the resulting\n       * value of the dependency leads to a path that is found in the cache.\n       * The ideal case is more difficult to implement as it would require that\n       * we capture and wait for the the async dependency right after checking\n       * the cache. The current approach takes advantage of the fact that running\n       * the selector already has a code path that lets us exit early when\n       * an async dep resolves.\n       */\n\n\n      const cachedLoadable = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n\n      if (cachedLoadable && cachedLoadable.state !== 'loading') {\n        /**\n         * This has to notify stores of a resolved async, even if there is no\n         * current pending execution for the following case:\n         * 1) A component renders with this pending loadable.\n         * 2) The upstream dependency resolves.\n         * 3) While processing some other selector it reads this one, such as\n         *    while traversing its dependencies.  At this point it gets the\n         *    new resolved value synchronously and clears the current\n         *    execution ID.  The component wasn't getting the value itself,\n         *    though, so it still has the pending loadable.\n         * 4) When this code executes the current execution id was cleared\n         *    and it wouldn't notify the component of the new value.\n         *\n         * I think this is only an issue with \"early\" rendering since the\n         * components got their value using the in-progress execution.\n         * We don't have a unit test for this case yet.  I'm not sure it is\n         * necessary with recoil_concurrent_support mode.\n         */\n        if (isLatestExecution(store, executionId) || getExecutionInfo(store) == null) {\n          notifyStoresOfResolvedAsync(store, executionId);\n        }\n\n        if (cachedLoadable.state === 'hasValue') {\n          return cachedLoadable.contents;\n        } else {\n          throw cachedLoadable.contents;\n        }\n      }\n      /**\n       * If this execution is stale, let's check to see if there is some in\n       * progress execution with a matching state. If we find a match, then\n       * we can take the value from that in-progress execution. Note this may\n       * sound like an edge case, but may be very common in cases where a\n       * loading dependency resolves from loading to having a value (thus\n       * possibly triggering a re-render), and React re-renders before the\n       * chained .then() functions run, thus starting a new execution as the\n       * dep has changed value. Without this check we will run the selector\n       * twice (once in the new execution and once again in this .then(), so\n       * this check is necessary to keep unnecessary re-executions to a\n       * minimum).\n       *\n       * Also note this code does not check across all executions that may be\n       * running. It only optimizes for the _latest_ execution per store as\n       * we currently do not maintain a list of all currently running executions.\n       * This means in some cases we may run selectors more than strictly\n       * necessary when there are multiple executions running for the same\n       * selector. This may be a valid tradeoff as checking for dep changes\n       * across all in-progress executions may take longer than just\n       * re-running the selector. This will be app-dependent, and maybe in the\n       * future we can make the behavior configurable. An ideal fix may be\n       * to extend the tree cache to support caching loading states.\n       */\n\n\n      if (!isLatestExecution(store, executionId)) {\n        const executionInfo = getExecutionInfoOfInProgressExecution(state);\n\n        if ((executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.latestLoadable.state) === 'loading') {\n          /**\n           * Returning promise here without wrapping as the wrapper logic was\n           * already done upstream when this promise was generated.\n           */\n          return executionInfo.latestLoadable.contents;\n        }\n      } // Retry the selector evaluation now that the dependency has resolved\n\n\n      const [loadable, depValues] = evaluateSelectorGetter(store, state, executionId);\n      updateExecutionInfoDepValues(store, executionId, depValues);\n\n      if (loadable.state !== 'loading') {\n        resolveAsync(store, state, executionId, loadable, depValues);\n      }\n\n      if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      }\n\n      return loadable.contents;\n    }).catch(error => {\n      // The selector was released since the request began; ignore the response.\n      if (error instanceof Canceled) {\n        throw CANCELED;\n      }\n\n      if (!selectorIsLive()) {\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      const loadable = loadableWithError$1(error);\n      resolveAsync(store, state, executionId, loadable, existingDeps);\n      throw error;\n    });\n  }\n\n  function setDepsInStore(store, state, deps, executionId) {\n    var _store$getState, _store$getState$curre, _store$getState2, _store$getState2$next;\n\n    if (isLatestExecution(store, executionId) || state.version === ((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$curre = _store$getState.currentTree) === null || _store$getState$curre === void 0 ? void 0 : _store$getState$curre.version) || state.version === ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$next = _store$getState2.nextTree) === null || _store$getState2$next === void 0 ? void 0 : _store$getState2$next.version)) {\n      var _store$getState$nextT, _store$getState3, _store$getState3$next;\n\n      saveDependencyMapToStore$1(new Map([[key, deps]]), store, (_store$getState$nextT = (_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$next = _store$getState3.nextTree) === null || _store$getState3$next === void 0 ? void 0 : _store$getState3$next.version) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree.version);\n      deps.forEach(nodeKey => discoveredDependencyNodeKeys.add(nodeKey));\n    }\n  }\n\n  function setNewDepInStore(store, state, deps, newDepKey, executionId) {\n    deps.add(newDepKey);\n    setDepsInStore(store, state, deps, executionId);\n  }\n\n  function evaluateSelectorGetter(store, state, executionId) {\n    const endPerfBlock = startPerfBlock$1(key); // TODO T63965866: use execution ID here\n\n    let gateCallback = true;\n\n    const finishEvaluation = () => {\n      endPerfBlock();\n      gateCallback = false;\n    };\n\n    let result;\n    let resultIsError = false;\n    let loadable;\n    const loadingDepsState = {\n      loadingDepKey: null,\n      loadingDepPromise: null\n    };\n    const depValues = new Map();\n    /**\n     * Starting a fresh set of deps that we'll be using to update state. We're\n     * starting a new set versus adding it in existing state deps because\n     * the version of state that we update deps for may be a more recent version\n     * than the version the selector was called with. This is because the latest\n     * execution will update the deps of the current/latest version of state (\n     * this is safe to do because the fact that the selector is the latest\n     * execution means the deps we discover below are our best guess at the\n     * deps for the current/latest state in the store)\n     */\n\n    const deps = new Set();\n    setDepsInStore(store, state, deps, executionId);\n\n    function getRecoilValue(dep) {\n      const {\n        key: depKey\n      } = dep;\n      setNewDepInStore(store, state, deps, depKey, executionId);\n      const depLoadable = getCachedNodeLoadable(store, state, depKey);\n      depValues.set(depKey, depLoadable);\n\n      switch (depLoadable.state) {\n        case 'hasValue':\n          return depLoadable.contents;\n\n        case 'hasError':\n          throw depLoadable.contents;\n\n        case 'loading':\n          loadingDepsState.loadingDepKey = depKey;\n          loadingDepsState.loadingDepPromise = depLoadable.contents;\n          throw depLoadable.contents;\n      }\n\n      throw Recoil_err('Invalid Loadable state');\n    }\n\n    const getCallback = fn => {\n      return (...args) => {\n        if (gateCallback) {\n          throw Recoil_err('Callbacks from getCallback() should only be called asynchronously after the selector is evalutated.  It can be used for selectors to return objects with callbacks that can work with Recoil state without a subscription.');\n        }\n\n        !(recoilValue != null) ?  false ? 0 : Recoil_invariant(false) : void 0;\n        return recoilCallback$1(store, fn, args, {\n          node: recoilValue\n        } // flowlint-line unclear-type:off\n        );\n      };\n    };\n\n    try {\n      result = get({\n        get: getRecoilValue,\n        getCallback\n      });\n      result = isRecoilValue$3(result) ? getRecoilValue(result) : result;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingPromise(store, result, state, depValues, executionId, loadingDepsState).finally(finishEvaluation);\n      } else {\n        finishEvaluation();\n      }\n    } catch (errorOrDepPromise) {\n      result = errorOrDepPromise;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingDependencyPromise(store, result, state, depValues, executionId, loadingDepsState).finally(finishEvaluation);\n      } else {\n        resultIsError = true;\n        finishEvaluation();\n      }\n    }\n\n    if (resultIsError) {\n      loadable = loadableWithError$1(result);\n    } else if (Recoil_isPromise(result)) {\n      loadable = loadableWithPromise$1(result);\n    } else {\n      loadable = loadableWithValue$2(result);\n    }\n\n    return [loadable, depValues];\n  }\n\n  function getValFromCacheAndUpdatedDownstreamDeps(store, state) {\n    const depsAfterCacheDone = new Set();\n    const executionInfo = getExecutionInfo(store);\n    let cachedVal;\n\n    try {\n      cachedVal = cache.get(nodeKey => {\n        !(typeof nodeKey === 'string') ?  false ? 0 : Recoil_invariant(false) : void 0;\n        const loadable = getCachedNodeLoadable(store, state, nodeKey);\n        return loadable.contents;\n      }, {\n        onNodeVisit: node => {\n          if (node.type === 'branch' && node.nodeKey !== key) {\n            depsAfterCacheDone.add(node.nodeKey);\n          }\n        }\n      });\n    } catch (error) {\n      throw Recoil_err(`Problem with cache lookup for selector \"${key}\": ${error.message}`);\n    }\n    /**\n     * Ensure store contains correct dependencies if we hit the cache so that\n     * the store deps and cache are in sync for a given state. This is important\n     * because store deps are normally updated when new executions are created,\n     * but cache hits don't trigger new executions but they still _may_ signifiy\n     * a change in deps in the store if the store deps for this state are empty\n     * or stale.\n     */\n\n\n    if (cachedVal) {\n      setDepsInStore(store, state, depsAfterCacheDone, executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.latestExecutionId);\n    }\n\n    return cachedVal;\n  }\n  /**\n   * FIXME: dep keys should take into account the state of the loadable to\n   * prevent the edge case where a loadable with an error and a loadable with\n   * an error as a value are treated as the same thing incorrectly. For example\n   * these two should be treated differently:\n   *\n   * selector({key: '', get: () => new Error('hi')});\n   * selector({key: '', get () => {throw new Error('hi')}});\n   *\n   * With current implementation they are treated the same\n   */\n\n\n  function depValuesToDepRoute(depValues) {\n    return Array.from(depValues.entries()).map(([depKey, valLoadable]) => [depKey, valLoadable.contents]);\n  }\n\n  function getValFromRunningNewExecutionAndUpdatedDeps(store, state) {\n    const newExecutionId = getNewExecutionId();\n    const [loadable, newDepValues] = evaluateSelectorGetter(store, state, newExecutionId);\n    /**\n     * Conditionally updates the cache with a given loadable.\n     *\n     * We only cache loadables that are not loading because our cache keys are\n     * based on dep values, which are in an unfinished state for loadables that\n     * have a 'loading' state (new deps may be discovered while the selector\n     * runs its async code). We never want to cache partial dependencies b/c it\n     * could lead to errors, such as prematurely returning the result based on a\n     * partial list of deps-- we need the full list of deps to ensure that we\n     * are returning the correct result from cache.\n     */\n\n    if (loadable.state === 'loading') {\n      setExecutionInfo(store, newExecutionId, loadable, newDepValues, state);\n      markStoreWaitingForResolvedAsync(store, newExecutionId);\n    } else {\n      clearExecutionInfo(store);\n      setCache(state, loadable, newDepValues);\n    }\n\n    return loadable;\n  }\n  /**\n   * Given a tree state, this function returns the \"selector result\", which is\n   * defined as a size-2 tuple of [DependencyMap, Loadable<T>].\n   *\n   * The selector's get() function will only be re-evaluated if _both_ of the\n   * following statements are true:\n   *\n   * 1. The current dep values from the given state produced a cache key that\n   *    was not found in the cache.\n   * 2. There is no currently running async execution OR there is an\n   *    async execution that is running, but after comparing the dep values in\n   *    the given state with the dep values that the execution has discovered so\n   *    far we find that at least one dep value has changed, in which case we\n   *    start a new execution (the previously running execution will continue to\n   *    run to completion, but only the new execution will be deemed the\n   *    'latest' execution, meaning it will be the only execution that will\n   *    update global state when it is finished. Any non-latest executions will\n   *    run to completion and update the selector cache but not global state).\n   */\n\n\n  function getSelectorValAndUpdatedDeps(store, state) {\n    const cachedVal = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n\n    if (cachedVal != null) {\n      clearExecutionInfo(store);\n      return cachedVal;\n    }\n\n    const inProgressExecutionInfo = getExecutionInfoOfInProgressExecution(state); // FIXME: this won't work with custom caching b/c it uses separate cache\n\n    if (inProgressExecutionInfo != null) {\n      var _inProgressExecutionI;\n\n      if (((_inProgressExecutionI = inProgressExecutionInfo.latestLoadable) === null || _inProgressExecutionI === void 0 ? void 0 : _inProgressExecutionI.state) === 'loading') {\n        markStoreWaitingForResolvedAsync(store, Recoil_nullthrows(inProgressExecutionInfo.latestExecutionId));\n      } // FIXME: check after the fact to see if we made the right choice by waiting\n\n\n      return Recoil_nullthrows(inProgressExecutionInfo.latestLoadable);\n    }\n\n    return getValFromRunningNewExecutionAndUpdatedDeps(store, state);\n  }\n  /**\n   * Searches execution info across all stores to see if there is an in-progress\n   * execution whose dependency values match the values of the requesting store.\n   */\n\n\n  function getExecutionInfoOfInProgressExecution(state) {\n    var _Array$from$find;\n\n    const [, executionInfo] = (_Array$from$find = Array.from(executionInfoMap.entries()).find(([store, execInfo]) => {\n      return execInfo.latestLoadable != null && execInfo.latestExecutionId != null && !haveAsyncDepsChanged(store, state);\n    })) !== null && _Array$from$find !== void 0 ? _Array$from$find : [];\n    return executionInfo;\n  }\n\n  const mapOfCheckedVersions = new Map();\n\n  function haveAsyncDepsChanged(store, state) {\n    var _executionInfo$depVal, _mapOfCheckedVersions;\n\n    const executionInfo = getExecutionInfo(store);\n    const oldDepValues = (_executionInfo$depVal = executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.depValuesDiscoveredSoFarDuringAsyncWork) !== null && _executionInfo$depVal !== void 0 ? _executionInfo$depVal : new Map();\n    const cachedDepValuesCheckedForThisVersion = Array(((_mapOfCheckedVersions = mapOfCheckedVersions.get(state.version)) !== null && _mapOfCheckedVersions !== void 0 ? _mapOfCheckedVersions : new Map()).entries());\n    const isCachedVersionSame = mapOfCheckedVersions.has(state.version) && cachedDepValuesCheckedForThisVersion.length === oldDepValues.size && cachedDepValuesCheckedForThisVersion.every(([nodeKey, nodeVal]) => {\n      return oldDepValues.get(nodeKey) === nodeVal;\n    });\n\n    if (oldDepValues == null || state.version === (executionInfo === null || executionInfo === void 0 ? void 0 : executionInfo.stateVersion) || isCachedVersionSame) {\n      return false;\n    }\n\n    mapOfCheckedVersions.set(state.version, new Map(oldDepValues));\n    return Array.from(oldDepValues).some(([nodeKey, oldVal]) => {\n      const loadable = getCachedNodeLoadable(store, state, nodeKey);\n      return loadable.contents !== oldVal.contents;\n    });\n  }\n\n  function getExecutionInfo(store) {\n    return executionInfoMap.get(store);\n  }\n  /**\n   * This function will update the selector's execution info when the selector\n   * has either finished running an execution or has started a new execution. If\n   * the given loadable is in a 'loading' state, the intention is that a new\n   * execution has started. Otherwise, the intention is that an execution has\n   * just finished.\n   */\n\n\n  function setExecutionInfo(store, newExecutionId, loadable, depValues, state) {\n    executionInfoMap.set(store, {\n      depValuesDiscoveredSoFarDuringAsyncWork: depValues,\n      latestExecutionId: newExecutionId,\n      latestLoadable: loadable,\n      stateVersion: state.version\n    });\n  }\n\n  function updateExecutionInfoDepValues(store, executionId, depValues) {\n    if (isLatestExecution(store, executionId)) {\n      const executionInfo = getExecutionInfo(store);\n\n      if (executionInfo != null) {\n        executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n      }\n    }\n  }\n\n  function clearExecutionInfo(store) {\n    executionInfoMap.delete(store);\n  }\n\n  function isLatestExecution(store, executionId) {\n    var _getExecutionInfo;\n\n    return executionId === ((_getExecutionInfo = getExecutionInfo(store)) === null || _getExecutionInfo === void 0 ? void 0 : _getExecutionInfo.latestExecutionId);\n  }\n\n  function setCache(state, loadable, depValues) {\n    if (false) {}\n\n    state.atomValues.set(key, loadable);\n\n    try {\n      cache.set(depValuesToDepRoute(depValues), loadable);\n    } catch (error) {\n      throw Recoil_err(`Problem with setting cache for selector \"${key}\": ${error.message}`);\n    }\n  }\n\n  function detectCircularDependencies(fn) {\n    if (dependencyStack.includes(key)) {\n      const message = `Recoil selector has circular dependencies: ${dependencyStack.slice(dependencyStack.indexOf(key)).join(' \\u2192 ')}`;\n      return loadableWithError$1(Recoil_err(message));\n    }\n\n    dependencyStack.push(key);\n\n    try {\n      return fn();\n    } finally {\n      dependencyStack.pop();\n    }\n  }\n\n  function selectorPeek(store, state) {\n    return cache.get(nodeKey => {\n      var _peekNodeLoadable;\n\n      !(typeof nodeKey === 'string') ?  false ? 0 : Recoil_invariant(false) : void 0;\n      return (_peekNodeLoadable = peekNodeLoadable$1(store, state, nodeKey)) === null || _peekNodeLoadable === void 0 ? void 0 : _peekNodeLoadable.contents;\n    });\n  }\n\n  function selectorGet(store, state) {\n    return detectCircularDependencies(() => getSelectorValAndUpdatedDeps(store, state));\n  }\n\n  function invalidateSelector(state) {\n    state.atomValues.delete(key);\n  }\n\n  function clearSelectorCache(store, treeState) {\n    !(recoilValue != null) ?  false ? 0 : Recoil_invariant(false) : void 0;\n\n    for (const nodeKey of discoveredDependencyNodeKeys) {\n      var _node$clearCache;\n\n      const node = getNode$6(nodeKey);\n      (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, treeState);\n    }\n\n    discoveredDependencyNodeKeys.clear();\n    invalidateSelector(treeState);\n    cache.clear();\n    markRecoilValueModified$1(store, recoilValue);\n  }\n\n  if (set != null) {\n    /**\n     * ES5 strict mode prohibits defining non-top-level function declarations,\n     * so don't use function declaration syntax here\n     */\n    const selectorSet = (store, state, newValue) => {\n      let syncSelectorSetFinished = false;\n      const writes = new Map();\n\n      function getRecoilValue({\n        key: depKey\n      }) {\n        if (syncSelectorSetFinished) {\n          throw Recoil_err('Recoil: Async selector sets are not currently supported.');\n        }\n\n        const loadable = getCachedNodeLoadable(store, state, depKey);\n\n        if (loadable.state === 'hasValue') {\n          return loadable.contents;\n        } else if (loadable.state === 'loading') {\n          throw new RecoilValueNotReady$2(depKey);\n        } else {\n          throw loadable.contents;\n        }\n      }\n\n      function setRecoilState(recoilState, valueOrUpdater) {\n        if (syncSelectorSetFinished) {\n          throw Recoil_err('Recoil: Async selector sets are not currently supported.');\n        }\n\n        const setValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict type S from being a function itself without losing support for opaque types\n        // flowlint-next-line unclear-type:off\n        valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n        const upstreamWrites = setNodeValue$3(store, state, recoilState.key, setValue);\n        upstreamWrites.forEach((v, k) => writes.set(k, v));\n      }\n\n      function resetRecoilState(recoilState) {\n        setRecoilState(recoilState, DEFAULT_VALUE$6);\n      }\n\n      const ret = set( // $FlowFixMe[incompatible-call]\n      {\n        set: setRecoilState,\n        get: getRecoilValue,\n        reset: resetRecoilState\n      }, newValue); // set should be a void method, but if the user makes it `async`, then it\n      // will return a Promise, which we don't currently support.\n\n      if (ret !== undefined) {\n        throw Recoil_isPromise(ret) ? Recoil_err('Recoil: Async selector sets are not currently supported.') : Recoil_err('Recoil: selector set should be a void function.');\n      }\n\n      syncSelectorSetFinished = true;\n      return writes;\n    };\n\n    return recoilValue = registerNode$1({\n      key,\n      nodeType: 'selector',\n      peek: selectorPeek,\n      get: selectorGet,\n      set: selectorSet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      clearCache: clearSelectorCache,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy\n    });\n  } else {\n    return recoilValue = registerNode$1({\n      key,\n      nodeType: 'selector',\n      peek: selectorPeek,\n      get: selectorGet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      clearCache: clearSelectorCache,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy\n    });\n  }\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selector = selector;\n\n// @fb-only: import type {ScopeRules} from 'Recoil_ScopedAtom';\n// @fb-only: const {scopedAtom} = require('Recoil_ScopedAtom');\nconst {\n  loadableWithError: loadableWithError$2,\n  loadableWithPromise: loadableWithPromise$2,\n  loadableWithValue: loadableWithValue$3\n} = Recoil_Loadable$1;\n\nconst {\n  peekNodeInfo: peekNodeInfo$3\n} = Recoil_FunctionalCore;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$7,\n  DefaultValue: DefaultValue$2,\n  getConfigDeletionHandler: getConfigDeletionHandler$2,\n  registerNode: registerNode$2,\n  setConfigDeletionHandler: setConfigDeletionHandler$1\n} = Recoil_Node;\n\nconst {\n  isRecoilValue: isRecoilValue$4\n} = Recoil_RecoilValue$1;\n\nconst {\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$4,\n  markRecoilValueModified: markRecoilValueModified$2,\n  setRecoilValue: setRecoilValue$4,\n  setRecoilValueLoadable: setRecoilValueLoadable$2\n} = Recoil_RecoilValueInterface;\n\nconst {\n  retainedByOptionWithDefault: retainedByOptionWithDefault$2\n} = Recoil_Retention;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction baseAtom(options) {\n  const {\n    key,\n    persistence_UNSTABLE: persistence\n  } = options;\n  const retainedBy = retainedByOptionWithDefault$2(options.retainedBy_UNSTABLE);\n  let liveStoresCount = 0;\n  let defaultLoadable = Recoil_isPromise(options.default) ? loadableWithPromise$2(options.default.then(value => {\n    defaultLoadable = loadableWithValue$3(value);\n    return value;\n  }).catch(error => {\n    defaultLoadable = loadableWithError$2(error);\n    throw error;\n  })) : loadableWithValue$3(options.default);\n  maybeFreezeValueOrPromise(options.default);\n  let cachedAnswerForUnvalidatedValue = undefined; // Cleanup handlers for this atom\n  // Rely on stable reference equality of the store to use it as a key per <RecoilRoot>\n\n  const cleanupEffectsByStore = new Map();\n\n  function maybeFreezeValueOrPromise(valueOrPromise) {\n    if (false) {}\n\n    return valueOrPromise;\n  }\n\n  function wrapPendingPromise(store, promise) {\n    const wrappedPromise = promise.then(value => {\n      var _store$getState$nextT, _state$atomValues$get;\n\n      const state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;\n\n      if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {\n        setRecoilValue$4(store, node, value);\n      }\n\n      return value;\n    }).catch(error => {\n      var _store$getState$nextT2, _state$atomValues$get2;\n\n      const state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;\n\n      if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {\n        setRecoilValueLoadable$2(store, node, loadableWithError$2(error));\n      }\n\n      throw error;\n    });\n    return wrappedPromise;\n  }\n\n  function initAtom(store, initState, trigger) {\n    var _options$effects;\n\n    liveStoresCount++;\n\n    const cleanupAtom = () => {\n      var _cleanupEffectsByStor;\n\n      liveStoresCount--;\n      (_cleanupEffectsByStor = cleanupEffectsByStore.get(store)) === null || _cleanupEffectsByStor === void 0 ? void 0 : _cleanupEffectsByStor.forEach(cleanup => cleanup());\n      cleanupEffectsByStore.delete(store);\n    };\n\n    store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve\n\n    if (defaultLoadable.state === 'loading') {\n      const notifyDefaultSubscribers = () => {\n        var _store$getState$nextT3;\n\n        const state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;\n\n        if (!state.atomValues.has(key)) {\n          markRecoilValueModified$2(store, node);\n        }\n      };\n\n      defaultLoadable.contents.finally(notifyDefaultSubscribers);\n    } ///////////////////\n    // Run Atom Effects\n    ///////////////////\n\n\n    const effects = (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE;\n\n    if (effects != null) {\n      // This state is scoped by Store, since this is in the initAtom() closure\n      let duringInit = true;\n      let initValue = DEFAULT_VALUE$7;\n      let isInitError = false;\n      let pendingSetSelf = null;\n\n      function getLoadable(recoilValue) {\n        // Normally we can just get the current value of another atom.\n        // But for our own value we need to check if there is a pending\n        // initialized value or get the fallback default value.\n        if (duringInit && recoilValue.key === key) {\n          // Cast T to S\n          const retValue = initValue; // flowlint-line unclear-type:off\n\n          return retValue instanceof DefaultValue$2 ? peekAtom(store, initState) // flowlint-line unclear-type:off\n          : Recoil_isPromise(retValue) ? loadableWithPromise$2(retValue.then(v => v instanceof DefaultValue$2 ? // Cast T to S\n          defaultLoadable.toPromise() // flowlint-line unclear-type:off\n          : v)) : loadableWithValue$3(retValue);\n        }\n\n        return getRecoilValueAsLoadable$4(store, recoilValue);\n      }\n\n      function getPromise(recoilValue) {\n        return getLoadable(recoilValue).toPromise();\n      }\n\n      function getInfo_UNSTABLE(recoilValue) {\n        var _store$getState$nextT4;\n\n        const info = peekNodeInfo$3(store, (_store$getState$nextT4 = store.getState().nextTree) !== null && _store$getState$nextT4 !== void 0 ? _store$getState$nextT4 : store.getState().currentTree, recoilValue.key);\n        return duringInit && recoilValue.key === key && !(initValue instanceof DefaultValue$2) ? { ...info,\n          isSet: true,\n          loadable: getLoadable(recoilValue)\n        } : info;\n      }\n\n      const setSelf = effect => valueOrUpdater => {\n        if (duringInit) {\n          const currentLoadable = getLoadable(node);\n          const currentValue = currentLoadable.state === 'hasValue' ? currentLoadable.contents : DEFAULT_VALUE$7;\n          initValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict T from being a function without losing support for opaque types\n          valueOrUpdater(currentValue) // flowlint-line unclear-type:off\n          : valueOrUpdater;\n\n          if (Recoil_isPromise(initValue)) {\n            initValue = initValue.then(value => {\n              // Avoid calling onSet() when setSelf() initializes with a Promise\n              pendingSetSelf = {\n                effect,\n                value\n              };\n              return value;\n            });\n          }\n        } else {\n          if (Recoil_isPromise(valueOrUpdater)) {\n            throw Recoil_err('Setting atoms to async values is not implemented.');\n          }\n\n          if (typeof valueOrUpdater !== 'function') {\n            pendingSetSelf = {\n              effect,\n              value: valueOrUpdater\n            };\n          }\n\n          setRecoilValue$4(store, node, typeof valueOrUpdater === 'function' ? currentValue => {\n            const newValue = // cast to any because we can't restrict T from being a function without losing support for opaque types\n            valueOrUpdater(currentValue); // flowlint-line unclear-type:off\n\n            pendingSetSelf = {\n              effect,\n              value: newValue\n            };\n            return newValue;\n          } : valueOrUpdater);\n        }\n      };\n\n      const resetSelf = effect => () => setSelf(effect)(DEFAULT_VALUE$7);\n\n      const onSet = effect => handler => {\n        var _cleanupEffectsByStor2;\n\n        const {\n          release\n        } = store.subscribeToTransactions(currentStore => {\n          var _currentTree$atomValu;\n\n          // eslint-disable-next-line prefer-const\n          let {\n            currentTree,\n            previousTree\n          } = currentStore.getState();\n\n          if (!previousTree) {\n            Recoil_recoverableViolation('Transaction subscribers notified without a next tree being present -- this is a bug in Recoil');\n            previousTree = currentTree; // attempt to trundle on\n          }\n\n          const newLoadable = (_currentTree$atomValu = currentTree.atomValues.get(key)) !== null && _currentTree$atomValu !== void 0 ? _currentTree$atomValu : defaultLoadable;\n\n          if (newLoadable.state === 'hasValue') {\n            var _previousTree$atomVal, _pendingSetSelf, _pendingSetSelf2, _pendingSetSelf3;\n\n            const newValue = newLoadable.contents;\n            const oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;\n            const oldValue = oldLoadable.state === 'hasValue' ? oldLoadable.contents : DEFAULT_VALUE$7; // TODO This isn't actually valid, use as a placeholder for now.\n            // Ignore atom value changes that were set via setSelf() in the same effect.\n            // We will still properly call the handler if there was a subsequent\n            // set from something other than an atom effect which was batched\n            // with the `setSelf()` call.  However, we may incorrectly ignore\n            // the handler if the subsequent batched call happens to set the\n            // atom to the exact same value as the `setSelf()`.   But, in that\n            // case, it was kind of a noop, so the semantics are debatable..\n\n            if (((_pendingSetSelf = pendingSetSelf) === null || _pendingSetSelf === void 0 ? void 0 : _pendingSetSelf.effect) !== effect || ((_pendingSetSelf2 = pendingSetSelf) === null || _pendingSetSelf2 === void 0 ? void 0 : _pendingSetSelf2.value) !== newValue) {\n              handler(newValue, oldValue, !currentTree.atomValues.has(key));\n            } else if (((_pendingSetSelf3 = pendingSetSelf) === null || _pendingSetSelf3 === void 0 ? void 0 : _pendingSetSelf3.effect) === effect) {\n              pendingSetSelf = null;\n            }\n          }\n        }, key);\n        cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor2 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor2 !== void 0 ? _cleanupEffectsByStor2 : []), release]);\n      };\n\n      for (const effect of effects) {\n        try {\n          const cleanup = effect({\n            node,\n            storeID: store.storeID,\n            trigger,\n            setSelf: setSelf(effect),\n            resetSelf: resetSelf(effect),\n            onSet: onSet(effect),\n            getPromise,\n            getLoadable,\n            getInfo_UNSTABLE\n          });\n\n          if (cleanup != null) {\n            var _cleanupEffectsByStor3;\n\n            cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor3 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor3 !== void 0 ? _cleanupEffectsByStor3 : []), cleanup]);\n          }\n        } catch (error) {\n          initValue = error;\n          isInitError = true;\n        }\n      }\n\n      duringInit = false; // Mutate initial state in place since we know there are no other subscribers\n      // since we are the ones initializing on first use.\n\n      if (!(initValue instanceof DefaultValue$2)) {\n        var _store$getState$nextT5;\n\n        const frozenInitValue = maybeFreezeValueOrPromise(initValue);\n        const initLoadable = isInitError ? loadableWithError$2(initValue) : Recoil_isPromise(frozenInitValue) ? loadableWithPromise$2(wrapPendingPromise(store, frozenInitValue)) : loadableWithValue$3(frozenInitValue);\n        initState.atomValues.set(key, initLoadable); // If there is a pending transaction, then also mutate the next state tree.\n        // This could happen if the atom was first initialized in an action that\n        // also updated some other atom's state.\n\n        (_store$getState$nextT5 = store.getState().nextTree) === null || _store$getState$nextT5 === void 0 ? void 0 : _store$getState$nextT5.atomValues.set(key, initLoadable);\n      }\n    }\n\n    return cleanupAtom;\n  }\n\n  function peekAtom(_store, state) {\n    var _ref, _state$atomValues$get3;\n\n    return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : cachedAnswerForUnvalidatedValue) !== null && _ref !== void 0 ? _ref : defaultLoadable;\n  }\n\n  function getAtom(_store, state) {\n    if (state.atomValues.has(key)) {\n      // Atom value is stored in state:\n      return Recoil_nullthrows(state.atomValues.get(key));\n    } else if (state.nonvalidatedAtoms.has(key)) {\n      // Atom value is stored but needs validation before use.\n      // We might have already validated it and have a cached validated value:\n      if (cachedAnswerForUnvalidatedValue != null) {\n        return cachedAnswerForUnvalidatedValue;\n      }\n\n      if (persistence == null) {\n        Recoil_expectationViolation(`Tried to restore a persisted value for atom ${key} but it has no persistence settings.`);\n        return defaultLoadable;\n      }\n\n      const nonvalidatedValue = state.nonvalidatedAtoms.get(key);\n      const validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$7);\n      const validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$3(validatorResult);\n      cachedAnswerForUnvalidatedValue = validatedValueLoadable;\n      return cachedAnswerForUnvalidatedValue;\n    } else {\n      return defaultLoadable;\n    }\n  }\n\n  function invalidateAtom() {\n    cachedAnswerForUnvalidatedValue = undefined;\n  }\n\n  function setAtom(_store, state, newValue) {\n    // Bail out if we're being set to the existing value, or if we're being\n    // reset but have no stored value (validated or unvalidated) to reset from:\n    if (state.atomValues.has(key)) {\n      const existing = Recoil_nullthrows(state.atomValues.get(key));\n\n      if (existing.state === 'hasValue' && newValue === existing.contents) {\n        return new Map();\n      }\n    } else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {\n      return new Map();\n    }\n\n    maybeFreezeValueOrPromise(newValue);\n    cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use\n\n    return new Map().set(key, loadableWithValue$3(newValue));\n  }\n\n  function shouldDeleteConfigOnReleaseAtom() {\n    return getConfigDeletionHandler$2(key) !== undefined && liveStoresCount <= 0;\n  }\n\n  const node = registerNode$2({\n    key,\n    nodeType: 'atom',\n    peek: peekAtom,\n    get: getAtom,\n    set: setAtom,\n    init: initAtom,\n    invalidate: invalidateAtom,\n    shouldDeleteConfigOnRelease: shouldDeleteConfigOnReleaseAtom,\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n    persistence_UNSTABLE: options.persistence_UNSTABLE ? {\n      type: options.persistence_UNSTABLE.type,\n      backButton: options.persistence_UNSTABLE.backButton\n    } : undefined,\n    shouldRestoreFromSnapshots: true,\n    retainedBy\n  });\n  return node;\n} // prettier-ignore\n\n\nfunction atom(options) {\n  if (false) {}\n\n  const {\n    default: optionsDefault,\n    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    ...restOptions\n  } = options;\n\n  if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms\n  // for now, since scoped atoms don't support async defaults\n  // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n  ) {\n    return atomWithFallback({ ...restOptions,\n      default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n\n    }); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS && !isPromise(optionsDefault)) {\n    // @fb-only: return scopedAtom<T>({\n    // @fb-only: ...restOptions,\n    // @fb-only: default: optionsDefault,\n    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    // @fb-only: });\n  } else {\n    return baseAtom({ ...restOptions,\n      default: optionsDefault\n    });\n  }\n}\n\nfunction atomWithFallback(options) {\n  const base = atom({ ...options,\n    default: DEFAULT_VALUE$7,\n    persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : { ...options.persistence_UNSTABLE,\n      validator: storedValue => storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$7)\n    },\n    // TODO Hack for now.\n    effects: options.effects,\n    // flowlint-line unclear-type: off\n    effects_UNSTABLE: options.effects_UNSTABLE // flowlint-line unclear-type: off\n\n  });\n  const sel = Recoil_selector({\n    key: `${options.key}__withFallback`,\n    get: ({\n      get\n    }) => {\n      const baseValue = get(base);\n      return baseValue instanceof DefaultValue$2 ? options.default : baseValue;\n    },\n    set: ({\n      set\n    }, newValue) => set(base, newValue),\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  });\n  setConfigDeletionHandler$1(sel.key, getConfigDeletionHandler$2(options.key));\n  return sel;\n}\n\nvar Recoil_atom = atom;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nclass MapCache {\n  constructor(options) {\n    var _options$mapKey;\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options === null || options === void 0 ? void 0 : options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;\n  }\n\n  size() {\n    return this._map.size;\n  }\n\n  has(key) {\n    return this._map.has(this._keyMapper(key));\n  }\n\n  get(key) {\n    return this._map.get(this._keyMapper(key));\n  }\n\n  set(key, val) {\n    this._map.set(this._keyMapper(key), val);\n  }\n\n  delete(key) {\n    this._map.delete(this._keyMapper(key));\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n}\n\nvar Recoil_MapCache = {\n  MapCache\n};\n\nvar Recoil_MapCache_1 = Recoil_MapCache.MapCache;\n\nvar Recoil_MapCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MapCache: Recoil_MapCache_1\n});\n\nconst {\n  LRUCache: LRUCache$2\n} = Recoil_LRUCache$1;\n\nconst {\n  MapCache: MapCache$1\n} = Recoil_MapCache$1;\n\n\n\n\n\n\n\nconst defaultPolicy$1 = {\n  equality: 'reference',\n  eviction: 'none',\n  maxSize: Infinity\n};\n\nfunction cacheFromPolicy({\n  equality = defaultPolicy$1.equality,\n  eviction = defaultPolicy$1.eviction,\n  maxSize = defaultPolicy$1.maxSize\n} = defaultPolicy$1) {\n  const valueMapper = getValueMapper$1(equality);\n  const cache = getCache(eviction, maxSize, valueMapper);\n  return cache;\n}\n\nfunction getValueMapper$1(equality) {\n  switch (equality) {\n    case 'reference':\n      return val => val;\n\n    case 'value':\n      return val => Recoil_stableStringify(val);\n  }\n\n  throw Recoil_err(`Unrecognized equality policy ${equality}`);\n}\n\nfunction getCache(eviction, maxSize, mapKey) {\n  switch (eviction) {\n    case 'keep-all':\n      // $FlowFixMe[method-unbinding]\n      return new MapCache$1({\n        mapKey\n      });\n\n    case 'lru':\n      // $FlowFixMe[method-unbinding]\n      return new LRUCache$2({\n        mapKey,\n        maxSize: Recoil_nullthrows(maxSize)\n      });\n\n    case 'most-recent':\n      // $FlowFixMe[method-unbinding]\n      return new LRUCache$2({\n        mapKey,\n        maxSize: 1\n      });\n  }\n\n  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);\n}\n\nvar Recoil_cacheFromPolicy = cacheFromPolicy;\n\nconst {\n  setConfigDeletionHandler: setConfigDeletionHandler$2\n} = Recoil_Node;\n\n\n\n\n\n// Process scopeRules to handle any entries which are functions taking parameters\n// prettier-ignore\n// @fb-only: function mapScopeRules<P>(\n// @fb-only: scopeRules?: ParameterizedScopeRules<P>,\n// @fb-only: param: P,\n// @fb-only: ): ScopeRules | void {\n// @fb-only: return scopeRules?.map(rule =>\n// @fb-only: Array.isArray(rule)\n// @fb-only: ? rule.map(entry => (typeof entry === 'function' ? entry(param) : entry))\n// @fb-only: : rule,\n// @fb-only: );\n// @fb-only: }\n\n/*\nA function which returns an atom based on the input parameter.\n\nEach unique parameter returns a unique atom. E.g.,\n\n  const f = atomFamily(...);\n  f({a: 1}) => an atom\n  f({a: 2}) => a different atom\n\nThis allows components to persist local, private state using atoms.  Each\ninstance of the component may have a different key, which it uses as the\nparameter for a family of atoms; in this way, each component will have\nits own atom not shared by other instances.  These state keys may be composed\ninto children's state keys as well.\n*/\nfunction atomFamily(options) {\n  var _options$cachePolicyF, _options$cachePolicyF2;\n\n  const atomCache = Recoil_cacheFromPolicy({\n    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',\n    eviction: 'keep-all'\n  }); // Simple atomFamily implementation to cache individual atoms based\n  // on the parameter value equality.\n\n  return params => {\n    var _stableStringify, _options$effects;\n\n    const cachedAtom = atomCache.get(params);\n\n    if (cachedAtom != null) {\n      return cachedAtom;\n    }\n\n    const {\n      cachePolicyForParams_UNSTABLE,\n      ...atomOptions\n    } = options;\n    const newAtom = Recoil_atom({ ...atomOptions,\n      key: `${options.key}__${(_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}`,\n      default: typeof options.default === 'function' ? // The default was parameterized\n      // Flow doesn't know that T isn't a function, so we need to case to any\n      options.default(params) // flowlint-line unclear-type:off\n      : // Default may be a static value, promise, or RecoilValue\n      options.default,\n      retainedBy_UNSTABLE: typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE,\n      effects: typeof options.effects === 'function' ? options.effects(params) : typeof options.effects_UNSTABLE === 'function' ? options.effects_UNSTABLE(params) : (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE // prettier-ignore\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS: mapScopeRules(\n      // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: params,\n      // @fb-only: ),\n\n    });\n    atomCache.set(params, newAtom);\n    setConfigDeletionHandler$2(newAtom.key, () => {\n      atomCache.delete(params);\n    });\n    return newAtom;\n  };\n}\n\nvar Recoil_atomFamily = atomFamily;\n\nconst {\n  setConfigDeletionHandler: setConfigDeletionHandler$3\n} = Recoil_Node;\n\n\n\n // Keep in mind the parameter needs to be serializable as a cahche key\n// using Recoil_stableStringify\n\n\n// Add a unique index to each selector in case the cache implementation allows\n// duplicate keys based on equivalent stringified parameters\nlet nextIndex = 0;\n/* eslint-disable no-redeclare */\n\n// Return a function that returns members of a family of selectors of the same type\n// E.g.,\n//\n// const s = selectorFamily(...);\n// s({a: 1}) => a selector\n// s({a: 2}) => a different selector\n//\n// By default, the selectors are distinguished by distinct values of the\n// parameter based on value equality, not reference equality.  This allows using\n// object literals or other equivalent objects at callsites to not create\n// duplicate cache entries.  This behavior may be overridden with the\n// cacheImplementationForParams option.\nfunction selectorFamily(options) {\n  var _options$cachePolicyF, _options$cachePolicyF2;\n\n  const selectorCache = Recoil_cacheFromPolicy({\n    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',\n    eviction: 'keep-all'\n  });\n  return params => {\n    var _stableStringify;\n\n    const cachedSelector = selectorCache.get(params);\n\n    if (cachedSelector != null) {\n      return cachedSelector;\n    }\n\n    const myKey = `${options.key}__selectorFamily/${(_stableStringify = Recoil_stableStringify(params, {\n      // It is possible to use functions in parameters if the user uses\n      // a cache with reference equality thanks to the incrementing index.\n      allowFunctions: true\n    })) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}/${nextIndex++}`; // Append index in case values serialize to the same key string\n\n    const myGet = callbacks => options.get(params)(callbacks);\n\n    const myCachePolicy = options.cachePolicy_UNSTABLE;\n    const retainedBy = typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE;\n    let newSelector;\n\n    if (options.set != null) {\n      const set = options.set;\n\n      const mySet = (callbacks, newValue) => set(params)(callbacks, newValue);\n\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        set: mySet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    } else {\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    }\n\n    selectorCache.set(params, newSelector);\n    setConfigDeletionHandler$3(newSelector.key, () => {\n      selectorCache.delete(params);\n    });\n    return newSelector;\n  };\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selectorFamily = selectorFamily;\n\n// flowlint-next-line unclear-type:off\n\n\nconst constantSelector = Recoil_selectorFamily({\n  key: '__constant',\n  get: constant => () => constant,\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always produces the\n// same constant value.  It may be called multiple times with the\n// same value, based on reference equality, and will provide the\n// same selector.\n\nfunction constSelector(constant) {\n  return constantSelector(constant);\n}\n\nvar Recoil_constSelector = constSelector;\n\n// flowlint-next-line unclear-type:off\n\n\nconst throwingSelector = Recoil_selectorFamily({\n  key: '__error',\n  get: message => () => {\n    throw Recoil_err(message);\n  },\n  // TODO Why?\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always throws an error\n// with the provided message.\n\nfunction errorSelector(message) {\n  return throwingSelector(message);\n}\n\nvar Recoil_errorSelector = errorSelector;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Wraps another recoil value and prevents writing to it.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction readOnlySelector(atom) {\n  // flowlint-next-line unclear-type: off\n  return atom;\n}\n\nvar Recoil_readOnlySelector = readOnlySelector;\n\nconst {\n  loadableWithError: loadableWithError$3,\n  loadableWithPromise: loadableWithPromise$3,\n  loadableWithValue: loadableWithValue$4\n} = Recoil_Loadable$1;\n\n\n\n /////////////////\n//  TRUTH TABLE\n/////////////////\n// Dependencies        waitForNone         waitForAny        waitForAll       waitForAllSettled\n//  [loading, loading]  [Promise, Promise]  Promise           Promise         Promise\n//  [value, loading]    [value, Promise]    [value, Promise]  Promise         Promise\n//  [value, value]      [value, value]      [value, value]    [value, value]  [value, value]\n//\n//  [error, loading]    [Error, Promise]    [Error, Promise]  Error           Promise\n//  [error, error]      [Error, Error]      [Error, Error]    Error           [error, error]\n//  [value, error]      [value, Error]      [value, Error]    Error           [value, error]\n// Issue parallel requests for all dependencies and return the current\n// status if they have results, have some error, or are still pending.\n\n\nfunction concurrentRequests(getRecoilValue, deps) {\n  const results = Array(deps.length).fill(undefined);\n  const exceptions = Array(deps.length).fill(undefined);\n\n  for (const [i, dep] of deps.entries()) {\n    try {\n      results[i] = getRecoilValue(dep);\n    } catch (e) {\n      // exceptions can either be Promises of pending results or real errors\n      exceptions[i] = e;\n    }\n  }\n\n  return [results, exceptions];\n}\n\nfunction isError(exp) {\n  return exp != null && !Recoil_isPromise(exp);\n}\n\nfunction unwrapDependencies(dependencies) {\n  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(key => dependencies[key]);\n}\n\nfunction wrapResults(dependencies, results) {\n  return Array.isArray(dependencies) ? results : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  Object.getOwnPropertyNames(dependencies).reduce((out, key, idx) => ({ ...out,\n    [key]: results[idx]\n  }), {});\n}\n\nfunction wrapLoadables(dependencies, results, exceptions) {\n  const output = exceptions.map((exception, idx) => exception == null ? loadableWithValue$4(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception));\n  return wrapResults(dependencies, output);\n}\n\nfunction combineAsyncResultsWithSyncResults(syncResults, asyncResults) {\n  return asyncResults.map((result, idx) =>\n  /**\n   * it's important we use === undefined as opposed to == null, because the\n   * resolved value of the async promise could be `null`, in which case we\n   * don't want to use syncResults[idx], which would be undefined. If async\n   * promise resolves to `undefined`, that's ok because `syncResults[idx]`\n   * will also be `undefined`. That's a little hacky, but it works.\n   */\n  result === undefined ? syncResults[idx] : result);\n} // Selector that requests all dependencies in parallel and immediately returns\n// current results without waiting.\n\n\nconst waitForNone = Recoil_selectorFamily({\n  key: '__waitForNone',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // Always return the current status of the results; never block.\n\n    return wrapLoadables(dependencies, results, exceptions);\n  },\n  dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for at least\n// one to be available before returning results.  It will only error if all\n// dependencies have errors.\n\nconst waitForAny = Recoil_selectorFamily({\n  key: '__waitForAny',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If any results are available, value or error, return the current status\n\n    if (exceptions.some(exp => !Recoil_isPromise(exp))) {\n      return wrapLoadables(dependencies, results, exceptions);\n    } // Otherwise, return a promise that will resolve when the next result is\n    // available, whichever one happens to be next.  But, if all pending\n    // dependencies end up with errors, then reject the promise.\n\n\n    return new Promise(resolve => {\n      for (const [i, exp] of exceptions.entries()) {\n        if (Recoil_isPromise(exp)) {\n          exp.then(result => {\n            results[i] = result;\n            exceptions[i] = undefined;\n            resolve(wrapLoadables(dependencies, results, exceptions));\n          }).catch(error => {\n            exceptions[i] = error;\n            resolve(wrapLoadables(dependencies, results, exceptions));\n          });\n        }\n      }\n    });\n  },\n  dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for all to be\n// available before returning a value.  It will error if any dependencies error.\n\nconst waitForAll = Recoil_selectorFamily({\n  key: '__waitForAll',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results\n\n    if (exceptions.every(exp => exp == null)) {\n      return wrapResults(dependencies, results);\n    } // If we have any errors, throw the first error\n\n\n    const error = exceptions.find(isError);\n\n    if (error != null) {\n      throw error;\n    } // Otherwise, return a promise that will resolve when all results are available\n\n\n    return Promise.all(exceptions).then(exceptionResults => wrapResults(dependencies, combineAsyncResultsWithSyncResults(results, exceptionResults)));\n  },\n  dangerouslyAllowMutability: true\n});\nconst waitForAllSettled = Recoil_selectorFamily({\n  key: '__waitForAllSettled',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results\n\n    if (exceptions.every(exp => !Recoil_isPromise(exp))) {\n      return wrapLoadables(dependencies, results, exceptions);\n    } // Wait for all results to settle\n\n\n    return Promise.all(exceptions.map((exp, i) => Recoil_isPromise(exp) ? exp.then(result => {\n      results[i] = result;\n      exceptions[i] = undefined;\n    }).catch(error => {\n      results[i] = undefined;\n      exceptions[i] = error;\n    }) : null)) // Then wrap them as loadables\n    .then(() => wrapLoadables(dependencies, results, exceptions));\n  },\n  dangerouslyAllowMutability: true\n});\nconst noWait = Recoil_selectorFamily({\n  key: '__noWait',\n  get: dependency => ({\n    get\n  }) => {\n    try {\n      return loadableWithValue$4(get(dependency));\n    } catch (exception) {\n      return Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n    }\n  },\n  dangerouslyAllowMutability: true\n});\nvar Recoil_WaitFor = {\n  waitForNone,\n  waitForAny,\n  waitForAll,\n  waitForAllSettled,\n  noWait\n};\n\nconst {\n  RecoilLoadable\n} = Recoil_Loadable$1;\n\nconst {\n  DefaultValue: DefaultValue$3\n} = Recoil_Node;\n\nconst {\n  RecoilRoot: RecoilRoot$2,\n  useRecoilStoreID: useRecoilStoreID$1\n} = Recoil_RecoilRoot;\n\nconst {\n  isRecoilValue: isRecoilValue$5\n} = Recoil_RecoilValue$1;\n\nconst {\n  retentionZone: retentionZone$1\n} = Recoil_RetentionZone;\n\nconst {\n  freshSnapshot: freshSnapshot$2\n} = Recoil_Snapshot$1;\n\nconst {\n  useRecoilState: useRecoilState$1,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useSetRecoilState: useSetRecoilState$1\n} = Recoil_Hooks;\n\nconst {\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver: useRecoilTransactionObserver$1\n} = Recoil_SnapshotHooks;\n\n\n\n\n\nconst {\n  useRecoilCallback: useRecoilCallback$1\n} = Recoil_useRecoilCallback;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  noWait: noWait$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  waitForAny: waitForAny$1,\n  waitForNone: waitForNone$1\n} = Recoil_WaitFor;\n\nvar Recoil_index = {\n  // Types\n  DefaultValue: DefaultValue$3,\n  isRecoilValue: isRecoilValue$5,\n  RecoilLoadable,\n  // Recoil Root\n  RecoilRoot: RecoilRoot$2,\n  useRecoilStoreID: useRecoilStoreID$1,\n  useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,\n  // Atoms/Selectors\n  atom: Recoil_atom,\n  selector: Recoil_selector,\n  // Convenience Atoms/Selectors\n  atomFamily: Recoil_atomFamily,\n  selectorFamily: Recoil_selectorFamily,\n  constSelector: Recoil_constSelector,\n  errorSelector: Recoil_errorSelector,\n  readOnlySelector: Recoil_readOnlySelector,\n  // Concurrency Helpers for Atoms/Selectors\n  noWait: noWait$1,\n  waitForNone: waitForNone$1,\n  waitForAny: waitForAny$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  // Hooks for Atoms/Selectors\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilState: useRecoilState$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useSetRecoilState: useSetRecoilState$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useGetRecoilValueInfo_UNSTABLE: Recoil_useGetRecoilValueInfo,\n  useRecoilRefresher_UNSTABLE: Recoil_useRecoilRefresher,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,\n  // Hooks for complex operations\n  useRecoilCallback: useRecoilCallback$1,\n  useRecoilTransaction_UNSTABLE: Recoil_useRecoilTransaction,\n  // Snapshots\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n  snapshot_UNSTABLE: freshSnapshot$2,\n  // Memory Management\n  useRetain: Recoil_useRetain,\n  retentionZone: retentionZone$1\n};\nvar Recoil_index_1 = Recoil_index.DefaultValue;\nvar Recoil_index_2 = Recoil_index.isRecoilValue;\nvar Recoil_index_3 = Recoil_index.RecoilLoadable;\nvar Recoil_index_4 = Recoil_index.RecoilRoot;\nvar Recoil_index_5 = Recoil_index.useRecoilStoreID;\nvar Recoil_index_6 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;\nvar Recoil_index_7 = Recoil_index.atom;\nvar Recoil_index_8 = Recoil_index.selector;\nvar Recoil_index_9 = Recoil_index.atomFamily;\nvar Recoil_index_10 = Recoil_index.selectorFamily;\nvar Recoil_index_11 = Recoil_index.constSelector;\nvar Recoil_index_12 = Recoil_index.errorSelector;\nvar Recoil_index_13 = Recoil_index.readOnlySelector;\nvar Recoil_index_14 = Recoil_index.noWait;\nvar Recoil_index_15 = Recoil_index.waitForNone;\nvar Recoil_index_16 = Recoil_index.waitForAny;\nvar Recoil_index_17 = Recoil_index.waitForAll;\nvar Recoil_index_18 = Recoil_index.waitForAllSettled;\nvar Recoil_index_19 = Recoil_index.useRecoilValue;\nvar Recoil_index_20 = Recoil_index.useRecoilValueLoadable;\nvar Recoil_index_21 = Recoil_index.useRecoilState;\nvar Recoil_index_22 = Recoil_index.useRecoilStateLoadable;\nvar Recoil_index_23 = Recoil_index.useSetRecoilState;\nvar Recoil_index_24 = Recoil_index.useResetRecoilState;\nvar Recoil_index_25 = Recoil_index.useGetRecoilValueInfo_UNSTABLE;\nvar Recoil_index_26 = Recoil_index.useRecoilRefresher_UNSTABLE;\nvar Recoil_index_27 = Recoil_index.useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_28 = Recoil_index.useRecoilValue_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_29 = Recoil_index.useRecoilState_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_30 = Recoil_index.useRecoilCallback;\nvar Recoil_index_31 = Recoil_index.useRecoilTransaction_UNSTABLE;\nvar Recoil_index_32 = Recoil_index.useGotoRecoilSnapshot;\nvar Recoil_index_33 = Recoil_index.useRecoilSnapshot;\nvar Recoil_index_34 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;\nvar Recoil_index_35 = Recoil_index.snapshot_UNSTABLE;\nvar Recoil_index_36 = Recoil_index.useRetain;\nvar Recoil_index_37 = Recoil_index.retentionZone;\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Recoil_index)));\n\n\n\n/***/ }),\n\n/***/ 87462:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/***/ }),\n\n/***/ 75068:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ _inheritsLoose; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\n\n/***/ }),\n\n/***/ 32793:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _objectWithoutPropertiesLoose; }\n/* harmony export */ });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/***/ }),\n\n/***/ 54695:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/***/ }),\n\n/***/ 60916:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _objectWithoutPropertiesLoose; }\n/* harmony export */ });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/***/ }),\n\n/***/ 71860:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [774,179], function() { return __webpack_exec__(25436), __webpack_exec__(84225), __webpack_exec__(6840), __webpack_exec__(80880); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","createCache","StyleSheet","options","_this","_insertTag","tag","before","tags","length","insertionPoint","nextSibling","prepend","container","firstChild","insertBefore","isSpeedy","undefined","speedy","ctr","nonce","key","_proto","prototype","hydrate","nodes","forEach","insert","rule","document","createElement","setAttribute","appendChild","createTextNode","sheet","sheetForTag","i","styleSheets","ownerNode","insertRule","cssRules","e","flush","parentNode","removeChild","abs","Math","Utility_from","String","fromCharCode","Utility_assign","Object","assign","Utility_replace","value","pattern","replacement","replace","indexof","search","indexOf","Utility_charat","index","charCodeAt","Utility_substr","begin","end","slice","Utility_strlen","Utility_append","array","line","column","Tokenizer_length","position","character","characters","node","root","parent","type","props","children","return","Tokenizer_copy","next","peek","token","alloc","delimit","delimiter","trim","Enum_MS","Enum_MOZ","Enum_WEBKIT","COMMENT","Enum_RULESET","Enum_DECLARATION","Enum_KEYFRAMES","Serializer_serialize","callback","output","stringify","element","join","ruleset","offset","rules","points","post","size","j","k","x","y","z","declaration","identifierWithPointTracking","previous","toRules","parsed","getRules","fixedElements","WeakMap","compat","isImplicitRule","get","set","parentRules","removeLabel","defaultStylisPlugins","emotion_cache_browser_esm_prefix","exec","map","collection","_insert","currentSheet","ssrStyles","querySelectorAll","Array","call","dataEmotionAttribute","getAttribute","head","stylisPlugins","inserted","nodesToHydrate","attrib","split","serializer","omnipresentPlugins","concat","stylis","styles","parse","rulesets","pseudo","declarations","atrule","property","variable","scanning","ampersand","reference","whitespace","escaping","count","caret","commenter","prev","identifier","selector","serialized","shouldCache","cache","name","registered","memoize","fn","create","arg","ThemeContext","ThemeProvider","isBrowser","useTheme","withEmotionCache","react","emotion_cache_browser_esm","extends_extends","bind","target","arguments","source","hasOwnProperty","apply","weakMemoize","func","has","ret","EmotionCacheContext","createContext","HTMLElement","Z","Provider","forwardRef","ref","useContext","createCacheWithTheme","outerTheme","theme","keyframes","Global","_emotion_element_c39617d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_0__","_emotion_utils__WEBPACK_IMPORTED_MODULE_6__","_emotion_use_insertion_effect_with_fallbacks__WEBPACK_IMPORTED_MODULE_1__","_emotion_serialize__WEBPACK_IMPORTED_MODULE_2__","w","O","T","_ref","serializedNames","serializedStyles","dangerouslySetInnerHTML","__html","sheetRef","useRef","constructor","rehydrating","querySelector","current","sheetRefCurrent","My","nextElementSibling","css","_len","args","_key","insertable","anim","toString","serializeStyles","cursor","unitlessKeys","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","emotion_memoize_esm","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","toLowerCase","processStyleValue","match","p1","p2","handleInterpolation","mergedProps","interpolation","__emotion_styles","createStringFromObject","obj","string","isArray","_i","interpolated","previousCursor","result","cached","labelPattern","stringMode","strings","raw","lastIndex","identifierName","murmur2","str","h","len","useInsertionEffectAlwaysWithSyncFallback","useInsertionEffectWithLayoutFallback","react__WEBPACK_IMPORTED_MODULE_0___namespace_cache","syncFallback","useInsertionEffect","t","useLayoutEffect","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","insertStyles","registerStyles","isStringTag","A100","A200","A400","A700","styles_createTheme","esm_extends","objectWithoutPropertiesLoose","formatMuiErrorMessage","deepmerge","createTheme","defaultSxConfig","styleFunctionSx","colorManipulator","colors_common","black","white","colors_grey","colors_purple","red","colors_orange","colors_blue","colors_lightBlue","colors_green","_excluded","light","text","primary","secondary","disabled","divider","background","paper","default","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","intent","direction","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","$n","main","_j","createTypography_excluded","caseAllCaps","textTransform","defaultFontFamily","createShadow","px","shadows","createTransitions_excluded","easing","easeInOut","easeOut","easeIn","sharp","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","round","getAutoHeightDuration","height","constant","styles_zIndex","mobileStepper","fab","speedDial","appBar","drawer","modal","snackbar","tooltip","createTheme_excluded","breakpoints","mixins","mixinsInput","palette","paletteInput","transitions","transitionsInput","typography","typographyInput","other","vars","createPalette","mode","contrastThreshold","getDefaultPrimary","getDefaultSecondary","error","getDefaultError","info","getDefaultInfo","success","getDefaultSuccess","warning","getDefaultWarning","getContrastText","contrastText","mi","augmentColor","color","mainShade","lightShade","darkShade","JSON","paletteOutput","common","grey","modes","systemTheme","muiTheme","toolbar","minHeight","up","styles_shadows","createTypography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem","pxToRem2","coef","buildVariant","letterSpacing","casing","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","inherit","clone","createTransitions","inputTransitions","mergedEasing","mergedDuration","durationOption","easingOption","delay","animatedProp","reduce","acc","argument","unstable_sxConfig","unstable_sx","sx","removeUnusedBreakpoints","resolveBreakpointValues","values","createEmptyBreakpointObject","mergeBreakpointsInOrder","handleBreakpoints","_mui_utils__WEBPACK_IMPORTED_MODULE_0__","xs","sm","md","lg","xl","defaultBreakpoints","keys","propValue","styleFromPropValue","themeBreakpoints","item","breakpoint","mediaKey","breakpointsInput","_breakpointsInput$key","breakpointsInOrder","breakpointStyleKey","breakpointKeys","style","breakpointOutput","isBreakpointUnused","emptyBreakpoints","mergedOutput","breakpointValues","base","customBase","computeBreakpointsBase","breakpointsKeys","lighten","alpha","darken","getContrastRatio","clamp","min","max","decomposeColor","colorSpace","charAt","hexToRgb","re","colors","n","parseInt","marker","substring","shift","parseFloat","recomposeColor","getLuminance","rgb","hslToRgb","s","l","a","f","Number","val","toFixed","foreground","lumA","lumB","coefficient","createTheme_createTheme","sortBreakpointsValues","breakpointsAsArray","sort","breakpoint1","breakpoint2","createTheme_shape","borderRadius","esm_spacing","spacing","spacingInput","shape","shapeInput","createBreakpoints","unit","step","sortedValues","down","between","start","endIndex","only","not","keyIndex","createSpacing","mui","transform","hB","argsInput","components","createUnarySpacing","createUnaryUnit","getValue","margin","padding","merge","properties","m","p","directions","r","b","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","prop","dir","marginKeys","paddingKeys","spacingKeys","themeKey","defaultValue","propName","_getPath","themeSpacing","DW","transformer","transformed","spacing_style","resolveCssProperty","cssProperties","cssProperty","k9","propTypes","filterProps","getPath","getStyleValue","_breakpoints__WEBPACK_IMPORTED_MODULE_1__","path","checkVars","themeMapping","propValueFinal","userValue","styleFunctionSx_defaultSxConfig","esm_compose","handlers","borderTransform","border","ZP","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","eI","NA","gap","columnGap","rowGap","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","paletteTransform","bgcolor","backgroundColor","sizingTransform","width","maxWidth","_props$theme","_props$theme$breakpoi","_props$theme$breakpoi2","VO","minWidth","maxHeight","boxSizing","o3","pt","pr","pb","pl","py","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd","e6","mt","mr","mb","ml","mx","my","marginTop","marginRight","marginBottom","marginLeft","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd","displayPrint","display","overflow","textOverflow","visibility","whiteSpace","flexBasis","flexDirection","flexWrap","justifyContent","alignItems","alignContent","alignSelf","justifyItems","justifySelf","top","right","bottom","left","boxShadow","fontStyle","textAlign","_mui_utils__WEBPACK_IMPORTED_MODULE_1__","_merge__WEBPACK_IMPORTED_MODULE_4__","_style__WEBPACK_IMPORTED_MODULE_0__","_breakpoints__WEBPACK_IMPORTED_MODULE_2__","_defaultSxConfig__WEBPACK_IMPORTED_MODULE_3__","unstable_createStyleFunctionSx","getThemeValue","config","Jq","_theme$unstable_sxCon","traverse","sxInput","sxObject","W8","styleKey","maybeFn","breakpointsValues","objectsHaveSameKeys","objects","allKeys","object","union","Set","every","L7","_mui_styled_engine__WEBPACK_IMPORTED_MODULE_1__","defaultTheme","contextTheme","capitalize","_formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__","toUpperCase","isPlainObject","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","deepClone","code","url","encodeURIComponent","originalFunctionToString","FunctionToString","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","__init","__initStatic","id","setupOnce","Function","context","HK","InboundFilters","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","DEFAULT_IGNORE_ERRORS","_options","addGlobalEventProcessor","getCurrentHub","eventProcess","hub","getIntegration","ignoreErrors","client","getClient","clientOptions","getOptions","_shouldDropEvent","_mergeOptions","internalOptions","allowUrls","denyUrls","ignoreInternal","_isSentryError","event","exception","__SENTRY_DEBUG__","kg","warn","jH","_getPossibleEventMessages","message","oO","some","zC","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","frames","stacktrace","_getLastValidUrl","frame","filename","withScope","captureException","configureScope","_hub_js__WEBPACK_IMPORTED_MODULE_0__","captureContext","Gd","getMainCarrier","_sentry_utils__WEBPACK_IMPORTED_MODULE_3__","_sentry_utils__WEBPACK_IMPORTED_MODULE_5__","_sentry_utils__WEBPACK_IMPORTED_MODULE_6__","_scope_js__WEBPACK_IMPORTED_MODULE_0__","_session_js__WEBPACK_IMPORTED_MODULE_4__","Hub","_stack","scope","_version","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","getScope","getStack","popScope","pop","hint","eventId","_lastEventId","event_id","DM","syntheticException","_withClient","originalException","captureMessage","level","captureEvent","lastEventId","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","timestamp","yW","mergedBreadcrumb","finalBreadcrumb","Cf","setUser","user","setTags","setExtras","extras","setTag","setExtra","extra","setContext","run","oldHub","makeMain","integration","_oO","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","layer","session","getSession","RJ","setSession","startSession","release","environment","global","R","userAgent","navigator","Hv","getUser","currentSession","status","CT","method","sentry","carrier","__SENTRY__","extensions","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","KV","getHubFromActiveDomain","activeDomain","domain","registryHubTopStack","_Oo","Y","Scope","_sentry_utils__WEBPACK_IMPORTED_MODULE_4__","_session_js__WEBPACK_IMPORTED_MODULE_0__","__init2","__init3","__init4","__init5","__init6","__init7","__init8","__init9","__init10","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","_attachments","_sdkProcessingMetadata","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","fingerprint","setLevel","setTransactionName","setSpan","span","getSpan","getTransaction","transaction","update","updatedScope","PO","contexts","clear","maxCrumbs","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","cW","resolve","reject","processor","log","J8","then","final","updateSession","makeSession","closeSession","startingTime","ph","sid","init","started","errors","ignoreDuration","toJSON","Jr","Date","toISOString","did","attrs","ip_address","ipAddress","user_agent","email","username","module","addExtensionMethods","startIdleTransaction","logger","is","instrument","utils","errorCallback","activeTransaction","x1","setStatus","idletransaction","esm_transaction","toTraceparent","sample","samplingContext","rate","sampleRate","zu","sampled","setMetadata","transactionSampling","tracesSampler","parentSampled","tracesSampleRate","i2","random","op","_startTransaction","transactionContext","initSpanRecorder","_experiments","maxSpans","idleTimeout","finalTimeout","onScope","io","cu","_autoloadDatabaseIntegrations","packageToIntegrationMapping","mongodb","l$","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","filter","moduleName","$y","pkg","integrations","o","hmd","IdleTransaction","DEFAULT_FINAL_TIMEOUT","DEFAULT_IDLE_TIMEOUT","_span_js__WEBPACK_IMPORTED_MODULE_0__","_transaction_js__WEBPACK_IMPORTED_MODULE_2__","IdleTransactionSpanRecorder","gB","_pushActivity","_popActivity","transactionSpanId","maxlen","add","spanId","finish","endTimestamp","_I","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","_idleHub","_idleTimeout","_finalTimeout","_onScope","clearActiveTransaction","_startIdleTimeout","setTimeout","spanRecorder","spans","keepSpan","startTimestamp","registerBeforeFinishCallback","pushActivity","popActivity","_pingHeartbeat","_cancelIdleTimeout","_idleTimeoutID","clearTimeout","_beat","heartbeatString","_prevHeartbeatString","Span","SpanRecorder","_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_3__","_sentry_hub__WEBPACK_IMPORTED_MODULE_5__","_maxlen","traceId","data","spanContext","parentSpanId","description","startChild","childSpan","setData","setHttpStatus","httpStatus","spanStatus","spanStatusfromHttpCode","isSuccess","sampledString","toContext","updateWithContext","parent_span_id","span_id","trace_id","getBaggage","existingBaggage","metadata","baggage","finalBaggage","Dq","_getBaggageWithSentryValues","Qf","start_timestamp","Hn","_hub","S1","Transaction","_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_4__","_sentry_hub__WEBPACK_IMPORTED_MODULE_1__","Dr","_measurements","_trimEnd","trimEnd","setName","setMeasurement","newMetadata","recordDroppedEvent","finishedSpans","measurements","msToSec","getActiveTransaction","hasTracingEnabled","_sentry_hub__WEBPACK_IMPORTED_MODULE_0__","maybeOptions","maybeHub","time","isSentryBaggageEmpty","createBaggage","mergeAndSerializeBaggage","parseBaggageString","isBaggageEmpty","setBaggageValue","BAGGAGE_HEADER_NAME","_logger_js__WEBPACK_IMPORTED_MODULE_0__","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","initItems","baggageString","thirdPartyBaggage","inputBaggageString","baggageObj","curr","test","baggageKey","decodeURIComponent","incomingBaggage","headerBaggageString","headerBaggage","thirdPartyHeaderBaggage","baggageEntry","newVal","htmlTreeAsString","getLocationHref","_global_js__WEBPACK_IMPORTED_MODULE_1__","_is_js__WEBPACK_IMPORTED_MODULE_0__","elem","keyAttrs","nextStr","currentElem","out","_htmlElementAsString","el","classes","attr","tagName","keyAttrPairs","keyAttr","keyAttrPair","HD","allowedAttrs","reverse","location","href","_nullishCoalesce","lhs","rhsFn","_optionalChain","ops","lastAccessLHS","getGlobalObject","getGlobalSingleton","_node_js__WEBPACK_IMPORTED_MODULE_0__","fallbackGlobalObject","g","window","creator","lastHref","debounceTimerID","lastCapturedEvent","addInstrumentationHandler","_global_js__WEBPACK_IMPORTED_MODULE_0__","_is_js__WEBPACK_IMPORTED_MODULE_5__","_logger_js__WEBPACK_IMPORTED_MODULE_1__","_object_js__WEBPACK_IMPORTED_MODULE_3__","_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__","_supports_js__WEBPACK_IMPORTED_MODULE_4__","instrumented","RU","console","hl","originalConsoleMethod","triggerHandlers","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","proto","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","handler","originalRemoveEventListener","instrumentXHR","xhrproto","XMLHttpRequest","originalOpen","xhr","xhrInfo","__sentry_xhr__","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","now","onreadystatechange","original","readyStateArgs","originalSend","body","t$","originalFetch","handlerData","fetchData","getFetchMethod","fetchArgs","V9","Request","getFetchUrl","response","instrumentHistory","Bf","oldOnPopState","onpopstate","to","from","history","historyReplacementFunction","originalHistoryFunction","_oldOnErrorHandler","onerror","msg","_oldOnUnhandledRejectionHandler","onunhandledrejection","$P","globalListener","shouldSkipDOMEvent","isContentEditable","shouldShortcircuitPreviousDebounce","isSyntheticEvent","isString","isThenable","isRegExp","isDOMError","isInstanceOf","isErrorEvent","isError","isEvent","isDOMException","isNaN","isElement","isPrimitive","objectToString","wat","Error","isBuiltin","ty","Event","Element","Boolean","_e","consoleSandbox","CONSOLE_LEVELS","originalConsole","wrappedLevels","originalWrappedFunc","__sentry_original__","makeLogger","enabled","uuid4","addExceptionTypeValue","addExceptionMechanism","parseSemver","checkOrSetAlreadyCaught","parseUrl","addContextToFrame","getEventDescription","stripUrlQueryAndFragment","_object_js__WEBPACK_IMPORTED_MODULE_2__","_string_js__WEBPACK_IMPORTED_MODULE_1__","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","v","num","c","query","fragment","host","protocol","relative","getFirstException","firstException","newMechanism","currentMechanism","mechanism","handled","mergedData","SEMVER_REGEXP","input","major","minor","patch","buildmetadata","prerelease","lines","linesOfContext","lineno","maxLines","sourceLine","pre_context","JM","context_line","colno","post_context","urlPath","__sentry_captured__","xp","err","dynamicRequire","isNodeEnv","loadModule","process","__SENTRY_BROWSER_BUNDLE__","mod","request","require","cwd","markFunctionWrapped","getOriginalFunction","dropUndefinedKeys","convertToPlainObject","urlEncode","fill","addNonEnumerableProperty","extractExceptionKeysForMessage","_browser_js__WEBPACK_IMPORTED_MODULE_1__","_string_js__WEBPACK_IMPORTED_MODULE_2__","replacementFactory","wrapped","defineProperty","writable","configurable","VZ","stack","getOwnProperties","cO","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","kK","extractedProps","maxLength","$G","includedKeys","inputValue","_dropUndefinedKeys","memoizationMap","memoVal","returnValue","Map","severityLevelFromString","validSeverityLevels","includes","createStackParser","parsers","sortedParsers","skipFirst","parser","stripSentryFramesAndReverse","localStack","firstFrameFunction","function","lastFrameFunction","stackParserFromStackParserOptions","stackParser","getFunctionName","defaultFunctionName","truncate","snipLine","safeJoin","isMatchingPattern","substr","newLine","lineLength","Kj","supportsFetch","supportsHistory","isNativeFetch","supportsNativeFetch","Headers","Response","fetch","doc","sandbox","hidden","contentWindow","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","rejectedSyncPromise","resolvedSyncPromise","SyncPromise","States","reason","_","_state","PENDING","_handlers","executor","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","catch","finally","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","browserPerformanceTimeOrigin","timestampWithMs","timestampInSeconds","dateTimestampInSeconds","_node_js__WEBPACK_IMPORTED_MODULE_1__","dateTimestampSource","nowSeconds","platformPerformance","getNodePerformance","perfHooks","performance","getBrowserPerformance","timeOrigin","timestampSource","performanceNow","dateNow","timeOriginDelta","navigationStart","timing","navigationStartDelta","hasNavigationStart","__unused_webpack_exports","_global","SENTRY_RELEASE","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","Symbol","for","q","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","ref1","env","__NEXT_P","hooks_useCustomTheme","useCustomThemeController","CommonThemeColors","green","yellow","blue","neonRed","neonBlue","neonYellow","neonGreen","neonOrange","neonViolet","LightThemeColors","DarkThemeColors","emotionLightTheme","emotionDarkTheme","muiLightTheme","muiDarkTheme","recoil","themeState","cn","currentTheme","setCurrentTheme","FV","toggleTheme","useCallback","sJ","emotionTheme","useMemo","_app","jsx_runtime","head_default","emotion_element_c39617d8_browser_esm","emotion_react_browser_esm","helpers_esm_extends","_extends","hasSymbol","nested","ThemeProvider_ThemeProvider","localTheme","mergeOuterLocalTheme","mergedTheme","jsx","useTheme_ThemeContext","useThemeWithoutDefault","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","esm_ThemeProvider_ThemeProvider","upperPrivateTheme","engineTheme","privateTheme","styles_ThemeProvider_ThemeProvider","themeInput","scopedTheme","useCustomTheme","providers_ThemeProvider","jsxs","xB","es","param","Component","pageProps","queryClient","useState","QueryClient","rel","content","Wh","QueryClientProvider","Hydrate","dehydratedState","__unused_webpack___webpack_exports__","cachedFetchImpl","_lcpEntry","_clsEntry","prevTransactionName","defaultBrowserTracingIntegration","hasWeakSet","inner","names","SDK_VERSION","inboundfilters","functiontostring","esm_scope","esm_hub","esm_logger","installedIntegrations","filterDuplicates","accIntegration","esm_global","supports","esm_session","SentryError","setPrototypeOf","DSN_REGEX","dsn_dsnToString","dsn","withPassword","pass","port","projectId","publicKey","dsnFromComponents","misc","syncpromise","createEnvelope","headers","items","forEachEnvelopeItem","envelope","envelopeItems","envelopeItemType","envelopeItem","encodeUTF8","textEncoder","utf8","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","itemHeaders","payload","Uint8Array","concatBuffers","buffers","totalLength","buf","merged","buffer","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","normalize","depth","maxProperties","visit","memo","WeakSet","delete","splice","unmemoize","valueWithToJSON","stringified","stringifyValue","_events","Cy","startsWith","normalized","numAdded","visitable","Sh","visitKey","visitValue","ERROR","getEnvelopeEndpointWithUrlEncodedAuth","tunnel","sentry_key","sentry_version","getSdkMetadataForEnvelopeHeader","sdk","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_dsn","validateDsn","requiredComponents","dsnFromString","lastPath","projectMatch","_transport","transport","transportOptions","YO","_process","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_isEnabled","sendSession","getDsn","getTransport","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","WD","close","integrationIndex","getIntegrationById","integrationId","sendEvent","createEventEnvelope","sdkInfo","eventType","samplingMethod","packages","baseClientNormalized","skippedNormalization","normalizeDepth","sent_at","segment","public_key","sample_rates","_metadata","attachments","addItemToEnvelope","newItem","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","_2","_3","_sendEnvelope","category","sendClientReports","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeMaxBreadth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","maxBreadth","dist","maxValueLength","integrationsArray","_processEvent","finalEvent","beforeSend","$2","isTransaction","__sentry__","_ensureBeforeSendRv","rv","nullErr","processedEvent","promise","send","_clearOutcomes","outcomes","quantity","exceptionFromError","parseStackFrames","eventFromError","popSize","getPopSize","framesToPop","reactMinifiedRegexp","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","VW","errorEvent","TX","fm","domException","eventFromString","Db","eventFromPlainObject","zf","__serialized__","normalizeToSize","maxSize","encodeURI","EG","synthetic","browser","severity","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","dom","_consoleBreadcrumb","serializeAttribute","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","VT","nK","parsedLoc","en","parsedFrom","parsedTo","getNativeFetchImplementation","Du","fetchImpl","globalObject","BrowserClient","visibilityState","_flushOutcomes","breadcrumbIntegration","platform","discarded_events","isRealNavigator","sendBeacon","Ak","credentials","keepalive","createFrame","in_app","chromeRegex","chromeEvalRegex","subMatch","extractSafariExtensionDetails","geckoREgex","geckoEvalRegex","gecko","winjsRegex","winjs","defaultStackParser","pE","isSafariExtension","isSafariWebExtension","esm_exports","ignoreOnError","wrap","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","$e","Tb","$Q","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","xmlHttpRequestProps","wrapOptions","originalFunction","eventName","handleEvent","originalEventHandler","wrappedEventHandler","GlobalHandlers","_installFunc","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","shouldIgnoreOnError","groups","_enhanceEventWithInitialFrame","addMechanismAndCapture","ev","ev0","ev0s","ev0sf","LinkedErrors","_limit","limit","_handler","linkedErrors","_walkErrorTree","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","previousException","currentException","_previousEvent","_isSameFingerprint","_isSameStacktrace","_getExceptionFromEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","httpcontext_global","HttpContext","referrer","Referer","createTransport","makeRequest","makePromiseBuffer","remove","task","$","taskProducer","drain","counter","capturedSetTimeout","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","isRateLimited","limits","disabledUntil","all","filteredEnvelope","recordEnvelopeLoss","requestTask","statusCode","updateRateLimits","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","headerDelay","parseRetryAfterHeader","header","headerDate","makeFetchTransport","nativeFetch","requestOptions","referrerPolicy","fetchOptions","makeXHRTransport","getResponseHeader","open","setRequestHeader","defaultIntegrations","QD","startSessionOnHub","hubextensions","TRACEPARENT_REGEXP","esm_baggage","backgroundtab_global","bindReporter","metric","reportAllChanges","prevValue","forceReport","delta","generateUniqueID","floor","initMetric","entries","observe","PerformanceObserver","supportedEntryTypes","po","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","removeEventListener","getCLS","onReport","report","sessionValue","sessionEntries","entryHandler","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","startTime","takeRecords","firstHiddenTime","initHiddenTime","Infinity","trackChanges","timeStamp","getVisibilityWatcher","getFID","visibilityWatcher","processingStart","disconnect","reportedMetricIDs","getLCP","stopListening","capture","isMeasurementValue","isFinite","_startChild","ctx","metrics_global","getBrowserPerformanceAPI","_performanceCursor","_addPerformanceNavigationTiming","eventEnd","XL","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","router_global","DEFAULT_BROWSER_TRACING_OPTIONS","nT","mg","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","BrowserTracing","_emitOptionsWarning","_metricOptions","startTrackingWebVitals","Z1","mark","_reportAllChanges","_getCurrentHub","instrumentRouting","shouldCreateSpanForRequest","_createRouteTransaction","statusType","instrumentOutgoingRequests","urlMap","defaultShouldCreateSpan","origins","origin","shouldCreateSpan","fetchCallback","__span","addTracingHeaders","bU","find","xhrCallback","__sentry_xhr_span_id__","getRequestHeader","beforeNavigate","parentContextFromHeader","extractTraceDataFromMetaTags","sentrytraceValue","getMetaContent","baggageValue","sentrytraceData","extractTraceparentData","traceparent","matches","LD","expandedContext","modifiedContext","finalContext","idleTransaction","lb","addPerformanceEntries","responseStartTimestamp","requestStartTimestamp","performanceEntries","entryType","requestStart","responseEnd","responseStart","measureStartTimestamp","firstHidden","shouldRecord","resourceName","_addResourceSpans","initiatorType","transferSize","encodedBodySize","decodedBodySize","_trackNavigator","connection","effectiveType","rtt","downlink","deviceMemory","hardwareConcurrency","oldValue","normalizedValue","measurementTimestamp","cls","measurementName","sources","metaName","__SENTRY_TRACING__","ro","router","router_default","client_global","DEFAULT_TAGS","nextRouterInstrumentation","startTransactionCb","ready","route","rt","routerPrototype","changeStateWrapper","originalChangeStateWrapper","as","newTransactionName","addIntegrationToArray","userIntegrations","includesName","setNestedKey","keyPath","SENTRY_DSN","addIntegration","userIntegrationsFunc","integrationsNames","alwaysLastToRun","autoSessionTracking","Sq","userIntegration","debug","enable","initialScope","startSessionTracking","filterTransactions","defaultSetTimout","defaultClearTimeout","runTimeout","cleanUpNextTick","drainQueue","runClearTimeout","Item","fun","noop","nextTick","title","argv","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","__nccwpck_require__","ab","__dirname","_queryClient__WEBPACK_IMPORTED_MODULE_0__","S","_types__WEBPACK_IMPORTED_MODULE_1__","setLogger","getLogger","_utils__WEBPACK_IMPORTED_MODULE_0__","ZT","newLogger","notifyManager","NotifyManager","queue","transactions","notifyFn","batchNotifyFn","batch","schedule","A4","batchCalls","_this2","_this3","setNotifyFunction","setBatchNotifyFunction","inheritsLoose","Subscribable","subscribe","onSubscribe","onUnsubscribe","hasListeners","focusManager","_Subscribable","FocusManager","setDefaultEventListener","setEventListener","setup","focused","setFocused","onFocus","isFocused","_window","sk","onlineManager","OnlineManager","online","setOnline","onOnline","isOnline","onLine","defaultRetryDelay","failureCount","pow","isCancelable","cancel","CancelledError","revert","silent","isCancelledError","Retryer","cancelFn","continueFn","promiseResolve","promiseReject","cancelRetry","abort","cancelOptions","continue","isPaused","isResolved","isTransportCancelable","Promise","outerResolve","outerReject","onSuccess","onError","promiseOrValue","_unused","_config$retry","_config$retryDelay","retry","retryDelay","shouldRetry","onFail","Gh","continueResolve","onPause","onContinue","Query","abortSignalConsumed","defaultOptions","setOptions","observers","queryKey","queryHash","initialState","getDefaultState","meta","scheduleGc","_this$options$cacheTi","cacheTime","setDefaultOptions","clearGcTimeout","PN","gcTimeout","optionalRemove","isFetching","updater","_this$options$isDataE","_this$options","prevData","SE","isDataEqual","structuralSharing","Q$","dispatch","dataUpdatedAt","updatedAt","setState","setStateOptions","_this$retryer","retryer","destroy","reset","isActive","observer","isStale","isInvalidated","getCurrentResult","isStaleByTime","staleTime","Kp","_this$retryer2","shouldFetchOnWindowFocus","refetch","_this$retryer3","shouldFetchOnReconnect","addObserver","notify","removeObserver","getObserversCount","invalidate","_this$options$behavio2","_context$fetchOptions2","_this$options$behavio","_context$fetchOptions","_abortController$abor","cancelRefetch","queryFn","mc","abortController","G9","queryFnContext","pageParam","enumerable","signal","fetchFn","behavior","onFetch","revertState","fetchMeta","reducer","V","onQueryUpdate","initialData","initialDataUpdatedAt","hasInitialData","hasData","dataUpdateCount","errorUpdateCount","errorUpdatedAt","fetchFailureCount","_action$meta","_action$dataUpdatedAt","QueryCache","queries","queriesMap","build","_options$queryHash","Rm","defaultQueryOptions","getQueryDefaults","queryInMap","getAll","arg1","arg2","filters","_parseFilterArgs","I6","exact","_x","findAll","_parseFilterArgs2","_this4","_this5","Mutation","mutationId","mutationCache","variables","execute","restored","onMutate","executeMutation","onSettled","_this$options$retry","mutationFn","onMutationUpdate","MutationCache","mutations","mutation","defaultMutationOptions","mutationKey","getMutationDefaults","X7","resumePausedMutations","pausedMutations","getNextPageParam","pages","queryCache","queryDefaults","mutationDefaults","mount","unsubscribeFocus","unsubscribeOnline","unmount","_this$unsubscribeFocu","_this$unsubscribeOnli","fetching","isMutating","getQueryData","_this$queryCache$find","getQueriesData","queryKeyOrFilters","getQueryCache","setQueryData","parsedOptions","_v","defaultedOptions","setQueriesData","_ref2","getQueryState","_this$queryCache$find2","removeQueries","resetQueries","arg3","_parseFilterArgs3","refetchFilters","refetchQueries","cancelQueries","_parseFilterArgs4","_parseFilterArgs4$","invalidateQueries","_ref3","_filters$refetchActiv","_filters$refetchInact","_parseFilterArgs5","refetchActive","inactive","refetchInactive","_this6","_parseFilterArgs6","refetchPage","throwOnError","fetchQuery","prefetchQuery","fetchInfiniteQuery","_context$fetchOptions3","_context$fetchOptions4","_context$state$data","_context$state$data2","fetchMore","isFetchingNextPage","isFetchingPreviousPage","oldPages","oldPageParams","pageParams","abortSignal","newPageParams","cancelled","buildNewPages","page","fetchPage","manual","queryFnResult","promiseAsAny","_manual","_param","getPreviousPageParam","shouldFetchFirstPage","_loop","_param2","finalPromise","finalPromiseAsAny","prefetchInfiniteQuery","cancelMutations","_this7","getMutationCache","getDefaultOptions","setQueryDefaults","yF","_this$queryDefaults$f","setMutationDefaults","_this$mutationDefault","_defaulted","defaultQueryObserverOptions","scheduleMicrotask","getAbortController","sleep","parseFilterArgs","timeUntilStale","isValidTimeout","replaceEqualDeep","aSize","bItems","bSize","copy","equalItems","hashQueryKeyByOptions","functionalUpdate","matchMutation","parseQueryArgs","matchQuery","ensureQueryKeyArray","isServer","partialMatchKey","hashQueryKey","isQueryKey","predicate","stale","queryStatusFilter","hashFn","queryKeyHashFn","partialDeepEqual","hasObjectPrototype","ctor","prot","AbortController","_react__WEBPACK_IMPORTED_MODULE_1__","_core__WEBPACK_IMPORTED_MODULE_0__","unstable_batchedUpdates","react_dom","logger_logger","E","defaultContext","QueryClientSharingContext","getQueryClientContext","contextSharing","ReactQueryClientContext","useQueryClient","_ref$contextSharing","useEffect","Context","optionsRef","dehydratedMutation","_options$defaultOptio","dehydratedQuery","_options$defaultOptio2","executionId","Recoil_index_21","Recoil_index_4","Recoil_index_7","Recoil_index_19","_createMutableSource","_useMutableSource","_useSyncExternalStore","react_dom__WEBPACK_IMPORTED_MODULE_1__","err_1","Recoil_isPromise","Recoil_nullthrows","Recoil_err","_defineProperty","BaseLoadable","toPromise","valueMaybe","valueOrThrow","promiseMaybe","promiseOrThrow","errorMaybe","errorOrThrow","contents","_map","ValueLoadable","loadableWithPromise","isLoadable","loadableWithValue","loadableWithError","ErrorLoadable","LoadingLoadable","nextLoadable","freeze","loadableAll","inputs","unwrapedInputs","normalizedInputs","outputs","idx","Recoil_Loadable","loadableLoading","RecoilLoadable","of","Recoil_Loadable$1","__proto__","AbstractRecoilValue","newKey","RecoilState","RecoilValueReadOnly","Recoil_RecoilValue","isRecoilValue","Recoil_RecoilValue$1","expectationViolation_1","format","gks","Recoil_gkx_OSS","gk","_gks$get","setPass","setFail","Recoil_mapIterable","iterable","recoverableViolation_1","projectName","DefaultValue","DEFAULT_VALUE","recoilValues","NodeMissingError","configDeletionHandlers","getConfigDeletionHandler","Recoil_Node","registerNode","recoilValue","getNode","getNodeMaybe","deleteNodeConfigIfPossible","_node$shouldDeleteCon","_getConfigDeletionHan","Recoil_gkx","shouldDeleteConfigOnRelease","setConfigDeletionHandler","recoilValuesForKeys","RecoilValueNotReady","Recoil_Queue","enqueueExecution","hamt_1","_typeof","iterator","hamt","nothing","hash","hashFragment","BUCKET_SIZE","toBitmap","fromBitmap","bitmap","bit","arrayUpdate","mutate","at","arraySpliceOut","newLen","arraySpliceIn","empty","__hamt_isEmpty","isEmptyNode","Leaf","edit","_modify","Leaf__modify","Collision","Collision__modify","IndexedNode","mask","IndexedNode__modify","ArrayNode","ArrayNode__modify","expand","frag","child","subNodes","pack","removed","elements","mergeLeaves","n1","n2","subH1","subH2","updateCollisionList","keyEq","list","_newValue","newValue","canEditNode","indx","exists","canEdit","newChildren","newChild","editable","_editable","_edit","_config","_root","_size","setTree","newRoot","newSize","tryGetHash","alt","tryGet","getHash","hasHash","defKeyCompare","make","isEmpty","modifyHash","NaN","modify","setHash","del","removeHash","deleteHash","beginMutation","endMutation","transient","appk","lazyVisitChildren","lazyVisit","rest","DONE","done","MapIterator","v0","buildPairs","buildKeys","buildValues","fold","toVisit","BuiltInMap","existing","persistentMap","toMap","HashArrayMappedTrieMap","_hamt","Recoil_PersistentMap$1","Recoil_PersistentMap","Recoil_differenceSets","setsWithValuesToRemove","FIRST","otherSet","Recoil_mapMap","mergeDependencyMapIntoGraph","deps","graph","olderGraph","nodeDeps","nodeToNodeSubscriptions","upstreams","downstream","existingUpstreams","addedUpstreams","upstream","removedUpstreams","Recoil_Graph","addToDependencyMap","dependencyMap","cloneGraph","mergeDepsIntoDependencyMap","into","upstreamDeps","downstreamNode","dep","saveDependencyMapToStore","store","_storeState$nextTree","_storeState$previousT","_storeState$previousT2","_storeState$previousT3","_storeState$nextTree2","storeState","getState","currentTree","nextTree","previousTree","Recoil_recoverableViolation","getGraph","currentGraph","nextVersion","nextGraph","nextTreeStateVersion","getNextTreeStateVersion","nextStoreID","getNextStoreID","nextComponentID","getNextComponentID","Recoil_Keys","persistentMap$1","getNextTreeStateVersion$1","makeEmptyTreeState","stateID","transactionMetadata","dirtyAtoms","atomValues","nonvalidatedAtoms","Recoil_State","makeEmptyStoreState","commitDepth","knownAtoms","knownSelectors","transactionSubscriptions","nodeTransactionSubscriptions","nodeToComponentSubscriptions","queuedComponentCallbacks_DEPRECATED","suspendedComponentResolvers","graphsByVersion","retention","referenceCounts","nodesRetainedByZone","retainablesToCheckForRelease","nodeCleanupFunctions","RetentionZone","Recoil_RetentionZone","retentionZone","Recoil_CopyOnWrite","setByAddingToSet","setByDeletingFromSet","mapBySettingInMap","mapByUpdatingInMap","mapByDeletingFromMap","mapByDeletingMultipleFromMap","ks","Recoil_filterIterable","Recoil_lazyProxy","factories","proxy","Proxy","ownKeys","getNode$1","getNodeMaybe$1","recoilValuesForKeys$1","RetentionZone$1","setByAddingToSet$1","emptySet","ReadOnlyRecoilValueError","initializeNodeIfNewToStore","treeState","trigger","retentionCleanup","initializeRetentionForNode","nodeKey","retainedBy","addToZone","zone","deleteFromZone","nodeCleanup","peekNodeLoadable","getDownstreamNodes","visitedNodes","visitingNodes","_graph$nodeToNodeSubs","subscribedNodes","Recoil_FunctionalCore","getNodeLoadable","setNodeValue","initializeNode","cleanUpNode","_state$nodeCleanupFun","setUnvalidatedAtomValue_DEPRECATED","_node$invalidate","peekNodeInfo","nodeType","loadable","isSet","isModified","_graph$nodeDeps$get","_storeState$nodeToCom","_storeState$nodeToCom2","createMutableSource","unstable_createMutableSource","useMutableSource","unstable_useMutableSource","useSyncExternalStore","unstable_useSyncExternalStore","Recoil_ReactMode","reactMode","early","concurrent","$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE","getDownstreamNodes$1","getNodeLoadable$1","setNodeValue$1","getNextComponentID$1","getNode$2","getNodeMaybe$2","DefaultValue$1","RecoilValueNotReady$1","reactMode$1","AbstractRecoilValue$1","RecoilState$1","RecoilValueReadOnly$1","isRecoilValue$1","writeLoadableToTreeState","applyActionsToStore","actions","newState","copyTreeState","applyAction","valueOrUpdater","valueFromValueOrUpdater","writes","unvalidatedValue","invalidateDownstreams","queueOrPerformStateUpdate","batchStack","actionsByStore","downstreams","_getNodeMaybe","_getNodeMaybe$invalid","setRecoilValue","Recoil_RecoilValueInterface","getRecoilValueAsLoadable","setRecoilValueLoadable","markRecoilValueModified","setUnvalidatedRecoilValue","subscribeToRecoilValue","componentDebugName","subID","releaseStoreState","subs","applyAtomValueWrites","batchStart","popped","refreshRecoilValue","_node$clearCache","clearCache","invalidateDownstreams_FOR_TESTING","Recoil_someSet","cleanUpNode$1","deleteNodeConfigIfPossible$1","getNode$3","RetentionZone$2","emptySet$1","releaseRetainablesNowOnCurrentTree","retainables","_storeState$retention3","releasableNodes","findReleasableNodes","searchFromNodes","nonReleasableNodes","findReleasableNodesInner","_storeState$retention","releasableNodesFoundThisIteration","getDownstreamNodesInTopologicalOrder","doNotDescendInto1","doNotDescendInto2","answer","visited","zonesThatCouldRetainNode","nodeChildren","parents","releaseNode","_storeState$retention2","zones","updateRetainCountToZero","retainable","scheduleOrPerformPossibleReleaseOfRetainable","Recoil_Retention","SUSPENSE_TIMEOUT_MS","updateRetainCount","_map$get","newCount","releaseScheduledRetainablesNow","retainedByOptionWithDefault","unstable_batchedUpdates$1","batchStart$1","unstable_batchedUpdates$2","batcher","setBatcher","newBatcher","batchUpdates","batchEnd","Recoil_Batching","getBatcher","Recoil_concatIterables","iters","iter","isSSR","isReactNative","product","Recoil_Environment","batchUpdates$1","initializeNode$1","peekNodeInfo$1","graph$1","getNextStoreID$1","DEFAULT_VALUE$1","recoilValues$1","recoilValuesForKeys$2","AbstractRecoilValue$2","getRecoilValueAsLoadable$1","setRecoilValue$1","setUnvalidatedRecoilValue$1","updateRetainCount$1","getNextTreeStateVersion$2","makeEmptyStoreState$1","isSSR$1","memoizeOneWithArgsHashAndInvalidation","memoizeOneWithArgsHashAndInvalidation$1","memoizeWithArgsHash","hashFunction","memoizedFn","memoizeOneWithArgsHash","lastKey","lastResult","Snapshot","checkRefCount_INTERNAL","_store","getLoadable","opt","isInitialized","mapper","mutableSnapshot","MutableSnapshot","retain","autoRelease_INTERNAL","storeID","replacer","graphs","newGraph","subscribeToTransactions","_refCount","released","_release","cleanup","isRetained","getStore_INTERNAL","getID","cloneStoreState","bumpVersion","memoizedCloneSnapshot","invalidateMemoizedSnapshot","_store$getState$previ","snapshot","recoilState","newValueOrUpdater","_batch","Recoil_Snapshot","freshSnapshot","initializeState","cloneSnapshot","Recoil_Snapshot$1","Recoil_unionSets","sets","Recoil_useRefInitOnce","initialValue","getNextTreeStateVersion$3","makeEmptyStoreState$2","cleanUpNode$2","getDownstreamNodes$2","initializeNode$2","setNodeValue$2","setUnvalidatedAtomValue_DEPRECATED$1","graph$2","cloneGraph$1","getNextStoreID$2","createMutableSource$1","reactMode$2","applyAtomValueWrites$1","releaseScheduledRetainablesNow$1","freshSnapshot$1","useRef$1","notInAContext","defaultStore","addTransactionMetadata","stateReplacerIsBeingExecuted","startNextTreeIfNeeded","AppContext","useStoreRef","MutableSourceContext","notifyComponents","dependentNodes","comps","_subID","_debugName","sendEndOfBatchNotifications","subscriptions","subscription","Batcher","setNotifyBatcherOfChange","storeRef","endBatch","nextID","RecoilRoot_INTERNAL","initializeState_DEPRECATED","store_INTERNAL","storeProp","storeStateRef","replaced","notifyBatcherOfChange","initialStoreState_DEPRECATED","initial","atom","writtenNodes","initialStoreState","mutableSource","atomKey","Recoil_RecoilRoot","RecoilRoot","override","propsExceptOverride","ancestorStoreRef","useRecoilMutableSource","Recoil_expectationViolation","useRecoilStoreID","notifyComponents_FOR_TESTING","sendEndOfBatchNotifications_FOR_TESTING","Recoil_shallowArrayEqual","useEffect$1","useRef$2","Recoil_usePrevious","useStoreRef$1","SUSPENSE_TIMEOUT_MS$1","updateRetainCount$2","RetentionZone$3","useEffect$2","useRef$3","isSSR$2","Recoil_useRetain","toRetain","useRetain_ACTUAL","timeoutID","previousRetainables","useRef$4","Recoil_useComponentName","batchUpdates$2","DEFAULT_VALUE$2","reactMode$3","useMutableSource$1","useSyncExternalStore$1","useRecoilMutableSource$1","useStoreRef$2","isRecoilValue$2","AbstractRecoilValue$3","getRecoilValueAsLoadable$2","setRecoilValue$2","setUnvalidatedRecoilValue$2","subscribeToRecoilValue$1","useCallback$1","useEffect$3","useMemo$1","useRef$5","useState$1","setByAddingToSet$2","handleLoadable","useRecoilValueLoadable_SYNC_EXTERNAL_STORE","componentName","getSnapshot","memoizePreviousSnapshot","prevState","_prevState","_prevState2","nextState","getMemoizedSnapshot","useRecoilValueLoadable_MUTABLE_SOURCE","_storeState$nextTree3","getLoadableWithTesting","_storeState","newLoadable","prevLoadableRef","useRecoilValueLoadable_TRANSITION_SUPPORT","_storeState$nextTree4","updateState","useRecoilValueLoadable_LEGACY","forceUpdate","_storeState$nextTree5","_prevLoadableRef$curr","_prevLoadableRef$curr2","useRecoilValueLoadable","TRANSITION_SUPPORT","SYNC_EXTERNAL_STORE","MUTABLE_SOURCE","LEGACY","useRecoilValue","useSetRecoilState","useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE","useRecoilValue_TRANSITION_SUPPORT_UNSTABLE","Recoil_filterMap","Recoil_filterSet","Recoil_mergeMaps","maps","nextKey","batchUpdates$3","DEFAULT_VALUE$3","getNode$4","nodes$1","useStoreRef$3","AbstractRecoilValue$4","setRecoilValueLoadable$1","SUSPENSE_TIMEOUT_MS$2","cloneSnapshot$1","useCallback$2","useEffect$4","useRef$6","useState$2","isSSR$3","useTransactionSubscription","sub","externallyVisibleAtomValuesInState","persistedAtomContentsValues","persistence","persistence_UNSTABLE","gotoSnapshot","keysToUpdate","_prev$atomValues$get","_next$atomValues$get","shouldRestoreFromSnapshots","Recoil_SnapshotHooks","useRecoilSnapshot","setSnapshot","previousSnapshot","releaseRef","_releaseRef$current","_releaseRef$current2","_releaseRef$current3","useGotoRecoilSnapshot","useRecoilTransactionObserver","useTransactionObservation_DEPRECATED","previousAtomValues","atomInfo","_node$persistence_UNS","_node$persistence_UNS2","_node$persistence_UNS3","_node$persistence_UNS4","backButton","modifiedAtoms","useTransactionSubscription_DEPRECATED","peekNodeInfo$2","useStoreRef$4","Recoil_useGetRecoilValueInfo","reactMode$4","RecoilRoot$1","useStoreRef$5","useMemo$2","Recoil_useRecoilBridgeAcrossReactRoots","loadableWithValue$1","initializeNode$3","DEFAULT_VALUE$4","getNode$5","copyTreeState$1","getRecoilValueAsLoadable$3","invalidateDownstreams$1","writeLoadableToTreeState$1","isAtom","TransactionInterfaceImpl","_changes","_treeState","newTreeState_INTERNAL","Recoil_AtomicUpdates$1","atomicUpdater","changeset","invariant_1","condition","atomicUpdater$1","batchUpdates$4","DEFAULT_VALUE$5","useStoreRef$6","refreshRecoilValue$1","setRecoilValue$3","Snapshot$1","cloneSnapshot$2","gotoSnapshot$1","useCallback$3","Sentinel","SENTINEL","recoilCallback","extraInterface","errMsg","callbackInterface","refresh","transact_UNSTABLE","Recoil_invariant","Recoil_useRecoilCallback","useRecoilCallback","useStoreRef$7","refreshRecoilValue$2","useCallback$4","Recoil_useRecoilRefresher","atomicUpdater$2","useStoreRef$8","useMemo$3","Recoil_useRecoilTransaction","atomicUpdate","transactionInterface","findLeaf","getNodeValue","_handlers$onNodeVisit","onNodeVisit","nodeValue","branches","addLeaf","branchKey","onAbort","_handlers$onNodeVisit2","pruneNodeFromTree","pruneUpstreamBranches","branchNode","countDownstreamLeaves","sum","currNode","Recoil_TreeCache$1","TreeCache","Recoil_TreeCache","_options$onHit","_options$onSet","_options$mapNodeValue","_numLeafs","_onHit","onHit","_onSet","onSet","_mapNodeValue","mapNodeValue","_this$getLeafNode","getLeafNode","leafNode","setRetryablePart","existsInTree","Recoil_LRUCache$1","LRUCache","Recoil_LRUCache","_options$mapKey","_maxSize","_head","_tail","_keyMapper","mapKey","tail","mappedKey","existingNode","_maybeDeleteLRU","deleteLru","LRUCache$1","TreeCache$1","Recoil_treeCacheLRU","lruCache","lruNode","allowFunctions","_JSON$stringify","localeCompare","Recoil_stableStringify","TreeCache$2","defaultPolicy","equality","eviction","Recoil_treeCacheFromPolicy","valueMapper","getValueMapper","treeCache","getTreeCache","isReactNative$1","isSSR$4","loadableWithError$1","loadableWithPromise$1","loadableWithValue$2","getNodeLoadable$2","peekNodeLoadable$1","setNodeValue$3","saveDependencyMapToStore$1","DEFAULT_VALUE$6","RecoilValueNotReady$2","getConfigDeletionHandler$1","getNode$6","registerNode$1","isRecoilValue$3","markRecoilValueModified$1","retainedByOptionWithDefault$1","recoilCallback$1","startPerfBlock","startPerfBlock$1","_id","Canceled","CANCELED","dependencyStack","waitingStores","getNewExecutionId","Recoil_selector","cachePolicy_UNSTABLE","cachePolicy","discoveredDependencyNodeKeys","retainedBy_UNSTABLE","executionInfoMap","liveStoresCount","selectorIsLive","selectorInit","selectorShouldDeleteConfigOnRelease","resolveAsync","depValues","setCache","setDepsInStore","notifyStoresOfResolvedAsync","isLatestExecution","clearExecutionInfo","stores","waitingStore","markStoreWaitingForResolvedAsync","getCachedNodeLoadable","isKeyPointingToSelector","wrapPendingDependencyPromise","existingDeps","loadingDepsState","resolvedDep","loadingDepKey","loadingDepPromise","cachedLoadable","getValFromCacheAndUpdatedDownstreamDeps","getExecutionInfo","executionInfo","getExecutionInfoOfInProgressExecution","latestLoadable","evaluateSelectorGetter","updateExecutionInfoDepValues","_store$getState","_store$getState$curre","_store$getState2","_store$getState2$next","_store$getState$nextT","_store$getState3","_store$getState3$next","endPerfBlock","gateCallback","finishEvaluation","resultIsError","getRecoilValue","depKey","depLoadable","getCallback","wrapPendingPromise","errorOrPromise","errorOrDepPromise","cachedVal","depsAfterCacheDone","latestExecutionId","_Array$from$find","execInfo","haveAsyncDepsChanged","_executionInfo$depVal","_mapOfCheckedVersions","oldDepValues","depValuesDiscoveredSoFarDuringAsyncWork","cachedDepValuesCheckedForThisVersion","mapOfCheckedVersions","isCachedVersionSame","nodeVal","stateVersion","oldVal","_getExecutionInfo","valLoadable","selectorPeek","_peekNodeLoadable","selectorGet","detectCircularDependencies","getSelectorValAndUpdatedDeps","inProgressExecutionInfo","_inProgressExecutionI","getValFromRunningNewExecutionAndUpdatedDeps","newExecutionId","newDepValues","invalidateSelector","clearSelectorCache","dangerouslyAllowMutability","selectorSet","syncSelectorSetFinished","setRecoilState","setValue","upstreamWrites","loadableWithError$2","loadableWithPromise$2","loadableWithValue$3","peekNodeInfo$3","DEFAULT_VALUE$7","DefaultValue$2","getConfigDeletionHandler$2","registerNode$2","setConfigDeletionHandler$1","isRecoilValue$4","getRecoilValueAsLoadable$4","markRecoilValueModified$2","setRecoilValue$4","setRecoilValueLoadable$2","retainedByOptionWithDefault$2","optionsDefault","restOptions","atomWithFallback","validator","storedValue","effects","effects_UNSTABLE","sel","baseValue","baseAtom","valueOrPromise","cachedAnswerForUnvalidatedValue","defaultLoadable","cleanupEffectsByStore","peekAtom","_state$atomValues$get3","nonvalidatedValue","validatorResult","validatedValueLoadable","initState","_options$effects","_cleanupEffectsByStor3","_store$getState$nextT5","cleanupAtom","_cleanupEffectsByStor","notifyDefaultSubscribers","_store$getState$nextT3","duringInit","initValue","isInitError","pendingSetSelf","retValue","getPromise","getInfo_UNSTABLE","_store$getState$nextT4","setSelf","effect","currentLoadable","currentValue","resetSelf","_cleanupEffectsByStor2","currentStore","_currentTree$atomValu","_previousTree$atomVal","_pendingSetSelf","_pendingSetSelf2","_pendingSetSelf3","oldLoadable","frozenInitValue","initLoadable","wrappedPromise","_state$atomValues$get","_store$getState$nextT2","_state$atomValues$get2","Recoil_MapCache$1","MapCache","Recoil_MapCache","LRUCache$2","MapCache$1","defaultPolicy$1","Recoil_cacheFromPolicy","getValueMapper$1","getCache","setConfigDeletionHandler$2","Recoil_atomFamily","_options$cachePolicyF","_options$cachePolicyF2","atomCache","cachePolicyForParams_UNSTABLE","params","_stableStringify","cachedAtom","atomOptions","newAtom","Recoil_atom","setConfigDeletionHandler$3","nextIndex","Recoil_selectorFamily","selectorCache","newSelector","cachedSelector","myKey","myGet","callbacks","myCachePolicy","mySet","constantSelector","Recoil_constSelector","throwingSelector","Recoil_errorSelector","Recoil_readOnlySelector","loadableWithError$3","loadableWithPromise$3","loadableWithValue$4","concurrentRequests","results","exp","unwrapDependencies","dependencies","wrapResults","wrapLoadables","waitForNone","waitForAny","waitForAll","exceptionResults","asyncResults","syncResults","waitForAllSettled","noWait","dependency","DefaultValue$3","RecoilRoot$2","useRecoilStoreID$1","isRecoilValue$5","retentionZone$1","freshSnapshot$2","useRecoilState","useRecoilState$1","useRecoilState_TRANSITION_SUPPORT_UNSTABLE","useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1","useRecoilStateLoadable","useRecoilStateLoadable$1","useRecoilValue$1","useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1","useRecoilValueLoadable$1","useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1","useResetRecoilState","useResetRecoilState$1","useSetRecoilState$1","recoilComponentGetRecoilValueCount_FOR_TESTING","useRecoilInterface","recoilValuesUsed","previousSubscriptions","unsubscribeFrom","currentSubscriptions","getRecoilValueLoadable","getRecoilState","getRecoilStateLoadable","getSetRecoilState","getResetRecoilState","useSetUnvalidatedAtomValues","useGotoRecoilSnapshot$1","useRecoilSnapshot$1","useRecoilTransactionObserver$1","useRecoilCallback$1","noWait$1","waitForAll$1","waitForAllSettled$1","waitForAny$1","waitForNone$1","Recoil_index","useRecoilBridgeAcrossReactRoots_UNSTABLE","atomFamily","selectorFamily","constSelector","errorSelector","readOnlySelector","useGetRecoilValueInfo_UNSTABLE","useRecoilRefresher_UNSTABLE","useRecoilTransaction_UNSTABLE","useRecoilTransactionObserver_UNSTABLE","snapshot_UNSTABLE","useRetain","__unused_webpack___webpack_module__","_setPrototypeOf","_inheritsLoose","subClass","superClass","_objectWithoutPropertiesLoose","excluded","sourceKeys","__webpack_exec__","moduleId","_N_E"],"sourceRoot":""}