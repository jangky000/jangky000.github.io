{"version":3,"file":"static/chunks/ea88be26-3a3d5e1902b6f677.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lottie-web/build/player/lottie.js","webpack://_N_E/<anon>"],"sourcesContent":["(typeof navigator !== \"undefined\") && (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lottie = factory());\n})(this, (function () { 'use strict';\n\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var locationHref = '';\n  var _useWebWorker = false;\n  var initialDefaultFrame = -999999;\n\n  var setWebWorker = function setWebWorker(flag) {\n    _useWebWorker = !!flag;\n  };\n\n  var getWebWorker = function getWebWorker() {\n    return _useWebWorker;\n  };\n\n  var setLocationHref = function setLocationHref(value) {\n    locationHref = value;\n  };\n\n  var getLocationHref = function getLocationHref() {\n    return locationHref;\n  };\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type);\n  }\n\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n\n  // import Howl from '../../3rd_party/howler';\n  var audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n\n    AudioController.prototype = {\n      addAudio: function addAudio(audio) {\n        this.audios.push(audio);\n      },\n      pause: function pause() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function resume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function setRate(rateValue) {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function createAudio(assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n\n        return {\n          isPlaying: false,\n          play: function play() {\n            this.isPlaying = true;\n          },\n          seek: function seek() {\n            this.isPlaying = false;\n          },\n          playing: function playing() {},\n          rate: function rate() {},\n          setVolume: function setVolume() {}\n        };\n      },\n      setAudioFactory: function setAudioFactory(audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function setVolume(value) {\n        this._volume = value;\n\n        this._updateVolume();\n      },\n      mute: function mute() {\n        this._isMuted = true;\n\n        this._updateVolume();\n      },\n      unmute: function unmute() {\n        this._isMuted = false;\n\n        this._updateVolume();\n      },\n      getVolume: function getVolume() {\n        return this._volume;\n      },\n      _updateVolume: function _updateVolume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n\n  var createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value;\n\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1;\n          break;\n\n        default:\n          value = 1.1;\n          break;\n      }\n\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n\n      return arr;\n    }\n\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len);\n      }\n\n      if (type === 'int16') {\n        return new Int16Array(len);\n      }\n\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len);\n      }\n\n      return createRegularArray(type, len);\n    }\n\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory;\n    }\n\n    return createRegularArray;\n  }();\n\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n\n  function _typeof$6(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$6 = function _typeof(obj) { return typeof obj; }; } else { _typeof$6 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$6(obj); }\n  var subframeEnabled = true;\n  var expressionsPlugin = null;\n  var idPrefix$1 = '';\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var _shouldRoundValues = false;\n  var bmPow = Math.pow;\n  var bmSqrt = Math.sqrt;\n  var bmFloor = Math.floor;\n  var bmMax = Math.max;\n  var bmMin = Math.min;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\n    var i;\n    var len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface$1() {\n    return {};\n  }\n\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = _typeof$6(val);\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i;\n      var len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag;\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value);\n    }\n\n    return value;\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = '0 0';\n    element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = 'visible';\n    element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = 'preserve-3d';\n    element.style.webkitTransformStyle = 'preserve-3d';\n    element.style.mozTransformStyle = 'preserve-3d';\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError';\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError';\n    this.nativeError = nativeError;\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type;\n    this.nativeError = nativeError;\n  }\n\n  var createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + '__lottie_element_' + _count;\n    };\n  }();\n\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n\n      default:\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n\n      default:\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  var setSubframeEnabled = function setSubframeEnabled(flag) {\n    subframeEnabled = !!flag;\n  };\n\n  var getSubframeEnabled = function getSubframeEnabled() {\n    return subframeEnabled;\n  };\n\n  var setExpressionsPlugin = function setExpressionsPlugin(value) {\n    expressionsPlugin = value;\n  };\n\n  var getExpressionsPlugin = function getExpressionsPlugin() {\n    return expressionsPlugin;\n  };\n\n  var setDefaultCurveSegments = function setDefaultCurveSegments(value) {\n    defaultCurveSegments = value;\n  };\n\n  var getDefaultCurveSegments = function getDefaultCurveSegments() {\n    return defaultCurveSegments;\n  };\n\n  var setIdPrefix = function setIdPrefix(value) {\n    idPrefix$1 = value;\n  };\n\n  var getIdPrefix = function getIdPrefix() {\n    return idPrefix$1;\n  };\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type);\n  }\n\n  function _typeof$5(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$5 = function _typeof(obj) { return typeof obj; }; } else { _typeof$5 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$5(obj); }\n\n  var dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function onmessage() {},\n      postMessage: function postMessage(path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function postMessage(data) {\n        workerProxy.onmessage({\n          data: data\n        });\n      }\n    };\n\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], {\n          type: 'text/javascript'\n        }); // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n\n      workerFn = fn;\n      return workerProxy;\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true;\n\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt;\n                  }\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets); // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n\n                i += 1;\n              }\n\n              return null;\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps);\n\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true;\n                  return comp.layers;\n                }\n\n                return JSON.parse(JSON.stringify(comp.layers));\n              }\n\n              return null;\n            }\n\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n\n              return null;\n            }\n\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no'\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: 'tr'\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {// data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type');\n\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response;\n                }\n\n                if (xhr.response && _typeof$5(xhr.response) === 'object') {\n                  return xhr.response;\n                }\n\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response);\n                }\n\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n\n                return null;\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest(); // set responseType after calling open or IE will break.\n\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json';\n                } catch (err) {} // eslint-disable-line no-empty\n\n\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n\n                try {\n                  xhr.open('GET', path, true);\n                } catch (error) {\n                  xhr.open('GET', fullPath + '/' + path, true);\n                }\n\n                xhr.send();\n              }\n\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.dataManager.completeData(data);\n\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation;\n\n            _workerSelf.dataManager.completeData(animation);\n\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success'\n            });\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          }\n        });\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data;\n          var id = data.id;\n          var process = processes[id];\n          processes[id] = null;\n\n          if (data.status === 'success') {\n            process.onComplete(data.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = 'processId_' + _counterId;\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError\n      };\n      return id;\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId\n      });\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation\n    };\n  }();\n\n  var ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'rgba(0,0,0,0)';\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = '';\n\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n\n          clearInterval(intervalId);\n        }\n\n        _count += 1;\n      }.bind(this), 50);\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS('image');\n\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener('load', this._imageLoaded, false);\n      }\n\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag('img');\n      img.crossOrigin = 'anonymous';\n      img.addEventListener('load', this._imageLoaded, false);\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data\n      };\n      var path = getAssetsPath(data, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob.img = footageData;\n\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob.img = {};\n\n        this._footageLoaded();\n      }.bind(this));\n      return ob;\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n\n        i += 1;\n      }\n\n      return null;\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = '';\n      this.path = '';\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n\n  function BaseEvent() {}\n\n  BaseEvent.prototype = {\n    triggerEvent: function triggerEvent(eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function addEventListener(eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n\n      this._cbs[eventName].push(callback);\n\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function removeEventListener(eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n\n            i -= 1;\n            len -= 1;\n          }\n\n          i += 1;\n        }\n\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n\n  var markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n');\n      var keys = {};\n      var line;\n      var keysCount = 0;\n\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':');\n\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n\n      if (keysCount === 0) {\n        throw new Error();\n      }\n\n      return keys;\n    }\n\n    return function (_markers) {\n      var markers = [];\n\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n\n        markers.push(markerData);\n      }\n\n      return markers;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0;\n        var len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var renderers = {};\n\n  var registerRenderer = function registerRenderer(key, value) {\n    renderers[key] = value;\n  };\n\n  function getRenderer(key) {\n    return renderers[key];\n  }\n\n  function _typeof$4(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$4(obj); }\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0);\n  };\n\n  extendPrototype([BaseEvent], AnimationItem);\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = 'svg';\n\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n\n    var RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed');\n  };\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation);\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (_typeof$4(animationData) !== 'object') {\n        animationData = JSON.parse(animationData);\n      }\n    }\n\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== 'false';\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    this.setParams(params);\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data.layers;\n    var j;\n    var jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data;\n    var expressionsPlugin = getExpressionsPlugin();\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger('data_failed');\n    }.bind(this));\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images');\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n\n    try {\n      this.animationData = animData;\n\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n\n      this.renderer.configAnimation(animData);\n\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1000;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger('config_ready');\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin = getExpressionsPlugin();\n\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n    this.trigger('drawnFrame');\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger('_pause');\n      this.audioController.resume();\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger('_play');\n      this._idle = true;\n      this.trigger('_idle');\n      this.audioController.pause();\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name);\n    }\n\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger('loopComplete');\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger('loopComplete');\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger('complete');\n    }\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0.001 + offset);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n\n    if (_typeof$4(arr[0]) === 'object') {\n      var i;\n      var len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n\n    return false;\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name !== name || !this.renderer) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.renderer = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.setVolume(val);\n  };\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.mute();\n  };\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.unmute();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index);\n    } catch (error) {// TODO: decide how to handle catch case\n    }\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name, this.drawnFrameEvent);\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n\n      return animations;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));\n      var i;\n      var lenAnims = animElements.length;\n\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerText = '';\n        var div = createTag('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true;\n    }\n\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n\n    function setVolume(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation);\n      }\n    }\n\n    function mute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n\n    function unmute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize; // moduleOb.start = start;\n\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n\n  /* eslint-disable */\n  var BezierFactory = function () {\n    /**\r\n       * BezierEasing - use bezier curve for transition easing function\r\n       * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n       *\r\n       * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n       * Usage:\r\n       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n       * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n       *\r\n       */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === 'function';\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n       * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n       */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n           */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n\n        if (initialSlope === 0.0) {\n          return guessForT;\n        }\n\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob;\n  }();\n\n  var pooling = function () {\n    function _double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n\n    return {\n      \"double\": _double\n    };\n  }();\n\n  var poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement: newElement,\n        release: release\n      };\n\n      function newElement() {\n        var element;\n\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n\n        return element;\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling[\"double\"](pool);\n          _maxLength *= 2;\n        }\n\n        if (_release) {\n          _release(element);\n        }\n\n        pool[_length] = element;\n        _length += 1;\n      }\n\n      return ob;\n    };\n  }();\n\n  var bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments())\n      };\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  var segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n\n      element.lengths.length = 0;\n    }\n\n    return poolFactory(8, create, release);\n  }();\n\n  function bezFunction() {\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.001 && det1 < 0.001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\n\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n\n        return storedData[bezierName];\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n\n          flag = false;\n        }\n      }\n\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8);\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0t0 = t0 * t0 * t0; //\n\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0t1 = t0 * t0 * t1; //\n\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1t1 = t0 * t1 * t1; //\n\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1t1 = t1 * t1 * t1;\n\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints;\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  var PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var mathAbs = Math.abs;\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length);\n      }\n\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1;\n      var flag = true;\n      var keyData;\n      var nextKeyData;\n      var keyframeMetadata;\n\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n\n          iterationIndex = 0;\n          break;\n        }\n\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n\n      keyframeMetadata = this.keyframesMetadata[i] || {};\n      var k;\n      var kLen;\n      var perc;\n      var jLen;\n      var j;\n      var fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n\n        var bezierData = keyframeMetadata.bezierData;\n\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          } // caching._lastKeyframeIndex = -1;\n\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyframeMetadata.__fnct = fnc;\n          }\n\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n\n              break;\n            }\n\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX;\n        var outY;\n        var inX;\n        var inY;\n        var keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = [];\n                  }\n\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyframeMetadata.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i];\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.keyframeMetadata = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct;\n                }\n\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n\n            if (this.propType === 'multidimensional') {\n              newValue[i] = keyValue;\n            } else {\n              newValue = keyValue;\n            }\n          }\n        }\n      }\n\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    } // based on @Toji's https://github.com/toji/gl-matrix/\n\n\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0];\n      var ay = a[1];\n      var az = a[2];\n      var aw = a[3];\n      var bx = b[0];\n      var by = b[1];\n      var bz = b[2];\n      var bw = b[3];\n      var omega;\n      var cosom;\n      var sinom;\n      var scale0;\n      var scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n      if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n      }\n\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function setVValue(val) {\n      var multipliedValue;\n\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult;\n\n        if (mathAbs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0;\n        var len = this.v.length;\n\n        while (i < len) {\n          multipliedValue = val[i] * this.mult;\n\n          if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n\n          i += 1;\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var i;\n      var len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i;\n      var len = data.k.length;\n      this.v = createTypedArray('float32', len);\n      this.pv = createTypedArray('float32', len);\n      this.vel = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult;\n        this.pv[i] = data.k[i];\n      }\n\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      var i;\n      var len = data.k.length;\n      var s;\n      var e;\n      var to;\n      var ti;\n\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s;\n          e = data.k[i + 1].s;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data.k[i].to = null;\n              data.k[i].ti = null;\n            }\n          }\n        }\n      }\n\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.data = data;\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data.k[0].s.length;\n      this.v = createTypedArray('float32', arrLen);\n      this.pv = createTypedArray('float32', arrLen);\n\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray('float32', arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p;\n\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n\n      return p;\n    }\n\n    var ob = {\n      getProp: getProp\n    };\n    return ob;\n  }();\n\n  function DynamicPropertyContainer() {}\n\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function iterateDynamicProperties() {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n\n  var pointPool = function () {\n    function create() {\n      return createTypedArray('float32', 2);\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n\n      default:\n        arr = [];\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n\n    return newPath;\n  };\n\n  var shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === undefined ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n\n      return cloned;\n    }\n\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  var shapeCollectionPool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling[\"double\"](pool);\n        _maxLength *= 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        /* if(kf[kf.length - 1].s){\r\n                  keyPropS = kf[kf.length - 1].s[0];\r\n              }else{\r\n                  keyPropS = kf[kf.length - 2].e[0];\r\n              } */\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching); /// /\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i;\n      var len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n\n      var i;\n      var len = this.effectsSequence.length;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function convertEllToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n\n          var _cw = this.d !== 3;\n\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function convertStarToPath() {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          /* this.v.v.length = numPts;\r\n                  this.v.i.length = numPts;\r\n                  this.v.o.length = numPts; */\n\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            /* this.v.v[i] = [x,y];\r\n                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                      this.v._length = numPts; */\n\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function convertPolygonToPath() {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function convertRectToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n\n    function getShapeProp(elem, data, type) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n  var Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2; // }\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      /* matrix order (canvas compatible):\r\n           * ace\r\n           * bdf\r\n           * 001\r\n           */\n\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function equals(matr) {\n      var i = 0;\n\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n\n        i += 1;\n      }\n\n      return true;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n\n      return matr;\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /* return {\r\n           x: x * me.a + y * me.c + me.e,\r\n           y: x * me.b + y * me.d + me.f\r\n           }; */\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6);\n\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n\n      return arr;\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr;\n\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n\n      return arr;\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var i = 0;\n      var props = this.props;\n      var cssValue = 'matrix3d(';\n      var v = 10000;\n\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? ')' : ',';\n        i += 1;\n      }\n\n      return cssValue;\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000;\n\n      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n\n      return val;\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var props = this.props;\n\n      var _a = roundMatrixProperty(props[0]);\n\n      var _b = roundMatrixProperty(props[1]);\n\n      var _c = roundMatrixProperty(props[4]);\n\n      var _d = roundMatrixProperty(props[5]);\n\n      var _e = roundMatrixProperty(props[12]);\n\n      var _f = roundMatrixProperty(props[13]);\n\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray('float32', 16);\n      this.reset();\n    };\n  }();\n\n  function _typeof$3(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$3 = function _typeof(obj) { return typeof obj; }; } else { _typeof$3 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$3(obj); }\n  var lottie = {};\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200);\n          break;\n\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50);\n          break;\n\n        case 'low':\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value);\n    }\n\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin);\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory;\n\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory;\n\n      case 'matrix':\n        return Matrix;\n\n      default:\n        return null;\n    }\n  }\n\n  lottie.play = animationManager.play;\n  lottie.pause = animationManager.pause;\n  lottie.setLocationHref = setLocation;\n  lottie.togglePause = animationManager.togglePause;\n  lottie.setSpeed = animationManager.setSpeed;\n  lottie.setDirection = animationManager.setDirection;\n  lottie.stop = animationManager.stop;\n  lottie.searchAnimations = searchAnimations;\n  lottie.registerAnimation = animationManager.registerAnimation;\n  lottie.loadAnimation = loadAnimation;\n  lottie.setSubframeRendering = setSubframeRendering;\n  lottie.resize = animationManager.resize; // lottie.start = start;\n\n  lottie.goToAndStop = animationManager.goToAndStop;\n  lottie.destroy = animationManager.destroy;\n  lottie.setQuality = setQuality;\n  lottie.inBrowser = inBrowser;\n  lottie.installPlugin = installPlugin;\n  lottie.freeze = animationManager.freeze;\n  lottie.unfreeze = animationManager.unfreeze;\n  lottie.setVolume = animationManager.setVolume;\n  lottie.mute = animationManager.mute;\n  lottie.unmute = animationManager.unmute;\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie.useWebWorker = setWebWorker;\n  lottie.setIDPrefix = setPrefix;\n  lottie.__getFactory = getFactory;\n  lottie.version = '5.9.4';\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1]);\n      }\n    }\n\n    return null;\n  }\n\n  var queryString = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : ''; // eslint-disable-line no-useless-escape\n\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100); // this adds bodymovin to the window object for backwards compatibility\n\n  try {\n    if (!((typeof exports === \"undefined\" ? \"undefined\" : _typeof$3(exports)) === 'object' && typeof module !== 'undefined') && !(typeof define === 'function' && define.amd) // eslint-disable-line no-undef\n    ) {\n      window.bodymovin = lottie;\n    }\n  } catch (err) {//\n  }\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh);\n      var shapeData = {\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n\n  function TrimModifier() {}\n\n  extendPrototype([ShapeModifier], TrimModifier);\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n\n    pathsData.length = 0;\n    return pathsData;\n  };\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      s = Math.round(s * 10000) * 0.0001;\n      e = Math.round(e * 10000) * 0.0001;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes(); // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos);\n    }\n\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  function PuckerAndBloatModifier() {}\n\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n\n    return clonedPath;\n  };\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  var TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n\n      this.iterateDynamicProperties();\n\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n\n    function autoOrient() {//\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = 'transform';\n      this.data = data;\n      this.v = new Matrix(); // Precalculated matrix with non animated properties\n\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n\n        if (data.or.k[0].ti) {\n          var i;\n          var len = data.or.k.length;\n\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null;\n            data.or.k[i].ti = null;\n          }\n        }\n\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); // sh Indicates it needs to be capped between -180 and 180\n\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n\n      this.a = PropertyFactory.getProp(elem, data.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this); // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n\n      this._isDirty = true;\n\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n\n    return {\n      getTransformProperty: getTransformProperty\n    };\n  }();\n\n  function RepeaterModifier() {}\n\n  extendPrototype([ShapeModifier], RepeaterModifier);\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n\n    while (pos > 0) {\n      pos -= 1; // this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: 'Transform',\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: 'tr'\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n\n      cont = 0;\n      var renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n\n        cont += 1;\n      }\n\n      this._currentCopies = copies; /// /\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n\n    return hasReloaded;\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  function RoundCornersModifier() {}\n\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /* clonedPath.v[index] = currentV;\r\n                  clonedPath.o[index] = currentO;\r\n                  clonedPath.i[index] = currentI; */\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return clonedPath;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\n    var fWeight = 'normal';\n    var fStyle = 'normal';\n    var len = styles.length;\n    var styleName;\n\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n          break;\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = []; // Hindi characters\n\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff'];\n    var zeroWidthJoiner = [65039, 8205];\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',');\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n\n      return enabledFamilies.join(',');\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span'); // Node is invisible to screen readers.\n\n      parentNode.setAttribute('aria-hidden', true);\n      parentNode.style.fontFamily = family;\n      var node = createTag('span'); // Characters that vary significantly among different fonts\n\n      node.innerText = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas';\n      var helper;\n      var fontProps = getFontProperties(fontData);\n\n      if (engine === 'svg') {\n        var tHelper = createNS('text');\n        tHelper.style.fontSize = '100px'; // tHelper.style.fontFamily = fontData.fFamily;\n\n        tHelper.setAttribute('font-family', fontData.fFamily);\n        tHelper.setAttribute('font-style', fontProps.style);\n        tHelper.setAttribute('font-weight', fontProps.weight);\n        tHelper.textContent = '1';\n\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit';\n          tHelper.setAttribute('class', fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d');\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text;\n          return helper.getComputedTextLength();\n        }\n\n        return helper.measureText(text).width;\n      }\n\n      return {\n        measureText: measure\n      };\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(function (data) {\n          data.helper = createHelper(data);\n          data.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style');\n            s.setAttribute('f-forigin', fontArr[i].fOrigin);\n            s.setAttribute('f-origin', fontArr[i].origin);\n            s.setAttribute('f-family', fontArr[i].fFamily);\n            s.type = 'text/css';\n            s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link');\n            l.setAttribute('f-forigin', fontArr[i].fOrigin);\n            l.setAttribute('f-origin', fontArr[i].origin);\n            l.type = 'text/css';\n            l.rel = 'stylesheet';\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link');\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin);\n            sc.setAttribute('f-origin', fontArr[i].origin);\n            sc.setAttribute('rel', 'stylesheet');\n            sc.setAttribute('href', fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(_char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n\n      if ((typeof _char === 'string' && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn // eslint-disable-line no-console\n      && !this._warned) {\n        this._warned = true;\n        console.warn('Missing character from exported characters list: ', _char, style, font); // eslint-disable-line no-console\n      }\n\n      return emptyChar;\n    }\n\n    function measureText(_char2, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n\n      var index = _char2.charCodeAt(0);\n\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper;\n\n        if (_char2 === ' ') {\n          var doubleSize = tHelper.measureText('|' + _char2 + '|');\n          var singleSize = tHelper.measureText('||');\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index + 1] = tHelper.measureText(_char2) / 100;\n        }\n      }\n\n      return fontData.cache[index + 1] * size;\n    }\n\n    function getFontByName(name) {\n      var i = 0;\n      var len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return this.fonts[0];\n    }\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum) !== -1;\n    }\n\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1];\n      }\n\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\n    }\n\n    function isCombinedCharacter(_char3) {\n      return combinedCharacters.indexOf(_char3) !== -1;\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function initRenderable() {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false; // layer's display state\n\n      this.hidden = false; // If layer's transparency equals 0, it can be hidden\n\n      this.isTransparent = false; // list of animated components\n\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function addRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function removeRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function prepareRenderableFrame(num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function checkTransparency() {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       *\r\n       */\n    checkLayerLimits: function checkLayerLimits(num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function renderRenderable() {\n      var i;\n      var len = this.renderableComponents.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\r\n          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n\n    },\n    sourceRectAtTime: function sourceRectAtTime() {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function getLayerSize() {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function get() {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n\n        return this._mask.op.v * 100;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n\n      var i;\n      var len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function get() {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n\n        var value = '';\n\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s;\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e;\n        } else {\n          value = property.keyframes[pos - 2].s;\n        }\n\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value); // eslint-disable-line no-new-wrappers\n\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n        valueProp.value = type === 'unidimensional' ? value[0] : value;\n        return valueProp;\n      };\n\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, 'unidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        val = property.v * mult;\n\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, 'unidimensional');\n        }\n\n        return expressionValue;\n      };\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var len = property.data && property.data.l || property.pv.length;\n      var expressionValue = createTypedArray('float32', len);\n      var arrValue = createTypedArray('float32', len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, 'multidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n\n        return expressionValue;\n      };\n    } // TODO: try to avoid using this getter\n\n\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      }\n\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property);\n      }\n\n      return MultidimensionalPropertyInterface(property);\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale;\n\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation;\n\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation;\n\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation;\n\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position;\n\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition;\n\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition;\n\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition;\n\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n\n      var _px;\n\n      var _py;\n\n      var _pz;\n\n      var _transformFactory;\n\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform.px);\n        _py = ExpressionPropertyInterface(transform.py);\n\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz);\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function get() {\n          if (transform.p) {\n            return _transformFactory();\n          }\n\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix();\n\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);\n\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n\n      return toWorldMat;\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n\n    return function (elem) {\n      var transformInterface;\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface;\n\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect;\n\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface;\n\n          default:\n            return null;\n        }\n      }\n\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function get() {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function get() {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function get() {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function get() {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return parentPropertyGroup(val - 1);\n      };\n    };\n  }();\n\n  var PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return propertyGroup(val - 1);\n      }\n\n      return _propertyGroup;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i;\n        var len = elem.effectsManager.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n\n        var effects = elem.data.ef || [];\n\n        var groupInterface = function groupInterface(name) {\n          i = 0;\n          len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n\n          return null;\n        };\n\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function get() {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n\n      return null;\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef;\n        var i = 0;\n        var len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            }\n\n            return effectElements[i]();\n          }\n\n          i += 1;\n        }\n\n        throw new Error();\n      }\n\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n\n      var effectElements = [];\n      var i;\n      var len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function get() {\n            return data.np;\n          }\n        },\n        _name: {\n          value: data.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return expressionProperty();\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup));\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0;\n        var len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return null; // return {active:false};\n      }\n\n      Object.defineProperty(_thisLayerFunction, '_name', {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n\n      function interfaceFunction(val) {\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n          return interfaceFunction.path;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        shape: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n\n  var ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tr') {// arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup));\n        }\n      }\n\n      return arr;\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        }\n\n        return null;\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content;\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function get() {\n          return shape.nm;\n        }\n      }); // interfaceFunction.content = interfaceFunction;\n\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint;\n        }\n\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function get() {\n            return 'a';\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n\n      return interfaceFunction;\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p)\n        });\n      }\n\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function get() {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));\n      return interfaceFunction;\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end;\n        }\n\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint;\n        }\n\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale;\n        }\n\n        if (shape.sk && shape.sk.ix === value || value === 'Skew') {\n          return interfaceFunction.skew;\n        }\n\n        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));\n      }\n\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = 'tr';\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius;\n        }\n\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius;\n        }\n\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies;\n        }\n\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value;\n\n          if (value === 0) {\n            return propertyGroup;\n          }\n\n          return interfaces[value - 1];\n        }\n\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = 'Contents';\n      return _interfaceFunction;\n    };\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue;\n\n      var _sourceText;\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function get() {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue); // eslint-disable-line no-new-wrappers\n            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue || new String(stringValue); // eslint-disable-line no-new-wrappers\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  var getBlendMode = function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity'\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || '';\n    };\n  }();\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, this);\n          break;\n        // case 6:\n\n        default:\n          eff = new NoValueEffect(effects[i], element, this);\n          break;\n      }\n\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function checkMasks() {\n      if (!this.data.hasMask) {\n        return false;\n      }\n\n      var i = 0;\n      var len = this.data.masksProperties.length;\n\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    initExpressions: function initExpressions() {\n      this.layerInterface = LayerExpressionInterface(this);\n\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function setBlendMode() {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style['mix-blend-mode'] = blendModeValue;\n    },\n    initBaseData: function initBaseData(data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID(); // Stretch factor for old animations missing this property.\n\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      } // effects manager\n\n\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function getType() {\n      return this.type;\n    },\n    sourceRectAtTime: function sourceRectAtTime() {}\n  };\n\n  /**\r\n   * @file\r\n   * Handles element's layer frame update.\r\n   * Checks layer in point and out point\r\n   *\r\n   */\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       */\n    initFrame: function initFrame() {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false; // list of animated properties\n\n      this.dynamicProperties = []; // If layer has been modified in current tick this will be true\n\n      this._mdf = false;\n    },\n\n    /**\r\n       * @function\r\n       * Calculates all dynamic values\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       * @param {boolean} isVisible\r\n       * if layers is currently in range\r\n       *\r\n       */\n    prepareProperties: function prepareProperties(num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n\n  function _typeof$2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$2(obj); }\n\n  var FootageInterface = function () {\n    var outlineInterfaceFactory = function outlineInterfaceFactory(elem) {\n      var currentPropertyName = '';\n      var currentProperty = elem.getFootageData();\n\n      function init() {\n        currentPropertyName = '';\n        currentProperty = elem.getFootageData();\n        return searchProperty;\n      }\n\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value;\n          currentProperty = currentProperty[value];\n\n          if (_typeof$2(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        var propertyNameIndex = value.indexOf(currentPropertyName);\n\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index];\n\n          if (_typeof$2(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        return '';\n      }\n\n      return init;\n    };\n\n    var dataInterfaceFactory = function dataInterfaceFactory(elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface();\n        }\n\n        return null;\n      }\n\n      interfaceFunction._name = 'Outline';\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);\n      return interfaceFunction;\n    };\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface;\n        }\n\n        return null;\n      }\n\n      _interfaceFunction._name = 'Data';\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem);\n      return _interfaceFunction;\n    };\n  }();\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.footageData = globalData.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data, globalData, comp);\n  }\n\n  FootageElement.prototype.prepareFrame = function () {};\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  FootageElement.prototype.renderFrame = function () {};\n\n  FootageElement.prototype.destroy = function () {};\n\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this);\n  };\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initBaseData(data, globalData, comp);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n\n  AudioElement.prototype.show = function () {// this.audio.play()\n  };\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  AudioElement.prototype.destroy = function () {};\n\n  AudioElement.prototype.sourceRectAtTime = function () {};\n\n  AudioElement.prototype.initExpressions = function () {};\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 3:\n        return this.createNull(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 6:\n        return this.createAudio(layer);\n\n      case 13:\n        return this.createCamera(layer);\n\n      case 15:\n        return this.createFootage(layer);\n\n      default:\n        return this.createNull(layer);\n    }\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n\n    if (path.length === 0) {\n      return element;\n    }\n\n    return element.getElementByPath(path);\n  };\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function initTransform() {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      } // TODO: check TYPE 11: Guided elements\n\n\n      if (this.data.ty !== 11) {// this.createElements();\n      }\n    },\n    renderTransform: function renderTransform() {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length; // Checking if any of the transformation matrices in the hierarchy chain has changed.\n\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function globalToLocal(pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n\n      var i;\n      var len = transforms.length;\n      var ptNew;\n\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = '';\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = 'clipPath';\n    var maskRef = 'clip-path';\n\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w || 0);\n        rect.setAttribute('height', this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = createNS('path');\n\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: ''\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        path.setAttribute('clip-rule', 'nonzero');\n        var filterID;\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask';\n          maskRef = 'mask';\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS('filter');\n          expansor.setAttribute('id', filterID);\n          feMorph = createNS('feMorphology');\n          feMorph.setAttribute('operator', 'erode');\n          feMorph.setAttribute('in', 'SourceGraphic');\n          feMorph.setAttribute('radius', '0');\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        } else {\n          feMorph = null;\n          x = null;\n        } // TODO move this to a factory or to a constructor\n\n\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0\n        };\n\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length;\n          var g = createNS('g');\n\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n\n          var mask = createNS('mask');\n          mask.setAttribute('mask-type', 'alpha');\n          mask.setAttribute('id', layerId + '_' + count);\n          mask.appendChild(path);\n          defs.appendChild(mask);\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')');\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        } // TODO move this to a factory or to a constructor\n\n\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId);\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')');\n      defs.appendChild(this.maskElement);\n    }\n\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\n    } // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    } // pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = '';\n\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n\n        viewData.elem.setAttribute('d', pathShapeValue);\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter');\n      fil.setAttribute('id', filId);\n\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox');\n        fil.setAttribute('x', '0%');\n        fil.setAttribute('y', '0%');\n        fil.setAttribute('width', '100%');\n        fil.setAttribute('height', '100%');\n      }\n\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    return ob;\n  }();\n\n  var registeredEffects = {};\n  var idPrefix = 'filter_result_';\n\n  function SVGEffects(elem) {\n    var i;\n    var source = 'SourceGraphic';\n    var len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem.data.ef[i].ty;\n\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source);\n        source = idPrefix + count;\n\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  function registerEffect(id, effect, countsAsEffect) {\n    registeredEffects[id] = {\n      effect: effect,\n      countsAsEffect: countsAsEffect\n    };\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function initRendererElement() {\n      this.layerElement = createNS('g');\n    },\n    createContainerElements: function createContainerElements() {\n      this.matteElement = createNS('g');\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null; // If this layer acts as a mask for the following layer\n\n      var filId;\n      var fil;\n      var gg;\n\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          // eslint-disable-line eqeqeq\n          var masker = createNS('mask');\n          masker.setAttribute('id', this.layerId);\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha'); // eslint-disable-line eqeqeq\n\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker); // This is only for IE and Edge when mask if of type alpha\n\n          if (!featureSupport.maskType && this.data.td == 1) {\n            // eslint-disable-line eqeqeq\n            masker.setAttribute('mask-type', 'luminance');\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          }\n        } else if (this.data.td == 2) {\n          // eslint-disable-line eqeqeq\n          var maskGroup = createNS('mask');\n          maskGroup.setAttribute('id', this.layerId);\n          maskGroup.setAttribute('mask-type', 'alpha');\n          var maskGrouper = createNS('g');\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId); /// /\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n\n          /* var feColorMatrix = createNS('feColorMatrix');\r\n                  feColorMatrix.setAttribute('type', 'matrix');\r\n                  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                  feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                  fil.appendChild(feColorMatrix); */\n          /// /\n\n          var feCTr = createNS('feComponentTransfer');\n          feCTr.setAttribute('in', 'SourceGraphic');\n          fil.appendChild(feCTr);\n          var feFunc = createNS('feFuncA');\n          feFunc.setAttribute('type', 'table');\n          feFunc.setAttribute('tableValues', '1.0 0.0');\n          feCTr.appendChild(feFunc); /// /\n\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS('rect');\n          alphaRect.setAttribute('width', this.comp.data.w);\n          alphaRect.setAttribute('height', this.comp.data.h);\n          alphaRect.setAttribute('x', '0');\n          alphaRect.setAttribute('y', '0');\n          alphaRect.setAttribute('fill', '#ffffff');\n          alphaRect.setAttribute('opacity', '0');\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance');\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      } // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n\n\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath');\n        var pt = createNS('path');\n        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n        var clipId = createElementID();\n        cp.setAttribute('id', clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g');\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n        }\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function destroyBaseElement() {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function getBaseElement() {\n      if (this.data.hd) {\n        return null;\n      }\n\n      return this.baseElement;\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function setMatte(id) {\n      if (!this.matteElement) {\n        return;\n      }\n\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n    }\n  };\n\n  /**\r\n   * @file\r\n   * Handles AE's layer parenting property.\r\n   *\r\n   */\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes hierarchy properties\r\n       *\r\n       */\n    initHierarchy: function initHierarchy() {\n      // element's parent list\n      this.hierarchy = []; // if element is parent of another layer _isParent will be true\n\n      this._isParent = false;\n      this.checkParenting();\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer's hierarchy.\r\n       * @param {array} hierarch\r\n       * layer's parent list\r\n       *\r\n       */\n    setHierarchy: function setHierarchy(hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer as parent.\r\n       *\r\n       */\n    setAsParent: function setAsParent() {\n      this._isParent = true;\n    },\n\n    /**\r\n       * @function\r\n       * Searches layer's parenting chain\r\n       *\r\n       */\n    checkParenting: function checkParenting() {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n\n  function RenderableDOMElement() {}\n\n  (function () {\n    var _prototype = {\n      initElement: function initElement(data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function hide() {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = 'none';\n          this.hidden = true;\n        }\n      },\n      show: function show() {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = 'block';\n          }\n\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function renderFrame() {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function renderInnerContent() {},\n      prepareFrame: function prepareFrame(num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function destroy() {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS('image');\n    this.innerElem.setAttribute('width', this.assetData.w + 'px');\n    this.innerElem.setAttribute('height', this.assetData.h + 'px');\n    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function addShapeToModifiers(data) {\n      var i;\n      var len = this.shapeModifiers.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    renderModifiers: function renderModifiers() {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n\n      var i;\n      var len = this.shapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame); // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function searchProcessedElement(elem) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n\n        i += 1;\n      }\n\n      return 0;\n    },\n    addProcessedElement: function addProcessedElement(elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n\n      while (i) {\n        i -= 1;\n\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function prepareFrame(num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n\n  var lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square'\n  };\n  var lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel'\n  };\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = '';\n    this.sh = shape;\n    this.lvl = level; // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n\n    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated\n\n    var i = 0;\n    var len = transformers.length;\n\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = '';\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS('path');\n    this.msElem = null;\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = '';\n    this._mdf = false;\n  };\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = '';\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray('float32', 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data.length || 0;\n    var prop;\n\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n\n    if (!this.k) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = this.k;\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n\n      if (this.renderer === 'svg') {\n        this.dashStr = '';\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray('uint8c', data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray('float32', cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n\n      if (diff > 0.01) {\n        return false;\n      }\n\n      i += 1;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val;\n\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n\n      if (this.o.length) {\n        len = this.prop.v.length;\n\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n\n      this._mdf = !forceRender;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')');\n    this.gf = gfill;\n    this.cst = stops;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask = createNS('mask');\n      var maskElement = createNS('path');\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute('id', maskId);\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)');\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')');\n\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml);\n        }\n      }\n\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS('g');\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n\n  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return '';\n    }\n\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n\n    for (i = 1; i < length; i += 1) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n\n    if (closed && length) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  var SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n\n    var _matrixHelper = new Matrix();\n\n    var ob = {\n      createRenderFunction: createRenderFunction\n    };\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill;\n\n        case 'gf':\n          return renderGradient;\n\n        case 'gs':\n          return renderGradientStroke;\n\n        case 'st':\n          return renderStroke;\n\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath;\n\n        case 'tr':\n          return renderContentTransform;\n\n        case 'no':\n          return renderNoop;\n\n        default:\n          return null;\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\n      }\n\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var props;\n      var iterations;\n      var k;\n\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (redraw) {\n          pathStringTransformed = '';\n\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n\n      var stops;\n      var i;\n      var len;\n      var stop;\n\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute('offset', cValues[i * 4] + '%');\n          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n        }\n      }\n\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%');\n          }\n\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n        }\n      }\n\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0]);\n          gfill.setAttribute('y2', pt2[1]);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0]);\n            itemData.of.setAttribute('y2', pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute('r', rad);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad);\n          }\n        }\n\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute('fx', x);\n          gfill.setAttribute('fy', y);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x);\n            itemData.of.setAttribute('fy', y);\n          }\n        } // gfill.setAttribute('fy','200');\n\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\n      }\n\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n      }\n\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n        }\n      }\n    }\n\n    return ob;\n  }();\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = []; // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  /*\r\n  This method searches for multiple shapes that affect a single element and one of them is animated\r\n  */\n\n\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')');\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb);\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n      pathElement.setAttribute('fill-opacity', '0');\n\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml);\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n\n      i += 1;\n    }\n\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data\n    });\n  };\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n\n    this.renderShape();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); // Adding M0 0 fixes same mask bug on all browsers\n\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\n        }\n\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s];\n      }\n    }\n\n    return obj;\n  };\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n\n    return this.kf;\n  };\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n\n    return this.data.d.k[this.keysIndex].s;\n  };\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n\n    while (i < len) {\n      charCode = text.charCodeAt(i);\n\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n      } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (secondCharCode >= 0xDC00 && secondCharCode <= 0xDFFF) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n            shouldCombine = false;\n          } else {\n            charactersArray.push(text.substr(i, 2));\n          }\n\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (charCode > 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true;\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n        shouldCombine = true;\n      } else {\n        charactersArray.push(text.charAt(i));\n      }\n\n      i += 1;\n    }\n\n    return charactersArray;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index = 0;\n    var val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var charCode;\n\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r'); // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = currentChar;\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== ' ' || based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.copyData({}, this.data.d.k[index].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index].s = dData;\n    this.recalculate(index);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  var TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem, data.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function getMult(ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0;\n        } else {\n          y1 = -this.ne.v / 100.0;\n        }\n\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0;\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0;\n        }\n\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /* ind += 0.5;\r\n                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2; // eslint-disable-line\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        } // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n\n\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n\n          if (smoothness === 0) {\n            smoothness = 0.00000001;\n          }\n\n          var threshold = 0.5 - smoothness * 0.5;\n\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n\n        return mult * this.a.v;\n      },\n      getValue: function getValue(newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr);\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp\n    };\n  }();\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask;\n\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n\n\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = '';\n    var letterP = this.defaultPropsArray;\n    var letterO; //\n\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n\n          isNewLine = false;\n        }\n      }\n\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    } //\n\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterM = '';\n        letterFc = '';\n        letterSw = '';\n        letterO = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n\n              default:\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an * 0.005;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true; // Force alignment only works with a single line for now\n\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0);\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 0.005;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 0.001 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n\n            default:\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n\n      default:\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {};\n\n  var emptyShapeData = {\n    shapes: []\n  };\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text');\n    }\n  };\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = '';\n\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = '';\n      } else {\n        currentTextContent += textArray[i];\n      }\n\n      i += 1;\n    }\n\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0];\n\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale;\n          shapeItem.s.k[1] = scale;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    this.layerElement.setAttribute('aria-label', documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = '';\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = 'start';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n\n        default:\n          justify = 'start';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i].span = tSpan;\n\n            if (usesGlyphs) {\n              var childSpan = createNS('g');\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0; // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n          xPos += trackingOffset;\n        }\n\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement; // t === 1 means the character has been replaced with an animated shaped\n\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data = emptyShapeData;\n\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n\n            glyphElement = new SVGShapeElement(data, this.globalData, this);\n          }\n\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement); // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute('transform', 'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')');\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');\n          }\n\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        } //\n\n      }\n\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m);\n            }\n\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o);\n            }\n\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw);\n            }\n\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc);\n            }\n\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([IImageElement], ISolidElement);\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect'); /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  NullElement.prototype.renderFrame = function () {};\n\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  NullElement.prototype.destroy = function () {};\n\n  NullElement.prototype.sourceRectAtTime = function () {};\n\n  NullElement.prototype.hide = function () {};\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase);\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w);\n      this.svgElement.setAttribute('height', animData.h);\n      this.svgElement.style.width = '100%';\n      this.svgElement.style.height = '100%';\n      this.svgElement.style.transform = 'translate3d(0,0,0)';\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width);\n    }\n\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height);\n    }\n\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id);\n    }\n\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\n    }\n\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.svgElement); // Mask animation\n\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS('clipPath');\n    var rect = createNS('rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = createElementID();\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')');\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } // console.log('-------');\n    // console.log('FRAME ',num);\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n\n    this.hide();\n  };\n  /* ICompElement.prototype.hide = function(){\r\n      if(!this.hidden){\r\n          this.hideElement();\r\n          var i,len = this.elements.length;\r\n          for( i = 0; i < len; i+=1 ){\r\n              if(this.elements[i]){\r\n                  this.elements[i].hide();\r\n              }\r\n          }\r\n      }\r\n  }; */\n\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i;\n    var len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    } // This iteration needs to be backwards because of how expressions connect between each other\n\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS('svg');\n    var ariaLabel = '';\n\n    if (config && config.title) {\n      var titleElement = createNS('title');\n      var titleId = createElementID();\n      titleElement.setAttribute('id', titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n\n    if (config && config.description) {\n      var descElement = createNS('desc');\n      var descId = createElementID();\n      descElement.setAttribute('id', descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += ' ' + descId;\n    }\n\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    var defs = createNS('defs');\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS('g');\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || '',\n      id: config && config.id || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '100%',\n        height: config && config.filterSize && config.filterSize.height || '100%',\n        x: config && config.filterSize && config.filterSize.x || '0%',\n        y: config && config.filterSize && config.filterSize.y || '0%'\n      },\n      width: config && config.width,\n      height: config && config.height\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = 'svg';\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer);\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i;\n    var len = 15;\n    this.savedOp = createTypedArray('float32', len);\n\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = len;\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray('float32', newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = newLength;\n  };\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function addTransformSequence(transforms) {\n      var i;\n      var len = transforms.length;\n      var key = '_';\n\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_';\n      }\n\n      var sequence = this.sequences[key];\n\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n\n      return sequence;\n    },\n    processSequence: function processSequence(sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n\n        i += 1;\n      }\n\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n\n      sequence._mdf = _mdf;\n    },\n    processSequences: function processSequences(isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function getNewKey() {\n      this.transform_key_count += 1;\n      return '_' + this.transform_key_count;\n    }\n  };\n\n  function CVEffects() {}\n\n  CVEffects.prototype.renderFrame = function () {};\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true;\n      }\n\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n\n    this.hasMasks = hasMasks;\n\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data;\n    ctx.beginPath();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data._length;\n\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function createElements() {},\n    initRendererElement: function initRendererElement() {},\n    createContainerElements: function createContainerElements() {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects(this);\n    },\n    createContent: function createContent() {},\n    setBlendMode: function setBlendMode() {\n      var globalData = this.globalData;\n\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function hideElement() {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function showElement() {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function renderFrame() {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bmFloor(elementData.c.v[0]) + ',' + bmFloor(elementData.c.v[1]) + ',' + bmFloor(elementData.c.v[2]) + ')';\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2];\n      styleElem.lj = lineJoinEnum[data.lj || 2];\n\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem[\"do\"] = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type; // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n\n      if (!((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n\n        if (type === 'st' || type === 'gs') {\n          ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\n          ctx.lineWidth = currentStyle.wi;\n          ctx.lineCap = currentStyle.lc;\n          ctx.lineJoin = currentStyle.lj;\n          ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\n        }\n\n        renderer.ctxOpacity(currentStyle.coOp);\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath();\n        }\n\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle[\"do\"];\n            }\n          }\n\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n\n          if (type === 'st' || type === 'gs') {\n            ctx.stroke();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.fill(currentStyle.r);\n        }\n\n        renderer.restore();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty === 'tm') {//\n      }\n    }\n\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: 'z'\n            });\n          }\n        }\n      }\n\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n\n        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\n      }\n\n      styleElem.grd = grd;\n    }\n\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem[\"do\"] = d.dashoffset[0];\n    }\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length; // this.tHelper.font = this.values.fValue;\n\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n\n        if (renderedLetter) {\n          this.globalData.renderer.save();\n          this.globalData.renderer.ctxTransform(renderedLetter.p);\n          this.globalData.renderer.ctxOpacity(renderedLetter.o);\n        }\n\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc;\n              ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            ctx.fillStyle = this.values.fill;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.fill(); /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            ctx.lineWidth = this.values.sWidth;\n          }\n\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            ctx.strokeStyle = this.values.stroke;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.stroke(); /// ctx.strokeText(letters[i].val,0,0);\n        }\n\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getAsset(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas');\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext('2d');\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n\n      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh); //\n  };\n\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]); // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    /* if(op === 1){\r\n          return;\r\n      } */\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n\n    this.contextData.cO *= op < 0 ? 0 : op;\n\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.reset();\n  };\n\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n\n    var props = this.contextData.cTr.props;\n\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n\n    var i;\n    var arr = this.contextData.saved[this.contextData.cArrPos];\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = 'source-over';\n    }\n\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i;\n    var arr = this.contextData.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas');\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = '100%';\n      containerStyle.height = '100%';\n      var origin = '0px 0px 0px';\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle['-webkit-transform'] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n\n    var elementRel;\n    var animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    /* var i, len = this.elements.length;\r\n      for(i=0;i<len;i+=1){\r\n          if(this.elements[i] && this.elements[i].data.ty === 0){\r\n              this.elements[i].resize(this.globalData.transformCanvas);\r\n          }\r\n      } */\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num; // console.log('--------');\n    // console.log('NEW: ',num);\n\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n    /* if(this.layers[pos].ty === 0){\r\n          element.resize(this.globalData.transformCanvas);\r\n      } */\n  };\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.layers = null;\n    this.elements = null;\n  };\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function HBaseElement() {}\n\n  HBaseElement.prototype = {\n    checkBlendMode: function checkBlendMode() {},\n    initRendererElement: function initRendererElement() {\n      this.baseElement = createTag(this.data.tg || 'div');\n\n      if (this.data.hasMask) {\n        this.svgElement = createNS('svg');\n        this.layerElement = createNS('g');\n        this.maskedElement = this.layerElement;\n        this.svgElement.appendChild(this.layerElement);\n        this.baseElement.appendChild(this.svgElement);\n      } else {\n        this.layerElement = this.baseElement;\n      }\n\n      styleDiv(this.baseElement);\n    },\n    createContainerElements: function createContainerElements() {\n      this.renderableEffectsManager = new CVEffects(this);\n      this.transformedElement = this.baseElement;\n      this.maskedElement = this.layerElement;\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};\n\n      if (this.finalTransform._matMdf) {\n        var matrixValue = this.finalTransform.mat.toCSS();\n        transformedElementStyle.transform = matrixValue;\n        transformedElementStyle.webkitTransform = matrixValue;\n      }\n\n      if (this.finalTransform._opMdf) {\n        transformedElementStyle.opacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderFrame: function renderFrame() {\n      // If it is exported as hidden (data.hd === true) no need to render\n      // If it is not visible no need to render\n      if (this.data.hd || this.hidden) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderElement();\n      this.renderInnerContent();\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.layerElement = null;\n      this.transformedElement = null;\n\n      if (this.matteElement) {\n        this.matteElement = null;\n      }\n\n      if (this.maskManager) {\n        this.maskManager.destroy();\n        this.maskManager = null;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n    },\n    addEffects: function addEffects() {},\n    setMatte: function setMatte() {}\n  };\n  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\n  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\n  HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\n\n  HSolidElement.prototype.createContent = function () {\n    var rect;\n\n    if (this.data.hasMask) {\n      rect = createNS('rect');\n      rect.setAttribute('width', this.data.sw);\n      rect.setAttribute('height', this.data.sh);\n      rect.setAttribute('fill', this.data.sc);\n      this.svgElement.setAttribute('width', this.data.sw);\n      this.svgElement.setAttribute('height', this.data.sh);\n    } else {\n      rect = createTag('div');\n      rect.style.width = this.data.sw + 'px';\n      rect.style.height = this.data.sh + 'px';\n      rect.style.backgroundColor = this.data.sc;\n    }\n\n    this.layerElement.appendChild(rect);\n  };\n\n  function HShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.shapesContainer = createNS('g');\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\n\n  HShapeElement.prototype.createContent = function () {\n    var cont;\n    this.baseElement.style.fontSize = 0;\n\n    if (this.data.hasMask) {\n      this.layerElement.appendChild(this.shapesContainer);\n      cont = this.svgElement;\n    } else {\n      cont = createNS('svg');\n      var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n      cont.setAttribute('width', size.w);\n      cont.setAttribute('height', size.h);\n      cont.appendChild(this.shapesContainer);\n      this.layerElement.appendChild(cont);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\n    this.filterUniqueShapes();\n    this.shapeCont = cont;\n  };\n\n  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {\n    var i;\n    var len = transformers.length;\n\n    for (i = 0; i < len; i += 1) {\n      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\n    }\n\n    return point;\n  };\n\n  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\n    var shape = item.sh.v;\n    var transformers = item.transformers;\n    var i;\n    var len = shape._length;\n    var vPoint;\n    var oPoint;\n    var nextIPoint;\n    var nextVPoint;\n\n    if (len <= 1) {\n      return;\n    }\n\n    for (i = 0; i < len - 1; i += 1) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n\n    if (shape.c) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n  };\n\n  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\n    var bounds = this.shapeBoundingBox;\n    boundingBox.x = bmMin(bounds.left, boundingBox.x);\n    boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);\n    boundingBox.y = bmMin(bounds.top, boundingBox.y);\n    boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);\n  };\n\n  HShapeElement.prototype.shapeBoundingBox = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n  HShapeElement.prototype.tempBoundingBox = {\n    x: 0,\n    xMax: 0,\n    y: 0,\n    yMax: 0,\n    width: 0,\n    height: 0\n  };\n\n  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\n    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\n\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\n      // eslint-disable-line no-plusplus\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      c = 3 * p1[i] - 3 * p0[i];\n      b |= 0; // eslint-disable-line no-bitwise\n\n      a |= 0; // eslint-disable-line no-bitwise\n\n      c |= 0; // eslint-disable-line no-bitwise\n\n      if (a === 0 && b === 0) {//\n      } else if (a === 0) {\n        t = -c / b;\n\n        if (t > 0 && t < 1) {\n          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\n        }\n      } else {\n        b2ac = b * b - 4 * c * a;\n\n        if (b2ac >= 0) {\n          t1 = (-b + bmSqrt(b2ac)) / (2 * a);\n          if (t1 > 0 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\n          t2 = (-b - bmSqrt(b2ac)) / (2 * a);\n          if (t2 > 0 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\n        }\n      }\n    }\n\n    this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);\n    this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);\n    this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);\n    this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);\n  };\n\n  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\n    return bmPow(1 - t, 3) * p0[i] + 3 * bmPow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bmPow(t, 2) * p2[i] + bmPow(t, 3) * p3[i];\n  };\n\n  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\n    var i;\n    var len = itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (itemsData[i] && itemsData[i].sh) {\n        this.calculateShapeBoundingBox(itemsData[i], boundingBox);\n      } else if (itemsData[i] && itemsData[i].it) {\n        this.calculateBoundingBox(itemsData[i].it, boundingBox);\n      }\n    }\n  };\n\n  HShapeElement.prototype.currentBoxContains = function (box) {\n    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\n  };\n\n  HShapeElement.prototype.renderInnerContent = function () {\n    this._renderShapeFrame();\n\n    if (!this.hidden && (this._isFirstFrame || this._mdf)) {\n      var tempBoundingBox = this.tempBoundingBox;\n      var max = 999999;\n      tempBoundingBox.x = max;\n      tempBoundingBox.xMax = -max;\n      tempBoundingBox.y = max;\n      tempBoundingBox.yMax = -max;\n      this.calculateBoundingBox(this.itemsData, tempBoundingBox);\n      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\n      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; // var tempBoundingBox = this.shapeCont.getBBox();\n\n      if (this.currentBoxContains(tempBoundingBox)) {\n        return;\n      }\n\n      var changed = false;\n\n      if (this.currentBBox.w !== tempBoundingBox.width) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.shapeCont.setAttribute('width', tempBoundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== tempBoundingBox.height) {\n        this.currentBBox.h = tempBoundingBox.height;\n        this.shapeCont.setAttribute('height', tempBoundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.currentBBox.h = tempBoundingBox.height;\n        this.currentBBox.x = tempBoundingBox.x;\n        this.currentBBox.y = tempBoundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        var shapeStyle = this.shapeCont.style;\n        var shapeTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        shapeStyle.transform = shapeTransform;\n        shapeStyle.webkitTransform = shapeTransform;\n      }\n    }\n  };\n\n  function HTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\n\n  HTextElement.prototype.createContent = function () {\n    this.isMasked = this.checkMasks();\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      this.svgElement.setAttribute('width', this.compW);\n      this.svgElement.setAttribute('height', this.compH);\n      var g = createNS('g');\n      this.maskedElement.appendChild(g);\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = this.layerElement;\n    }\n\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var innerElemStyle = this.innerElem.style;\n    var textColor = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n    innerElemStyle.fill = textColor;\n    innerElemStyle.color = textColor;\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.finalSize + 'px';\n      innerElemStyle.lineHeight = documentData.finalSize + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight;\n        var fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i;\n    var len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan;\n    var tParent;\n    var tCont;\n    var matrixHelper = this.mHelper;\n    var shapes;\n    var shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = createNS('path');\n          tSpan.setAttribute('stroke-linecap', lineCapEnum[1]);\n          tSpan.setAttribute('stroke-linejoin', lineJoinEnum[2]);\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = createTag('div');\n            tParent.style.lineHeight = 0;\n            tCont = createNS('svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else if (!this.isMasked) {\n        if (this.textSpans[cnt]) {\n          tParent = this.textSpans[cnt];\n          tSpan = this.textPaths[cnt];\n        } else {\n          tParent = createTag('span');\n          styleDiv(tParent);\n          tSpan = createTag('span');\n          styleDiv(tSpan);\n          tParent.appendChild(tSpan);\n        }\n      } else {\n        tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\n      } // tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes && shapeData.shapes.length) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            // document.body.appendChild is needed to get exact measure of shape\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            var tContStyle = tCont.style;\n            var tContTranslation = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            tContStyle.transform = tContTranslation;\n            tContStyle.webkitTransform = tContTranslation;\n            letters[i].yOffset = boundingBox.y - 1;\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n\n          tParent.appendChild(tCont);\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          var tStyle = tSpan.style;\n          var tSpanTranslation = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\n          tStyle.transform = tSpanTranslation;\n          tStyle.webkitTransform = tSpanTranslation;\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.renderInnerContent = function () {\n    var svgStyle;\n\n    if (this.data.singleShape) {\n      if (!this._isFirstFrame && !this.lettersChangedFlag) {\n        return;\n      }\n\n      if (this.isMasked && this.finalTransform._matMdf) {\n        // Todo Benchmark if using this is better than getBBox\n        this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n        svgStyle = this.svgElement.style;\n        var translation = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        svgStyle.transform = translation;\n        svgStyle.webkitTransform = translation;\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i;\n    var len;\n    var count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var textSpan;\n    var textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n      } else {\n        textSpan = this.textSpans[i];\n        textPath = this.textPaths[i];\n        renderedLetter = renderedLetters[count];\n        count += 1;\n\n        if (renderedLetter._mdf.m) {\n          if (!this.isMasked) {\n            textSpan.style.webkitTransform = renderedLetter.m;\n            textSpan.style.transform = renderedLetter.m;\n          } else {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n        } /// /textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n        textSpan.style.opacity = renderedLetter.o;\n\n        if (renderedLetter.sw && renderedLetter._mdf.sw) {\n          textPath.setAttribute('stroke-width', renderedLetter.sw);\n        }\n\n        if (renderedLetter.sc && renderedLetter._mdf.sc) {\n          textPath.setAttribute('stroke', renderedLetter.sc);\n        }\n\n        if (renderedLetter.fc && renderedLetter._mdf.fc) {\n          textPath.setAttribute('fill', renderedLetter.fc);\n          textPath.style.color = renderedLetter.fc;\n        }\n      }\n    }\n\n    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n      var boundingBox = this.innerElem.getBBox();\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.svgElement.setAttribute('width', boundingBox.width);\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.svgElement.setAttribute('height', boundingBox.height);\n      }\n\n      var margin = 1;\n\n      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n        this.currentBBox.w = boundingBox.width + margin * 2;\n        this.currentBBox.h = boundingBox.height + margin * 2;\n        this.currentBBox.x = boundingBox.x - margin;\n        this.currentBBox.y = boundingBox.y - margin;\n        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        svgStyle = this.svgElement.style;\n        var svgTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        svgStyle.transform = svgTransform;\n        svgStyle.webkitTransform = svgTransform;\n      }\n    }\n  };\n\n  function HCameraElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initHierarchy();\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i;\n      var len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\n    this.mat = new Matrix();\n    this._prevMat = new Matrix();\n    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\n\n    this.finalTransform = {\n      mProp: this\n    };\n  }\n\n  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i;\n    var len = this.comp.threeDElements.length;\n    var comp;\n    var perspectiveStyle;\n    var containerStyle;\n\n    for (i = 0; i < len; i += 1) {\n      // [perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n\n      if (comp.type === '3d') {\n        perspectiveStyle = comp.perspectiveElem.style;\n        containerStyle = comp.container.style;\n        var perspective = this.pe.v + 'px';\n        var origin = '0px 0px 0px';\n        var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n        perspectiveStyle.perspective = perspective;\n        perspectiveStyle.webkitPerspective = perspective;\n        containerStyle.transformOrigin = origin;\n        containerStyle.mozTransformOrigin = origin;\n        containerStyle.webkitTransformOrigin = origin;\n        perspectiveStyle.transform = matrix;\n        perspectiveStyle.webkitTransform = matrix;\n      }\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var _mdf = this._isFirstFrame;\n    var i;\n    var len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\n      }\n    }\n\n    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n      this.mat.reset();\n\n      if (this.hierarchy) {\n        len = this.hierarchy.length - 1;\n\n        for (i = len; i >= 0; i -= 1) {\n          var mTransf = this.hierarchy[i].finalTransform.mProp;\n          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\n          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\n          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\n          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\n          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\n        }\n      }\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector;\n\n        if (this.p) {\n          diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        } else {\n          diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\n        }\n\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); // var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(mRotationY).rotateX(-mRotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n      var hasMatrixChanged = !this._prevMat.equals(this.mat);\n\n      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\n        len = this.comp.threeDElements.length;\n        var comp;\n        var perspectiveStyle;\n        var containerStyle;\n\n        for (i = 0; i < len; i += 1) {\n          comp = this.comp.threeDElements[i];\n\n          if (comp.type === '3d') {\n            if (hasMatrixChanged) {\n              var matValue = this.mat.toCSS();\n              containerStyle = comp.container.style;\n              containerStyle.transform = matValue;\n              containerStyle.webkitTransform = matValue;\n            }\n\n            if (this.pe._mdf) {\n              perspectiveStyle = comp.perspectiveElem.style;\n              perspectiveStyle.perspective = this.pe.v + 'px';\n              perspectiveStyle.webkitPerspective = this.pe.v + 'px';\n            }\n          }\n        }\n\n        this.mat.clone(this._prevMat);\n      }\n    }\n\n    this._isFirstFrame = false;\n  };\n\n  HCameraElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  HCameraElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  function HImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\n\n  HImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      this.imageElem = createNS('image');\n      this.imageElem.setAttribute('width', this.assetData.w + 'px');\n      this.imageElem.setAttribute('height', this.assetData.h + 'px');\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      this.layerElement.appendChild(this.imageElem);\n      this.baseElement.setAttribute('width', this.assetData.w);\n      this.baseElement.setAttribute('height', this.assetData.h);\n    } else {\n      this.layerElement.appendChild(img);\n    }\n\n    img.crossOrigin = 'anonymous';\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.baseElement.setAttribute('id', this.data.ln);\n    }\n  };\n\n  function HybridRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([BaseRenderer], HybridRendererBase);\n  HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      if (this.threeDElements) {\n        this.addTo3dContainer(newDOMElement, pos);\n      } else {\n        var i = 0;\n        var nextDOMElement;\n        var nextLayer;\n        var tmpDOMElement;\n\n        while (i < pos) {\n          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n            nextLayer = this.elements[i];\n            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n            nextDOMElement = tmpDOMElement || nextDOMElement;\n          }\n\n          i += 1;\n        }\n\n        if (nextDOMElement) {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n          }\n        } else if (!layer.ddd || !this.supports3d) {\n          this.layerElement.appendChild(newDOMElement);\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRendererBase.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new SVGShapeElement(data, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextLottieElement(data, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRendererBase.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  HybridRendererBase.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  HybridRendererBase.prototype.createThreeDContainer = function (pos, type) {\n    var perspectiveElem = createTag('div');\n    var style;\n    var containerStyle;\n    styleDiv(perspectiveElem);\n    var container = createTag('div');\n    styleDiv(container);\n\n    if (type === '3d') {\n      style = perspectiveElem.style;\n      style.width = this.globalData.compSize.w + 'px';\n      style.height = this.globalData.compSize.h + 'px';\n      var center = '50% 50%';\n      style.webkitTransformOrigin = center;\n      style.mozTransformOrigin = center;\n      style.transformOrigin = center;\n      containerStyle = container.style;\n      var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n      containerStyle.transform = matrix;\n      containerStyle.webkitTransform = matrix;\n    }\n\n    perspectiveElem.appendChild(container); // this.resizerElem.appendChild(perspectiveElem);\n\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos,\n      type: type\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRendererBase.prototype.build3dContainers = function () {\n    var i;\n    var len = this.layers.length;\n    var lastThreeDContainerData;\n    var currentContainer = '';\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd && this.layers[i].ty !== 3) {\n        if (currentContainer !== '3d') {\n          currentContainer = '3d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '3d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        if (currentContainer !== '2d') {\n          currentContainer = '2d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '2d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      }\n    }\n\n    len = this.threeDElements.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\n    }\n  };\n\n  HybridRendererBase.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRendererBase.prototype.configAnimation = function (animData) {\n    var resizerElem = createTag('div');\n    var wrapper = this.animationItem.wrapper;\n    var style = resizerElem.style;\n    style.width = animData.w + 'px';\n    style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    style.transformStyle = 'flat';\n    style.mozTransformStyle = 'flat';\n    style.webkitTransformStyle = 'flat';\n\n    if (this.renderConfig.className) {\n      resizerElem.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    style.overflow = 'hidden';\n    var svg = createNS('svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = createNS('defs');\n    svg.appendChild(defs);\n    this.data = animData; // Mask animation\n\n    this.setupGlobalData(animData, svg);\n    this.globalData.defs = defs;\n    this.layers = animData.layers;\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      this.elements[i].destroy();\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRendererBase.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx;\n    var sy;\n    var tx;\n    var ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    var style = this.resizerElem.style;\n    style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n    style.transform = style.webkitTransform;\n  };\n\n  HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRendererBase.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRendererBase.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRendererBase.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i;\n      var len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        var style = this.threeDElements[i].perspectiveElem.style;\n        style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n        style.perspective = style.webkitPerspective;\n      }\n    }\n  };\n\n  HybridRendererBase.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    var floatingContainer = createTag('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function HCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = !data.hasMask;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement);\n  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\n\n  HCompElement.prototype.createContainerElements = function () {\n    this._createBaseContainerElements(); // divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\n\n\n    if (this.data.hasMask) {\n      this.svgElement.setAttribute('width', this.data.w);\n      this.svgElement.setAttribute('height', this.data.h);\n      this.transformedElement = this.baseElement;\n    } else {\n      this.transformedElement = this.layerElement;\n    }\n  };\n\n  HCompElement.prototype.addTo3dContainer = function (elem, pos) {\n    var j = 0;\n    var nextElement;\n\n    while (j < pos) {\n      if (this.elements[j] && this.elements[j].getBaseElement) {\n        nextElement = this.elements[j].getBaseElement();\n      }\n\n      j += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(elem, nextElement);\n    } else {\n      this.layerElement.appendChild(elem);\n    }\n  };\n\n  HCompElement.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([HybridRendererBase], HybridRenderer);\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n\n      function pushExpression() {\n        stackCount += 1;\n      }\n\n      function popExpression() {\n        stackCount -= 1;\n\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n\n        registers.length = 0;\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n\n    return ob;\n  }();\n\n  function _typeof$1(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$1(obj); }\n\n  /* eslint-disable */\n\n  /*\r\n   Copyright 2014 David Bau.\r\n\r\n   Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n\r\n   The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n\r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n   */\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng[\"double\"] = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      };\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = _typeof$1(obj),\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  }\n\n  ;\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath);\n  }\n\n  var propTypes = {\n    SHAPE: 'shape'\n  };\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var ExpressionManager = function () {\n    'use strict';\n\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n    var XMLHttpRequest = null;\n    var fetch = null;\n    var frames = null;\n    initialize$2(BMMath);\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\n    }\n\n    function $bm_neg(a) {\n      var tOfA = _typeof(a);\n\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a;\n      }\n\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n\n      if (a.propType) {\n        return a.v;\n      }\n\n      return -a;\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get;\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get;\n\n    function sum(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b, 10);\n        }\n\n        return a - b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b, 10);\n      }\n\n      return a % b;\n    }\n\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i;\n      var len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n\n      if (max === min) {\n        h = 0; // achromatic\n\n        s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n\n          default:\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r;\n      var g;\n      var b;\n\n      if (s === 0) {\n        r = l; // achromatic\n\n        b = l; // achromatic\n\n        g = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n\n      if (t <= tMin) {\n        return value1;\n      }\n\n      if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i;\n        var len = max.length;\n\n        if (!min) {\n          min = createTypedArray('float32', len);\n        }\n\n        var arr = createTypedArray('float32', len);\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform;\n      var $bm_transform;\n      var content;\n      var effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, 'value', {\n        get: function get() {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn;\n      var loop_in;\n      var loopOut;\n      var loop_out;\n      var smooth;\n      var toWorld;\n      var fromWorld;\n      var fromComp;\n      var toComp;\n      var fromCompToSurface;\n      var position;\n      var rotation;\n      var anchorPoint;\n      var scale;\n      var thisLayer;\n      var thisComp;\n      var mask;\n      var valueAtTime;\n      var velocityAtTime;\n      var scoped_bm_rt; // val = val.replace(/(\\\\?\"|')((http)(s)?(:\\/))?\\/.*?(\\\\?\"|')/g, \"\\\"\\\"\"); // deter potential network calls\n\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0]; // eslint-disable-line no-eval\n\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n\n      var wiggle = function wiggle(freq, amp) {\n        var iWiggle;\n        var j;\n        var lenWiggle = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray('float32', lenWiggle);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        iWiggle = 0;\n        j = 0;\n\n        while (iWiggle < iterations) {\n          // var rnd = BMMath.random();\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); // addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          iWiggle += 1;\n        } // var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray('float32', lenWiggle);\n\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        }\n\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n\n        if (t > 1) {\n          t = 1;\n        } else if (t < 0) {\n          t = 0;\n        }\n\n        var mult = fn(t);\n\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey;\n          var lenKey = val1.length;\n          var arr = createTypedArray('float32', lenKey);\n\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\n          }\n\n          return arr;\n        }\n\n        return (val2 - val1) * mult + val1;\n      }\n\n      function nearestKey(time) {\n        var iKey;\n        var lenKey = data.k.length;\n        var index;\n        var keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time === data.k[iKey].t) {\n                index = iKey + 1;\n                keyTime = data.k[iKey].t;\n                break;\n              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\n                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\n                  index = iKey + 2;\n                  keyTime = data.k[iKey + 1].t;\n                } else {\n                  index = iKey + 1;\n                  keyTime = data.k[iKey].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = iKey + 1;\n              keyTime = data.k[iKey].t;\n            }\n          }\n        }\n\n        var obKey = {};\n        obKey.index = index;\n        obKey.time = keyTime / elem.comp.globalData.frameRate;\n        return obKey;\n      }\n\n      function key(ind) {\n        var obKey;\n        var iKey;\n        var lenKey;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e;\n        lenKey = arr.length;\n\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey];\n          obKey.value[iKey] = arr[iKey];\n        }\n\n        return obKey;\n      }\n\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return fr / fps;\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init);\n          }\n\n          return value.substring(init, end);\n        }\n\n        return '';\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init);\n          }\n\n          return value.substr(init, end);\n        }\n\n        return '';\n      }\n\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\n        value = valueAtTime(time);\n      }\n\n      var time;\n      var velocity;\n      var value;\n      var text;\n      var textIndex;\n      var textTotal;\n      var selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n      var globalData = elem.globalData;\n\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value;\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value;\n        }\n\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface('ADBE Transform Group');\n          $bm_transform = transform;\n\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n            /* position = transform.position;\r\n                      rotation = transform.rotation;\r\n                      scale = transform.scale; */\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer('ADBE Root Vectors Group');\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (_needsRandom) {\n          seedRandom(randSeed + time);\n        }\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId; // TODO: Check if it's possible to return on ShapeInterface the .v value\n        // Changed this to a ternary operation because Rollup failed compiling it correctly\n\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;\n        return scoped_bm_rt;\n      } // Bundlers will see these as dead code and unless we reference them\n\n\n      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];\n      return executeExpression;\n    }\n\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];\n    return ob;\n  }();\n\n  var expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n\n      if (v1.length) {\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n\n      return speed;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.001; // frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length);\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty\n    };\n  }();\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var firstKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n\n          return ret;\n        }\n\n        return (endV - initV) * repeats + current;\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005; // eslint-disable-line\n          }\n\n          return ret;\n        }\n\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n      }\n\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var lastKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n\n          return ret;\n        }\n\n        return current - (endV - initV) * repeats;\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n          }\n\n          return ret;\n        }\n\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n      }\n\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n\n      if (samples <= 1) {\n        return this.pv;\n      }\n\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value;\n\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length);\n      } else {\n        value = 0;\n      }\n\n      var sampleValue;\n\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n\n        i += 1;\n      }\n\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n\n      return value;\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      } /// /\n\n\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time);\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);\n      }\n\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time);\n        var skewAxis = this.sa.getValueAtTime(time);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time);\n        matrix.rotate(-rotation * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time);\n        var rotationY = this.ry.getValueAtTime(time);\n        var rotationX = this.rx.getValueAtTime(time);\n        var orientation = this.or.getValueAtTime(time);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time);\n        var positionY = this.py.getValueAtTime(time);\n\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position = this.p.getValueAtTime(time);\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);\n      }\n\n      return matrix; /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container); // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n\n      return this._cachingAtTime.shapeValue;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    function ShapeExpressions() {}\n\n    ShapeExpressions.prototype = {\n      vertices: function vertices(prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n\n        return arr;\n      },\n      points: function points(time) {\n        return this.vertices('v', time);\n      },\n      inTangents: function inTangents(time) {\n        return this.vertices('i', time);\n      },\n      outTangents: function outTangents(time) {\n        return this.vertices('o', time);\n      },\n      isClosed: function isClosed() {\n        return this.v.c;\n      },\n      pointOnPath: function pointOnPath(perc, time) {\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n\n          i += 1;\n        }\n\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n\n        return pt;\n      },\n      vectorOnPath: function vectorOnPath(perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c;\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999;\n        }\n\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 0.001, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n\n        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function tangentOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent');\n      },\n      normalOnPath: function normalOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'normal');\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n  }\n\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n\n      return null;\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n\n      return currentValue;\n    };\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n\n  function initialize() {\n    addDecorator();\n  }\n\n  function SVGComposableEffect() {}\n\n  SVGComposableEffect.prototype = {\n    createMergeNode: function createMergeNode(resultId, ins) {\n      var feMerge = createNS('feMerge');\n      feMerge.setAttribute('result', resultId);\n      var feMergeNode;\n      var i;\n\n      for (i = 0; i < ins.length; i += 1) {\n        feMergeNode = createNS('feMergeNode');\n        feMergeNode.setAttribute('in', ins[i]);\n        feMerge.appendChild(feMergeNode);\n        feMerge.appendChild(feMergeNode);\n      }\n\n      return feMerge;\n    }\n  };\n\n  function SVGTintFilter(filter, filterManager, elem, id, source) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n    var feMerge = this.createMergeNode(id, [source, id + '_tint_1', id + '_tint_2']);\n    filter.appendChild(feMerge);\n  }\n\n  extendPrototype([SVGComposableEffect], SVGTintFilter);\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id);\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGStrokeEffect(fil, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path;\n    var groupPath;\n    var i;\n    var len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = createNS('g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = createNS('path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = createNS('mask');\n      var id = createElementID();\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = createNS('g');\n      g.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n\n      while (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i;\n    var len = this.paths.length;\n    var mask;\n    var path;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.paths[i].m !== -1) {\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\n        path = this.paths[i].p;\n\n        if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\n          path.setAttribute('d', mask.lastPath);\n        }\n\n        if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\n          var dasharrayValue;\n\n          if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n            var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var l = path.getTotalLength();\n            dasharrayValue = '0 0 0 ' + l * s + ' ';\n            var lineLength = l * (e - s);\n            var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n            var units = Math.floor(lineLength / segment);\n            var j;\n\n            for (j = 0; j < units; j += 1) {\n              dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';\n            }\n\n            dasharrayValue += '0 ' + l * 10 + ' 0 0';\n          } else {\n            dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n          }\n\n          path.setAttribute('stroke-dasharray', dasharrayValue);\n        }\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p._mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p._mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = createNS('feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    feComponentTransfer.setAttribute('result', id);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = createNS('feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = createNS('feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = createNS('feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n    filter.appendChild(feComponentTransfer);\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB);\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = createNS('feComponentTransfer'); // Red\n\n    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    } // Green\n\n\n    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    } // Blue\n\n\n    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    } // Alpha\n\n\n    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    } // RGB\n\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n    }\n\n    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\n      feComponentTransfer = createNS('feComponentTransfer');\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      feComponentTransfer.setAttribute('result', id);\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = createNS(type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos] = colorValue;\n      pos += 1;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var val;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\n        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\n        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\n        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\n        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\n        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager, elem, id, source) {\n    var filterSize = filterManager.container.globalData.renderConfig.filterSize;\n    filter.setAttribute('x', filterSize.x);\n    filter.setAttribute('y', filterSize.y);\n    filter.setAttribute('width', filterSize.width);\n    filter.setAttribute('height', filterSize.height);\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', id + '_drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = createNS('feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', id + '_drop_shadow_1');\n    feOffset.setAttribute('result', id + '_drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = createNS('feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', id + '_drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = createNS('feComposite');\n    feComposite.setAttribute('in', id + '_drop_shadow_3');\n    feComposite.setAttribute('in2', id + '_drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', id + '_drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = this.createMergeNode(id, [id + '_drop_shadow_4', source]);\n    filter.appendChild(feMerge); //\n  }\n\n  extendPrototype([SVGComposableEffect], SVGDropShadowEffect);\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p._mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p._mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n    }\n  };\n\n  var _svgMatteSymbols = [];\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = createNS('g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.findSymbol = function (mask) {\n    var i = 0;\n    var len = _svgMatteSymbols.length;\n\n    while (i < len) {\n      if (_svgMatteSymbols[i] === mask) {\n        return _svgMatteSymbols[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\n    var parentNode = mask.layerElement.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    var children = parentNode.children;\n    var i = 0;\n    var len = children.length;\n\n    while (i < len) {\n      if (children[i] === mask.layerElement) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    var nextChild;\n\n    if (i <= len - 2) {\n      nextChild = children[i + 1];\n    }\n\n    var useElem = createNS('use');\n    useElem.setAttribute('href', '#' + symbolId);\n\n    if (nextChild) {\n      parentNode.insertBefore(useElem, nextChild);\n    } else {\n      parentNode.appendChild(useElem);\n    }\n  };\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    if (!this.findSymbol(mask)) {\n      var symbolId = createElementID();\n      var masker = createNS('mask');\n      masker.setAttribute('id', mask.layerId);\n      masker.setAttribute('mask-type', 'alpha');\n\n      _svgMatteSymbols.push(mask);\n\n      var defs = elem.globalData.defs;\n      defs.appendChild(masker);\n      var symbol = createNS('symbol');\n      symbol.setAttribute('id', symbolId);\n      this.replaceInParent(mask, symbolId);\n      symbol.appendChild(mask.layerElement);\n      defs.appendChild(symbol);\n      var useElem = createNS('use');\n      useElem.setAttribute('href', '#' + symbolId);\n      masker.appendChild(useElem);\n      mask.data.hd = false;\n      mask.show();\n    }\n\n    elem.setMatte(mask.layerId);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var elements = this.elem.comp.elements;\n    var i = 0;\n    var len = elements.length;\n\n    while (i < len) {\n      if (elements[i] && elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGGaussianBlurEffect(filter, filterManager, elem, id) {\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '300%');\n    filter.setAttribute('height', '300%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('result', id);\n    filter.appendChild(feGaussianBlur);\n    this.feGaussianBlur = feGaussianBlur;\n  }\n\n  SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      // Empirical value, matching AE's blur appearance.\n      var kBlurrinessToSigma = 0.3;\n      var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma; // Dimensions mapping:\n      //\n      //   1 -> horizontal & vertical\n      //   2 -> horizontal only\n      //   3 -> vertical only\n      //\n\n      var dimensions = this.filterManager.effectElements[1].p.v;\n      var sigmaX = dimensions == 3 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      var sigmaY = dimensions == 2 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY); // Repeat edges mapping:\n      //\n      //   0 -> off -> duplicate\n      //   1 -> on  -> wrap\n\n      var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\n    }\n  };\n\n  registerRenderer('canvas', CanvasRenderer);\n  registerRenderer('html', HybridRenderer);\n  registerRenderer('svg', SVGRenderer); // Registering shape modifiers\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier); // Registering expression plugin\n\n  setExpressionsPlugin(Expressions);\n  initialize$1();\n  initialize(); // Registering svg effects\n\n  registerEffect(20, SVGTintFilter, true);\n  registerEffect(21, SVGFillFilter, true);\n  registerEffect(22, SVGStrokeEffect, false);\n  registerEffect(23, SVGTritoneFilter, true);\n  registerEffect(24, SVGProLevelsFilter, true);\n  registerEffect(25, SVGDropShadowEffect, true);\n  registerEffect(28, SVGMatte3Effect, false);\n  registerEffect(29, SVGGaussianBlurEffect, true);\n\n  return lottie;\n\n}));\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[296],{\n\n/***/ 11248:\n/***/ (function(module, exports, __webpack_require__) {\n\n(typeof navigator !== \"undefined\") && (function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n})(this, (function () { 'use strict';\n\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var locationHref = '';\n  var _useWebWorker = false;\n  var initialDefaultFrame = -999999;\n\n  var setWebWorker = function setWebWorker(flag) {\n    _useWebWorker = !!flag;\n  };\n\n  var getWebWorker = function getWebWorker() {\n    return _useWebWorker;\n  };\n\n  var setLocationHref = function setLocationHref(value) {\n    locationHref = value;\n  };\n\n  var getLocationHref = function getLocationHref() {\n    return locationHref;\n  };\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type);\n  }\n\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n\n  // import Howl from '../../3rd_party/howler';\n  var audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n\n    AudioController.prototype = {\n      addAudio: function addAudio(audio) {\n        this.audios.push(audio);\n      },\n      pause: function pause() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function resume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function setRate(rateValue) {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function createAudio(assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n\n        return {\n          isPlaying: false,\n          play: function play() {\n            this.isPlaying = true;\n          },\n          seek: function seek() {\n            this.isPlaying = false;\n          },\n          playing: function playing() {},\n          rate: function rate() {},\n          setVolume: function setVolume() {}\n        };\n      },\n      setAudioFactory: function setAudioFactory(audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function setVolume(value) {\n        this._volume = value;\n\n        this._updateVolume();\n      },\n      mute: function mute() {\n        this._isMuted = true;\n\n        this._updateVolume();\n      },\n      unmute: function unmute() {\n        this._isMuted = false;\n\n        this._updateVolume();\n      },\n      getVolume: function getVolume() {\n        return this._volume;\n      },\n      _updateVolume: function _updateVolume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n\n  var createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value;\n\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1;\n          break;\n\n        default:\n          value = 1.1;\n          break;\n      }\n\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n\n      return arr;\n    }\n\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len);\n      }\n\n      if (type === 'int16') {\n        return new Int16Array(len);\n      }\n\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len);\n      }\n\n      return createRegularArray(type, len);\n    }\n\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory;\n    }\n\n    return createRegularArray;\n  }();\n\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n\n  function _typeof$6(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$6 = function _typeof(obj) { return typeof obj; }; } else { _typeof$6 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$6(obj); }\n  var subframeEnabled = true;\n  var expressionsPlugin = null;\n  var idPrefix$1 = '';\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var _shouldRoundValues = false;\n  var bmPow = Math.pow;\n  var bmSqrt = Math.sqrt;\n  var bmFloor = Math.floor;\n  var bmMax = Math.max;\n  var bmMin = Math.min;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\n    var i;\n    var len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface$1() {\n    return {};\n  }\n\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = _typeof$6(val);\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i;\n      var len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag;\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value);\n    }\n\n    return value;\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = '0 0';\n    element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = 'visible';\n    element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = 'preserve-3d';\n    element.style.webkitTransformStyle = 'preserve-3d';\n    element.style.mozTransformStyle = 'preserve-3d';\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError';\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError';\n    this.nativeError = nativeError;\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type;\n    this.nativeError = nativeError;\n  }\n\n  var createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + '__lottie_element_' + _count;\n    };\n  }();\n\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n\n      default:\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n\n      default:\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  var setSubframeEnabled = function setSubframeEnabled(flag) {\n    subframeEnabled = !!flag;\n  };\n\n  var getSubframeEnabled = function getSubframeEnabled() {\n    return subframeEnabled;\n  };\n\n  var setExpressionsPlugin = function setExpressionsPlugin(value) {\n    expressionsPlugin = value;\n  };\n\n  var getExpressionsPlugin = function getExpressionsPlugin() {\n    return expressionsPlugin;\n  };\n\n  var setDefaultCurveSegments = function setDefaultCurveSegments(value) {\n    defaultCurveSegments = value;\n  };\n\n  var getDefaultCurveSegments = function getDefaultCurveSegments() {\n    return defaultCurveSegments;\n  };\n\n  var setIdPrefix = function setIdPrefix(value) {\n    idPrefix$1 = value;\n  };\n\n  var getIdPrefix = function getIdPrefix() {\n    return idPrefix$1;\n  };\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type);\n  }\n\n  function _typeof$5(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$5 = function _typeof(obj) { return typeof obj; }; } else { _typeof$5 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$5(obj); }\n\n  var dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function onmessage() {},\n      postMessage: function postMessage(path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function postMessage(data) {\n        workerProxy.onmessage({\n          data: data\n        });\n      }\n    };\n\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], {\n          type: 'text/javascript'\n        }); // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n\n      workerFn = fn;\n      return workerProxy;\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true;\n\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt;\n                  }\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets); // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n\n                i += 1;\n              }\n\n              return null;\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps);\n\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true;\n                  return comp.layers;\n                }\n\n                return JSON.parse(JSON.stringify(comp.layers));\n              }\n\n              return null;\n            }\n\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n\n              return null;\n            }\n\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no'\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: 'tr'\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {// data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type');\n\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response;\n                }\n\n                if (xhr.response && _typeof$5(xhr.response) === 'object') {\n                  return xhr.response;\n                }\n\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response);\n                }\n\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n\n                return null;\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest(); // set responseType after calling open or IE will break.\n\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json';\n                } catch (err) {} // eslint-disable-line no-empty\n\n\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n\n                try {\n                  xhr.open('GET', path, true);\n                } catch (error) {\n                  xhr.open('GET', fullPath + '/' + path, true);\n                }\n\n                xhr.send();\n              }\n\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.dataManager.completeData(data);\n\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation;\n\n            _workerSelf.dataManager.completeData(animation);\n\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success'\n            });\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          }\n        });\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data;\n          var id = data.id;\n          var process = processes[id];\n          processes[id] = null;\n\n          if (data.status === 'success') {\n            process.onComplete(data.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = 'processId_' + _counterId;\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError\n      };\n      return id;\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId\n      });\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation\n    };\n  }();\n\n  var ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'rgba(0,0,0,0)';\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = '';\n\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n\n          clearInterval(intervalId);\n        }\n\n        _count += 1;\n      }.bind(this), 50);\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS('image');\n\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener('load', this._imageLoaded, false);\n      }\n\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag('img');\n      img.crossOrigin = 'anonymous';\n      img.addEventListener('load', this._imageLoaded, false);\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data\n      };\n      var path = getAssetsPath(data, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob.img = footageData;\n\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob.img = {};\n\n        this._footageLoaded();\n      }.bind(this));\n      return ob;\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n\n        i += 1;\n      }\n\n      return null;\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = '';\n      this.path = '';\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n\n  function BaseEvent() {}\n\n  BaseEvent.prototype = {\n    triggerEvent: function triggerEvent(eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function addEventListener(eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n\n      this._cbs[eventName].push(callback);\n\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function removeEventListener(eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n\n            i -= 1;\n            len -= 1;\n          }\n\n          i += 1;\n        }\n\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n\n  var markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n');\n      var keys = {};\n      var line;\n      var keysCount = 0;\n\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':');\n\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n\n      if (keysCount === 0) {\n        throw new Error();\n      }\n\n      return keys;\n    }\n\n    return function (_markers) {\n      var markers = [];\n\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n\n        markers.push(markerData);\n      }\n\n      return markers;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0;\n        var len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var renderers = {};\n\n  var registerRenderer = function registerRenderer(key, value) {\n    renderers[key] = value;\n  };\n\n  function getRenderer(key) {\n    return renderers[key];\n  }\n\n  function _typeof$4(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$4(obj); }\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0);\n  };\n\n  extendPrototype([BaseEvent], AnimationItem);\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = 'svg';\n\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n\n    var RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed');\n  };\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation);\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (_typeof$4(animationData) !== 'object') {\n        animationData = JSON.parse(animationData);\n      }\n    }\n\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== 'false';\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    this.setParams(params);\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data.layers;\n    var j;\n    var jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data;\n    var expressionsPlugin = getExpressionsPlugin();\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger('data_failed');\n    }.bind(this));\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images');\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n\n    try {\n      this.animationData = animData;\n\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n\n      this.renderer.configAnimation(animData);\n\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1000;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger('config_ready');\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin = getExpressionsPlugin();\n\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n    this.trigger('drawnFrame');\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger('_pause');\n      this.audioController.resume();\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger('_play');\n      this._idle = true;\n      this.trigger('_idle');\n      this.audioController.pause();\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name);\n    }\n\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger('loopComplete');\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger('loopComplete');\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger('complete');\n    }\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0.001 + offset);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n\n    if (_typeof$4(arr[0]) === 'object') {\n      var i;\n      var len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n\n    return false;\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name !== name || !this.renderer) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.renderer = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.setVolume(val);\n  };\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.mute();\n  };\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.unmute();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index);\n    } catch (error) {// TODO: decide how to handle catch case\n    }\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name, this.drawnFrameEvent);\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n\n      return animations;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));\n      var i;\n      var lenAnims = animElements.length;\n\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerText = '';\n        var div = createTag('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true;\n    }\n\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n\n    function setVolume(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation);\n      }\n    }\n\n    function mute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n\n    function unmute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize; // moduleOb.start = start;\n\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n\n  /* eslint-disable */\n  var BezierFactory = function () {\n    /**\r\n       * BezierEasing - use bezier curve for transition easing function\r\n       * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n       *\r\n       * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n       * Usage:\r\n       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n       * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n       *\r\n       */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === 'function';\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n       * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n       */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n           */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n\n        if (initialSlope === 0.0) {\n          return guessForT;\n        }\n\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob;\n  }();\n\n  var pooling = function () {\n    function _double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n\n    return {\n      \"double\": _double\n    };\n  }();\n\n  var poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement: newElement,\n        release: release\n      };\n\n      function newElement() {\n        var element;\n\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n\n        return element;\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling[\"double\"](pool);\n          _maxLength *= 2;\n        }\n\n        if (_release) {\n          _release(element);\n        }\n\n        pool[_length] = element;\n        _length += 1;\n      }\n\n      return ob;\n    };\n  }();\n\n  var bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments())\n      };\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  var segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n\n      element.lengths.length = 0;\n    }\n\n    return poolFactory(8, create, release);\n  }();\n\n  function bezFunction() {\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.001 && det1 < 0.001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\n\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n\n        return storedData[bezierName];\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n\n          flag = false;\n        }\n      }\n\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8);\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0t0 = t0 * t0 * t0; //\n\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0t1 = t0 * t0 * t1; //\n\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1t1 = t0 * t1 * t1; //\n\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1t1 = t1 * t1 * t1;\n\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints;\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  var PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var mathAbs = Math.abs;\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length);\n      }\n\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1;\n      var flag = true;\n      var keyData;\n      var nextKeyData;\n      var keyframeMetadata;\n\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n\n          iterationIndex = 0;\n          break;\n        }\n\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n\n      keyframeMetadata = this.keyframesMetadata[i] || {};\n      var k;\n      var kLen;\n      var perc;\n      var jLen;\n      var j;\n      var fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n\n        var bezierData = keyframeMetadata.bezierData;\n\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          } // caching._lastKeyframeIndex = -1;\n\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyframeMetadata.__fnct = fnc;\n          }\n\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n\n              break;\n            }\n\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX;\n        var outY;\n        var inX;\n        var inY;\n        var keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = [];\n                  }\n\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyframeMetadata.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i];\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.keyframeMetadata = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct;\n                }\n\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n\n            if (this.propType === 'multidimensional') {\n              newValue[i] = keyValue;\n            } else {\n              newValue = keyValue;\n            }\n          }\n        }\n      }\n\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    } // based on @Toji's https://github.com/toji/gl-matrix/\n\n\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0];\n      var ay = a[1];\n      var az = a[2];\n      var aw = a[3];\n      var bx = b[0];\n      var by = b[1];\n      var bz = b[2];\n      var bw = b[3];\n      var omega;\n      var cosom;\n      var sinom;\n      var scale0;\n      var scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n      if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n      }\n\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function setVValue(val) {\n      var multipliedValue;\n\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult;\n\n        if (mathAbs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0;\n        var len = this.v.length;\n\n        while (i < len) {\n          multipliedValue = val[i] * this.mult;\n\n          if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n\n          i += 1;\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var i;\n      var len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i;\n      var len = data.k.length;\n      this.v = createTypedArray('float32', len);\n      this.pv = createTypedArray('float32', len);\n      this.vel = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult;\n        this.pv[i] = data.k[i];\n      }\n\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      var i;\n      var len = data.k.length;\n      var s;\n      var e;\n      var to;\n      var ti;\n\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s;\n          e = data.k[i + 1].s;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data.k[i].to = null;\n              data.k[i].ti = null;\n            }\n          }\n        }\n      }\n\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.data = data;\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data.k[0].s.length;\n      this.v = createTypedArray('float32', arrLen);\n      this.pv = createTypedArray('float32', arrLen);\n\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray('float32', arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p;\n\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n\n      return p;\n    }\n\n    var ob = {\n      getProp: getProp\n    };\n    return ob;\n  }();\n\n  function DynamicPropertyContainer() {}\n\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function iterateDynamicProperties() {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n\n  var pointPool = function () {\n    function create() {\n      return createTypedArray('float32', 2);\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n\n      default:\n        arr = [];\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n\n    return newPath;\n  };\n\n  var shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === undefined ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n\n      return cloned;\n    }\n\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  var shapeCollectionPool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling[\"double\"](pool);\n        _maxLength *= 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        /* if(kf[kf.length - 1].s){\r\n                  keyPropS = kf[kf.length - 1].s[0];\r\n              }else{\r\n                  keyPropS = kf[kf.length - 2].e[0];\r\n              } */\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching); /// /\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i;\n      var len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n\n      var i;\n      var len = this.effectsSequence.length;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function convertEllToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n\n          var _cw = this.d !== 3;\n\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function convertStarToPath() {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          /* this.v.v.length = numPts;\r\n                  this.v.i.length = numPts;\r\n                  this.v.o.length = numPts; */\n\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            /* this.v.v[i] = [x,y];\r\n                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                      this.v._length = numPts; */\n\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function convertPolygonToPath() {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function convertRectToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n\n    function getShapeProp(elem, data, type) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n  var Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2; // }\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      /* matrix order (canvas compatible):\r\n           * ace\r\n           * bdf\r\n           * 001\r\n           */\n\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function equals(matr) {\n      var i = 0;\n\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n\n        i += 1;\n      }\n\n      return true;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n\n      return matr;\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /* return {\r\n           x: x * me.a + y * me.c + me.e,\r\n           y: x * me.b + y * me.d + me.f\r\n           }; */\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6);\n\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n\n      return arr;\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr;\n\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n\n      return arr;\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var i = 0;\n      var props = this.props;\n      var cssValue = 'matrix3d(';\n      var v = 10000;\n\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? ')' : ',';\n        i += 1;\n      }\n\n      return cssValue;\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000;\n\n      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n\n      return val;\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var props = this.props;\n\n      var _a = roundMatrixProperty(props[0]);\n\n      var _b = roundMatrixProperty(props[1]);\n\n      var _c = roundMatrixProperty(props[4]);\n\n      var _d = roundMatrixProperty(props[5]);\n\n      var _e = roundMatrixProperty(props[12]);\n\n      var _f = roundMatrixProperty(props[13]);\n\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray('float32', 16);\n      this.reset();\n    };\n  }();\n\n  function _typeof$3(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$3 = function _typeof(obj) { return typeof obj; }; } else { _typeof$3 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$3(obj); }\n  var lottie = {};\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200);\n          break;\n\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50);\n          break;\n\n        case 'low':\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value);\n    }\n\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin);\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory;\n\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory;\n\n      case 'matrix':\n        return Matrix;\n\n      default:\n        return null;\n    }\n  }\n\n  lottie.play = animationManager.play;\n  lottie.pause = animationManager.pause;\n  lottie.setLocationHref = setLocation;\n  lottie.togglePause = animationManager.togglePause;\n  lottie.setSpeed = animationManager.setSpeed;\n  lottie.setDirection = animationManager.setDirection;\n  lottie.stop = animationManager.stop;\n  lottie.searchAnimations = searchAnimations;\n  lottie.registerAnimation = animationManager.registerAnimation;\n  lottie.loadAnimation = loadAnimation;\n  lottie.setSubframeRendering = setSubframeRendering;\n  lottie.resize = animationManager.resize; // lottie.start = start;\n\n  lottie.goToAndStop = animationManager.goToAndStop;\n  lottie.destroy = animationManager.destroy;\n  lottie.setQuality = setQuality;\n  lottie.inBrowser = inBrowser;\n  lottie.installPlugin = installPlugin;\n  lottie.freeze = animationManager.freeze;\n  lottie.unfreeze = animationManager.unfreeze;\n  lottie.setVolume = animationManager.setVolume;\n  lottie.mute = animationManager.mute;\n  lottie.unmute = animationManager.unmute;\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie.useWebWorker = setWebWorker;\n  lottie.setIDPrefix = setPrefix;\n  lottie.__getFactory = getFactory;\n  lottie.version = '5.9.4';\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1]);\n      }\n    }\n\n    return null;\n  }\n\n  var queryString = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : ''; // eslint-disable-line no-useless-escape\n\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100); // this adds bodymovin to the window object for backwards compatibility\n\n  try {\n    if (!(( false ? 0 : _typeof$3(exports)) === 'object' && \"object\" !== 'undefined') && !( true && __webpack_require__.amdO) // eslint-disable-line no-undef\n    ) {}\n  } catch (err) {//\n  }\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh);\n      var shapeData = {\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n\n  function TrimModifier() {}\n\n  extendPrototype([ShapeModifier], TrimModifier);\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n\n    pathsData.length = 0;\n    return pathsData;\n  };\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      s = Math.round(s * 10000) * 0.0001;\n      e = Math.round(e * 10000) * 0.0001;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes(); // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos);\n    }\n\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  function PuckerAndBloatModifier() {}\n\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n\n    return clonedPath;\n  };\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  var TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n\n      this.iterateDynamicProperties();\n\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n\n    function autoOrient() {//\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = 'transform';\n      this.data = data;\n      this.v = new Matrix(); // Precalculated matrix with non animated properties\n\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n\n        if (data.or.k[0].ti) {\n          var i;\n          var len = data.or.k.length;\n\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null;\n            data.or.k[i].ti = null;\n          }\n        }\n\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); // sh Indicates it needs to be capped between -180 and 180\n\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n\n      this.a = PropertyFactory.getProp(elem, data.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this); // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n\n      this._isDirty = true;\n\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n\n    return {\n      getTransformProperty: getTransformProperty\n    };\n  }();\n\n  function RepeaterModifier() {}\n\n  extendPrototype([ShapeModifier], RepeaterModifier);\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n\n    while (pos > 0) {\n      pos -= 1; // this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: 'Transform',\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: 'tr'\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n\n      cont = 0;\n      var renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n\n        cont += 1;\n      }\n\n      this._currentCopies = copies; /// /\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n\n    return hasReloaded;\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  function RoundCornersModifier() {}\n\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /* clonedPath.v[index] = currentV;\r\n                  clonedPath.o[index] = currentO;\r\n                  clonedPath.i[index] = currentI; */\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return clonedPath;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\n    var fWeight = 'normal';\n    var fStyle = 'normal';\n    var len = styles.length;\n    var styleName;\n\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n          break;\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = []; // Hindi characters\n\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff'];\n    var zeroWidthJoiner = [65039, 8205];\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',');\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n\n      return enabledFamilies.join(',');\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span'); // Node is invisible to screen readers.\n\n      parentNode.setAttribute('aria-hidden', true);\n      parentNode.style.fontFamily = family;\n      var node = createTag('span'); // Characters that vary significantly among different fonts\n\n      node.innerText = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas';\n      var helper;\n      var fontProps = getFontProperties(fontData);\n\n      if (engine === 'svg') {\n        var tHelper = createNS('text');\n        tHelper.style.fontSize = '100px'; // tHelper.style.fontFamily = fontData.fFamily;\n\n        tHelper.setAttribute('font-family', fontData.fFamily);\n        tHelper.setAttribute('font-style', fontProps.style);\n        tHelper.setAttribute('font-weight', fontProps.weight);\n        tHelper.textContent = '1';\n\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit';\n          tHelper.setAttribute('class', fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d');\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text;\n          return helper.getComputedTextLength();\n        }\n\n        return helper.measureText(text).width;\n      }\n\n      return {\n        measureText: measure\n      };\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(function (data) {\n          data.helper = createHelper(data);\n          data.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style');\n            s.setAttribute('f-forigin', fontArr[i].fOrigin);\n            s.setAttribute('f-origin', fontArr[i].origin);\n            s.setAttribute('f-family', fontArr[i].fFamily);\n            s.type = 'text/css';\n            s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link');\n            l.setAttribute('f-forigin', fontArr[i].fOrigin);\n            l.setAttribute('f-origin', fontArr[i].origin);\n            l.type = 'text/css';\n            l.rel = 'stylesheet';\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link');\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin);\n            sc.setAttribute('f-origin', fontArr[i].origin);\n            sc.setAttribute('rel', 'stylesheet');\n            sc.setAttribute('href', fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(_char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n\n      if ((typeof _char === 'string' && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn // eslint-disable-line no-console\n      && !this._warned) {\n        this._warned = true;\n        console.warn('Missing character from exported characters list: ', _char, style, font); // eslint-disable-line no-console\n      }\n\n      return emptyChar;\n    }\n\n    function measureText(_char2, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n\n      var index = _char2.charCodeAt(0);\n\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper;\n\n        if (_char2 === ' ') {\n          var doubleSize = tHelper.measureText('|' + _char2 + '|');\n          var singleSize = tHelper.measureText('||');\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index + 1] = tHelper.measureText(_char2) / 100;\n        }\n      }\n\n      return fontData.cache[index + 1] * size;\n    }\n\n    function getFontByName(name) {\n      var i = 0;\n      var len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return this.fonts[0];\n    }\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum) !== -1;\n    }\n\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1];\n      }\n\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\n    }\n\n    function isCombinedCharacter(_char3) {\n      return combinedCharacters.indexOf(_char3) !== -1;\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function initRenderable() {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false; // layer's display state\n\n      this.hidden = false; // If layer's transparency equals 0, it can be hidden\n\n      this.isTransparent = false; // list of animated components\n\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function addRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function removeRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function prepareRenderableFrame(num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function checkTransparency() {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       *\r\n       */\n    checkLayerLimits: function checkLayerLimits(num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function renderRenderable() {\n      var i;\n      var len = this.renderableComponents.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\r\n          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n\n    },\n    sourceRectAtTime: function sourceRectAtTime() {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function getLayerSize() {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function get() {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n\n        return this._mask.op.v * 100;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n\n      var i;\n      var len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function get() {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n\n        var value = '';\n\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s;\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e;\n        } else {\n          value = property.keyframes[pos - 2].s;\n        }\n\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value); // eslint-disable-line no-new-wrappers\n\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n        valueProp.value = type === 'unidimensional' ? value[0] : value;\n        return valueProp;\n      };\n\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, 'unidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        val = property.v * mult;\n\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, 'unidimensional');\n        }\n\n        return expressionValue;\n      };\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var len = property.data && property.data.l || property.pv.length;\n      var expressionValue = createTypedArray('float32', len);\n      var arrValue = createTypedArray('float32', len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, 'multidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n\n        return expressionValue;\n      };\n    } // TODO: try to avoid using this getter\n\n\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      }\n\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property);\n      }\n\n      return MultidimensionalPropertyInterface(property);\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale;\n\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation;\n\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation;\n\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation;\n\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position;\n\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition;\n\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition;\n\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition;\n\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n\n      var _px;\n\n      var _py;\n\n      var _pz;\n\n      var _transformFactory;\n\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform.px);\n        _py = ExpressionPropertyInterface(transform.py);\n\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz);\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function get() {\n          if (transform.p) {\n            return _transformFactory();\n          }\n\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix();\n\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);\n\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n\n      return toWorldMat;\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n\n    return function (elem) {\n      var transformInterface;\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface;\n\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect;\n\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface;\n\n          default:\n            return null;\n        }\n      }\n\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function get() {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function get() {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function get() {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function get() {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return parentPropertyGroup(val - 1);\n      };\n    };\n  }();\n\n  var PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return propertyGroup(val - 1);\n      }\n\n      return _propertyGroup;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i;\n        var len = elem.effectsManager.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n\n        var effects = elem.data.ef || [];\n\n        var groupInterface = function groupInterface(name) {\n          i = 0;\n          len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n\n          return null;\n        };\n\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function get() {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n\n      return null;\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef;\n        var i = 0;\n        var len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            }\n\n            return effectElements[i]();\n          }\n\n          i += 1;\n        }\n\n        throw new Error();\n      }\n\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n\n      var effectElements = [];\n      var i;\n      var len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function get() {\n            return data.np;\n          }\n        },\n        _name: {\n          value: data.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return expressionProperty();\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup));\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0;\n        var len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return null; // return {active:false};\n      }\n\n      Object.defineProperty(_thisLayerFunction, '_name', {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n\n      function interfaceFunction(val) {\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n          return interfaceFunction.path;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        shape: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n\n  var ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tr') {// arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup));\n        }\n      }\n\n      return arr;\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        }\n\n        return null;\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content;\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function get() {\n          return shape.nm;\n        }\n      }); // interfaceFunction.content = interfaceFunction;\n\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint;\n        }\n\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function get() {\n            return 'a';\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n\n      return interfaceFunction;\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p)\n        });\n      }\n\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function get() {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));\n      return interfaceFunction;\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end;\n        }\n\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint;\n        }\n\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale;\n        }\n\n        if (shape.sk && shape.sk.ix === value || value === 'Skew') {\n          return interfaceFunction.skew;\n        }\n\n        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));\n      }\n\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = 'tr';\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius;\n        }\n\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius;\n        }\n\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies;\n        }\n\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value;\n\n          if (value === 0) {\n            return propertyGroup;\n          }\n\n          return interfaces[value - 1];\n        }\n\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = 'Contents';\n      return _interfaceFunction;\n    };\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue;\n\n      var _sourceText;\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function get() {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue); // eslint-disable-line no-new-wrappers\n            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue || new String(stringValue); // eslint-disable-line no-new-wrappers\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  var getBlendMode = function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity'\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || '';\n    };\n  }();\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, this);\n          break;\n        // case 6:\n\n        default:\n          eff = new NoValueEffect(effects[i], element, this);\n          break;\n      }\n\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function checkMasks() {\n      if (!this.data.hasMask) {\n        return false;\n      }\n\n      var i = 0;\n      var len = this.data.masksProperties.length;\n\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    initExpressions: function initExpressions() {\n      this.layerInterface = LayerExpressionInterface(this);\n\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function setBlendMode() {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style['mix-blend-mode'] = blendModeValue;\n    },\n    initBaseData: function initBaseData(data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID(); // Stretch factor for old animations missing this property.\n\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      } // effects manager\n\n\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function getType() {\n      return this.type;\n    },\n    sourceRectAtTime: function sourceRectAtTime() {}\n  };\n\n  /**\r\n   * @file\r\n   * Handles element's layer frame update.\r\n   * Checks layer in point and out point\r\n   *\r\n   */\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       */\n    initFrame: function initFrame() {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false; // list of animated properties\n\n      this.dynamicProperties = []; // If layer has been modified in current tick this will be true\n\n      this._mdf = false;\n    },\n\n    /**\r\n       * @function\r\n       * Calculates all dynamic values\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       * @param {boolean} isVisible\r\n       * if layers is currently in range\r\n       *\r\n       */\n    prepareProperties: function prepareProperties(num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n\n  function _typeof$2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$2(obj); }\n\n  var FootageInterface = function () {\n    var outlineInterfaceFactory = function outlineInterfaceFactory(elem) {\n      var currentPropertyName = '';\n      var currentProperty = elem.getFootageData();\n\n      function init() {\n        currentPropertyName = '';\n        currentProperty = elem.getFootageData();\n        return searchProperty;\n      }\n\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value;\n          currentProperty = currentProperty[value];\n\n          if (_typeof$2(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        var propertyNameIndex = value.indexOf(currentPropertyName);\n\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index];\n\n          if (_typeof$2(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        return '';\n      }\n\n      return init;\n    };\n\n    var dataInterfaceFactory = function dataInterfaceFactory(elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface();\n        }\n\n        return null;\n      }\n\n      interfaceFunction._name = 'Outline';\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);\n      return interfaceFunction;\n    };\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface;\n        }\n\n        return null;\n      }\n\n      _interfaceFunction._name = 'Data';\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem);\n      return _interfaceFunction;\n    };\n  }();\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.footageData = globalData.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data, globalData, comp);\n  }\n\n  FootageElement.prototype.prepareFrame = function () {};\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  FootageElement.prototype.renderFrame = function () {};\n\n  FootageElement.prototype.destroy = function () {};\n\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this);\n  };\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initBaseData(data, globalData, comp);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n\n  AudioElement.prototype.show = function () {// this.audio.play()\n  };\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  AudioElement.prototype.destroy = function () {};\n\n  AudioElement.prototype.sourceRectAtTime = function () {};\n\n  AudioElement.prototype.initExpressions = function () {};\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 3:\n        return this.createNull(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 6:\n        return this.createAudio(layer);\n\n      case 13:\n        return this.createCamera(layer);\n\n      case 15:\n        return this.createFootage(layer);\n\n      default:\n        return this.createNull(layer);\n    }\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n\n    if (path.length === 0) {\n      return element;\n    }\n\n    return element.getElementByPath(path);\n  };\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function initTransform() {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      } // TODO: check TYPE 11: Guided elements\n\n\n      if (this.data.ty !== 11) {// this.createElements();\n      }\n    },\n    renderTransform: function renderTransform() {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length; // Checking if any of the transformation matrices in the hierarchy chain has changed.\n\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function globalToLocal(pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n\n      var i;\n      var len = transforms.length;\n      var ptNew;\n\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = '';\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = 'clipPath';\n    var maskRef = 'clip-path';\n\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w || 0);\n        rect.setAttribute('height', this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = createNS('path');\n\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: ''\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        path.setAttribute('clip-rule', 'nonzero');\n        var filterID;\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask';\n          maskRef = 'mask';\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS('filter');\n          expansor.setAttribute('id', filterID);\n          feMorph = createNS('feMorphology');\n          feMorph.setAttribute('operator', 'erode');\n          feMorph.setAttribute('in', 'SourceGraphic');\n          feMorph.setAttribute('radius', '0');\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        } else {\n          feMorph = null;\n          x = null;\n        } // TODO move this to a factory or to a constructor\n\n\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0\n        };\n\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length;\n          var g = createNS('g');\n\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n\n          var mask = createNS('mask');\n          mask.setAttribute('mask-type', 'alpha');\n          mask.setAttribute('id', layerId + '_' + count);\n          mask.appendChild(path);\n          defs.appendChild(mask);\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')');\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        } // TODO move this to a factory or to a constructor\n\n\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId);\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')');\n      defs.appendChild(this.maskElement);\n    }\n\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\n    } // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    } // pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = '';\n\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n\n        viewData.elem.setAttribute('d', pathShapeValue);\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter');\n      fil.setAttribute('id', filId);\n\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox');\n        fil.setAttribute('x', '0%');\n        fil.setAttribute('y', '0%');\n        fil.setAttribute('width', '100%');\n        fil.setAttribute('height', '100%');\n      }\n\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    return ob;\n  }();\n\n  var registeredEffects = {};\n  var idPrefix = 'filter_result_';\n\n  function SVGEffects(elem) {\n    var i;\n    var source = 'SourceGraphic';\n    var len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem.data.ef[i].ty;\n\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source);\n        source = idPrefix + count;\n\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  function registerEffect(id, effect, countsAsEffect) {\n    registeredEffects[id] = {\n      effect: effect,\n      countsAsEffect: countsAsEffect\n    };\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function initRendererElement() {\n      this.layerElement = createNS('g');\n    },\n    createContainerElements: function createContainerElements() {\n      this.matteElement = createNS('g');\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null; // If this layer acts as a mask for the following layer\n\n      var filId;\n      var fil;\n      var gg;\n\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          // eslint-disable-line eqeqeq\n          var masker = createNS('mask');\n          masker.setAttribute('id', this.layerId);\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha'); // eslint-disable-line eqeqeq\n\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker); // This is only for IE and Edge when mask if of type alpha\n\n          if (!featureSupport.maskType && this.data.td == 1) {\n            // eslint-disable-line eqeqeq\n            masker.setAttribute('mask-type', 'luminance');\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          }\n        } else if (this.data.td == 2) {\n          // eslint-disable-line eqeqeq\n          var maskGroup = createNS('mask');\n          maskGroup.setAttribute('id', this.layerId);\n          maskGroup.setAttribute('mask-type', 'alpha');\n          var maskGrouper = createNS('g');\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId); /// /\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n\n          /* var feColorMatrix = createNS('feColorMatrix');\r\n                  feColorMatrix.setAttribute('type', 'matrix');\r\n                  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                  feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                  fil.appendChild(feColorMatrix); */\n          /// /\n\n          var feCTr = createNS('feComponentTransfer');\n          feCTr.setAttribute('in', 'SourceGraphic');\n          fil.appendChild(feCTr);\n          var feFunc = createNS('feFuncA');\n          feFunc.setAttribute('type', 'table');\n          feFunc.setAttribute('tableValues', '1.0 0.0');\n          feCTr.appendChild(feFunc); /// /\n\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS('rect');\n          alphaRect.setAttribute('width', this.comp.data.w);\n          alphaRect.setAttribute('height', this.comp.data.h);\n          alphaRect.setAttribute('x', '0');\n          alphaRect.setAttribute('y', '0');\n          alphaRect.setAttribute('fill', '#ffffff');\n          alphaRect.setAttribute('opacity', '0');\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance');\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      } // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n\n\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath');\n        var pt = createNS('path');\n        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n        var clipId = createElementID();\n        cp.setAttribute('id', clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g');\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n        }\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function destroyBaseElement() {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function getBaseElement() {\n      if (this.data.hd) {\n        return null;\n      }\n\n      return this.baseElement;\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function setMatte(id) {\n      if (!this.matteElement) {\n        return;\n      }\n\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n    }\n  };\n\n  /**\r\n   * @file\r\n   * Handles AE's layer parenting property.\r\n   *\r\n   */\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes hierarchy properties\r\n       *\r\n       */\n    initHierarchy: function initHierarchy() {\n      // element's parent list\n      this.hierarchy = []; // if element is parent of another layer _isParent will be true\n\n      this._isParent = false;\n      this.checkParenting();\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer's hierarchy.\r\n       * @param {array} hierarch\r\n       * layer's parent list\r\n       *\r\n       */\n    setHierarchy: function setHierarchy(hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer as parent.\r\n       *\r\n       */\n    setAsParent: function setAsParent() {\n      this._isParent = true;\n    },\n\n    /**\r\n       * @function\r\n       * Searches layer's parenting chain\r\n       *\r\n       */\n    checkParenting: function checkParenting() {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n\n  function RenderableDOMElement() {}\n\n  (function () {\n    var _prototype = {\n      initElement: function initElement(data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function hide() {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = 'none';\n          this.hidden = true;\n        }\n      },\n      show: function show() {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = 'block';\n          }\n\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function renderFrame() {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function renderInnerContent() {},\n      prepareFrame: function prepareFrame(num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function destroy() {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS('image');\n    this.innerElem.setAttribute('width', this.assetData.w + 'px');\n    this.innerElem.setAttribute('height', this.assetData.h + 'px');\n    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function addShapeToModifiers(data) {\n      var i;\n      var len = this.shapeModifiers.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    renderModifiers: function renderModifiers() {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n\n      var i;\n      var len = this.shapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame); // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function searchProcessedElement(elem) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n\n        i += 1;\n      }\n\n      return 0;\n    },\n    addProcessedElement: function addProcessedElement(elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n\n      while (i) {\n        i -= 1;\n\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function prepareFrame(num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n\n  var lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square'\n  };\n  var lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel'\n  };\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = '';\n    this.sh = shape;\n    this.lvl = level; // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n\n    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated\n\n    var i = 0;\n    var len = transformers.length;\n\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = '';\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS('path');\n    this.msElem = null;\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = '';\n    this._mdf = false;\n  };\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = '';\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray('float32', 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data.length || 0;\n    var prop;\n\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n\n    if (!this.k) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = this.k;\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n\n      if (this.renderer === 'svg') {\n        this.dashStr = '';\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray('uint8c', data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray('float32', cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n\n      if (diff > 0.01) {\n        return false;\n      }\n\n      i += 1;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val;\n\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n\n      if (this.o.length) {\n        len = this.prop.v.length;\n\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n\n      this._mdf = !forceRender;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')');\n    this.gf = gfill;\n    this.cst = stops;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask = createNS('mask');\n      var maskElement = createNS('path');\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute('id', maskId);\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)');\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')');\n\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml);\n        }\n      }\n\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS('g');\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n\n  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return '';\n    }\n\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n\n    for (i = 1; i < length; i += 1) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n\n    if (closed && length) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  var SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n\n    var _matrixHelper = new Matrix();\n\n    var ob = {\n      createRenderFunction: createRenderFunction\n    };\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill;\n\n        case 'gf':\n          return renderGradient;\n\n        case 'gs':\n          return renderGradientStroke;\n\n        case 'st':\n          return renderStroke;\n\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath;\n\n        case 'tr':\n          return renderContentTransform;\n\n        case 'no':\n          return renderNoop;\n\n        default:\n          return null;\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\n      }\n\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var props;\n      var iterations;\n      var k;\n\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (redraw) {\n          pathStringTransformed = '';\n\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n\n      var stops;\n      var i;\n      var len;\n      var stop;\n\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute('offset', cValues[i * 4] + '%');\n          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n        }\n      }\n\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%');\n          }\n\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n        }\n      }\n\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0]);\n          gfill.setAttribute('y2', pt2[1]);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0]);\n            itemData.of.setAttribute('y2', pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute('r', rad);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad);\n          }\n        }\n\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute('fx', x);\n          gfill.setAttribute('fy', y);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x);\n            itemData.of.setAttribute('fy', y);\n          }\n        } // gfill.setAttribute('fy','200');\n\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\n      }\n\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n      }\n\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n        }\n      }\n    }\n\n    return ob;\n  }();\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = []; // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  /*\r\n  This method searches for multiple shapes that affect a single element and one of them is animated\r\n  */\n\n\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')');\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb);\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n      pathElement.setAttribute('fill-opacity', '0');\n\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml);\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n\n      i += 1;\n    }\n\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data\n    });\n  };\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n\n    this.renderShape();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); // Adding M0 0 fixes same mask bug on all browsers\n\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\n        }\n\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s];\n      }\n    }\n\n    return obj;\n  };\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n\n    return this.kf;\n  };\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n\n    return this.data.d.k[this.keysIndex].s;\n  };\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n\n    while (i < len) {\n      charCode = text.charCodeAt(i);\n\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n      } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (secondCharCode >= 0xDC00 && secondCharCode <= 0xDFFF) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n            shouldCombine = false;\n          } else {\n            charactersArray.push(text.substr(i, 2));\n          }\n\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (charCode > 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true;\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n        shouldCombine = true;\n      } else {\n        charactersArray.push(text.charAt(i));\n      }\n\n      i += 1;\n    }\n\n    return charactersArray;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index = 0;\n    var val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var charCode;\n\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r'); // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = currentChar;\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== ' ' || based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.copyData({}, this.data.d.k[index].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index].s = dData;\n    this.recalculate(index);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  var TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem, data.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function getMult(ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0;\n        } else {\n          y1 = -this.ne.v / 100.0;\n        }\n\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0;\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0;\n        }\n\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /* ind += 0.5;\r\n                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2; // eslint-disable-line\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        } // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n\n\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n\n          if (smoothness === 0) {\n            smoothness = 0.00000001;\n          }\n\n          var threshold = 0.5 - smoothness * 0.5;\n\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n\n        return mult * this.a.v;\n      },\n      getValue: function getValue(newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr);\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp\n    };\n  }();\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask;\n\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n\n\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = '';\n    var letterP = this.defaultPropsArray;\n    var letterO; //\n\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n\n          isNewLine = false;\n        }\n      }\n\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    } //\n\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterM = '';\n        letterFc = '';\n        letterSw = '';\n        letterO = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n\n              default:\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an * 0.005;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true; // Force alignment only works with a single line for now\n\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0);\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 0.005;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 0.001 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n\n            default:\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n\n      default:\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {};\n\n  var emptyShapeData = {\n    shapes: []\n  };\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text');\n    }\n  };\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = '';\n\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = '';\n      } else {\n        currentTextContent += textArray[i];\n      }\n\n      i += 1;\n    }\n\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0];\n\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale;\n          shapeItem.s.k[1] = scale;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    this.layerElement.setAttribute('aria-label', documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = '';\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = 'start';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n\n        default:\n          justify = 'start';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i].span = tSpan;\n\n            if (usesGlyphs) {\n              var childSpan = createNS('g');\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0; // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n          xPos += trackingOffset;\n        }\n\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement; // t === 1 means the character has been replaced with an animated shaped\n\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data = emptyShapeData;\n\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n\n            glyphElement = new SVGShapeElement(data, this.globalData, this);\n          }\n\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement); // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute('transform', 'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')');\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');\n          }\n\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        } //\n\n      }\n\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m);\n            }\n\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o);\n            }\n\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw);\n            }\n\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc);\n            }\n\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([IImageElement], ISolidElement);\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect'); /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  NullElement.prototype.renderFrame = function () {};\n\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  NullElement.prototype.destroy = function () {};\n\n  NullElement.prototype.sourceRectAtTime = function () {};\n\n  NullElement.prototype.hide = function () {};\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase);\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w);\n      this.svgElement.setAttribute('height', animData.h);\n      this.svgElement.style.width = '100%';\n      this.svgElement.style.height = '100%';\n      this.svgElement.style.transform = 'translate3d(0,0,0)';\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width);\n    }\n\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height);\n    }\n\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id);\n    }\n\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\n    }\n\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.svgElement); // Mask animation\n\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS('clipPath');\n    var rect = createNS('rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = createElementID();\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')');\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } // console.log('-------');\n    // console.log('FRAME ',num);\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n\n    this.hide();\n  };\n  /* ICompElement.prototype.hide = function(){\r\n      if(!this.hidden){\r\n          this.hideElement();\r\n          var i,len = this.elements.length;\r\n          for( i = 0; i < len; i+=1 ){\r\n              if(this.elements[i]){\r\n                  this.elements[i].hide();\r\n              }\r\n          }\r\n      }\r\n  }; */\n\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i;\n    var len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    } // This iteration needs to be backwards because of how expressions connect between each other\n\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS('svg');\n    var ariaLabel = '';\n\n    if (config && config.title) {\n      var titleElement = createNS('title');\n      var titleId = createElementID();\n      titleElement.setAttribute('id', titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n\n    if (config && config.description) {\n      var descElement = createNS('desc');\n      var descId = createElementID();\n      descElement.setAttribute('id', descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += ' ' + descId;\n    }\n\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    var defs = createNS('defs');\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS('g');\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || '',\n      id: config && config.id || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '100%',\n        height: config && config.filterSize && config.filterSize.height || '100%',\n        x: config && config.filterSize && config.filterSize.x || '0%',\n        y: config && config.filterSize && config.filterSize.y || '0%'\n      },\n      width: config && config.width,\n      height: config && config.height\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = 'svg';\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer);\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i;\n    var len = 15;\n    this.savedOp = createTypedArray('float32', len);\n\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = len;\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray('float32', newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = newLength;\n  };\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function addTransformSequence(transforms) {\n      var i;\n      var len = transforms.length;\n      var key = '_';\n\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_';\n      }\n\n      var sequence = this.sequences[key];\n\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n\n      return sequence;\n    },\n    processSequence: function processSequence(sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n\n        i += 1;\n      }\n\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n\n      sequence._mdf = _mdf;\n    },\n    processSequences: function processSequences(isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function getNewKey() {\n      this.transform_key_count += 1;\n      return '_' + this.transform_key_count;\n    }\n  };\n\n  function CVEffects() {}\n\n  CVEffects.prototype.renderFrame = function () {};\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true;\n      }\n\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n\n    this.hasMasks = hasMasks;\n\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data;\n    ctx.beginPath();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data._length;\n\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function createElements() {},\n    initRendererElement: function initRendererElement() {},\n    createContainerElements: function createContainerElements() {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects(this);\n    },\n    createContent: function createContent() {},\n    setBlendMode: function setBlendMode() {\n      var globalData = this.globalData;\n\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function hideElement() {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function showElement() {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function renderFrame() {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bmFloor(elementData.c.v[0]) + ',' + bmFloor(elementData.c.v[1]) + ',' + bmFloor(elementData.c.v[2]) + ')';\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2];\n      styleElem.lj = lineJoinEnum[data.lj || 2];\n\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem[\"do\"] = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type; // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n\n      if (!((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n\n        if (type === 'st' || type === 'gs') {\n          ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\n          ctx.lineWidth = currentStyle.wi;\n          ctx.lineCap = currentStyle.lc;\n          ctx.lineJoin = currentStyle.lj;\n          ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\n        }\n\n        renderer.ctxOpacity(currentStyle.coOp);\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath();\n        }\n\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle[\"do\"];\n            }\n          }\n\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n\n          if (type === 'st' || type === 'gs') {\n            ctx.stroke();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.fill(currentStyle.r);\n        }\n\n        renderer.restore();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty === 'tm') {//\n      }\n    }\n\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: 'z'\n            });\n          }\n        }\n      }\n\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n\n        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\n      }\n\n      styleElem.grd = grd;\n    }\n\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem[\"do\"] = d.dashoffset[0];\n    }\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length; // this.tHelper.font = this.values.fValue;\n\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n\n        if (renderedLetter) {\n          this.globalData.renderer.save();\n          this.globalData.renderer.ctxTransform(renderedLetter.p);\n          this.globalData.renderer.ctxOpacity(renderedLetter.o);\n        }\n\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc;\n              ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            ctx.fillStyle = this.values.fill;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.fill(); /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            ctx.lineWidth = this.values.sWidth;\n          }\n\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            ctx.strokeStyle = this.values.stroke;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.stroke(); /// ctx.strokeText(letters[i].val,0,0);\n        }\n\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getAsset(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas');\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext('2d');\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n\n      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh); //\n  };\n\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]); // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    /* if(op === 1){\r\n          return;\r\n      } */\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n\n    this.contextData.cO *= op < 0 ? 0 : op;\n\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.reset();\n  };\n\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n\n    var props = this.contextData.cTr.props;\n\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n\n    var i;\n    var arr = this.contextData.saved[this.contextData.cArrPos];\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = 'source-over';\n    }\n\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i;\n    var arr = this.contextData.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas');\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = '100%';\n      containerStyle.height = '100%';\n      var origin = '0px 0px 0px';\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle['-webkit-transform'] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n\n    var elementRel;\n    var animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    /* var i, len = this.elements.length;\r\n      for(i=0;i<len;i+=1){\r\n          if(this.elements[i] && this.elements[i].data.ty === 0){\r\n              this.elements[i].resize(this.globalData.transformCanvas);\r\n          }\r\n      } */\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num; // console.log('--------');\n    // console.log('NEW: ',num);\n\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n    /* if(this.layers[pos].ty === 0){\r\n          element.resize(this.globalData.transformCanvas);\r\n      } */\n  };\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.layers = null;\n    this.elements = null;\n  };\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function HBaseElement() {}\n\n  HBaseElement.prototype = {\n    checkBlendMode: function checkBlendMode() {},\n    initRendererElement: function initRendererElement() {\n      this.baseElement = createTag(this.data.tg || 'div');\n\n      if (this.data.hasMask) {\n        this.svgElement = createNS('svg');\n        this.layerElement = createNS('g');\n        this.maskedElement = this.layerElement;\n        this.svgElement.appendChild(this.layerElement);\n        this.baseElement.appendChild(this.svgElement);\n      } else {\n        this.layerElement = this.baseElement;\n      }\n\n      styleDiv(this.baseElement);\n    },\n    createContainerElements: function createContainerElements() {\n      this.renderableEffectsManager = new CVEffects(this);\n      this.transformedElement = this.baseElement;\n      this.maskedElement = this.layerElement;\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};\n\n      if (this.finalTransform._matMdf) {\n        var matrixValue = this.finalTransform.mat.toCSS();\n        transformedElementStyle.transform = matrixValue;\n        transformedElementStyle.webkitTransform = matrixValue;\n      }\n\n      if (this.finalTransform._opMdf) {\n        transformedElementStyle.opacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderFrame: function renderFrame() {\n      // If it is exported as hidden (data.hd === true) no need to render\n      // If it is not visible no need to render\n      if (this.data.hd || this.hidden) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderElement();\n      this.renderInnerContent();\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.layerElement = null;\n      this.transformedElement = null;\n\n      if (this.matteElement) {\n        this.matteElement = null;\n      }\n\n      if (this.maskManager) {\n        this.maskManager.destroy();\n        this.maskManager = null;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n    },\n    addEffects: function addEffects() {},\n    setMatte: function setMatte() {}\n  };\n  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\n  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\n  HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\n\n  HSolidElement.prototype.createContent = function () {\n    var rect;\n\n    if (this.data.hasMask) {\n      rect = createNS('rect');\n      rect.setAttribute('width', this.data.sw);\n      rect.setAttribute('height', this.data.sh);\n      rect.setAttribute('fill', this.data.sc);\n      this.svgElement.setAttribute('width', this.data.sw);\n      this.svgElement.setAttribute('height', this.data.sh);\n    } else {\n      rect = createTag('div');\n      rect.style.width = this.data.sw + 'px';\n      rect.style.height = this.data.sh + 'px';\n      rect.style.backgroundColor = this.data.sc;\n    }\n\n    this.layerElement.appendChild(rect);\n  };\n\n  function HShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.shapesContainer = createNS('g');\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\n\n  HShapeElement.prototype.createContent = function () {\n    var cont;\n    this.baseElement.style.fontSize = 0;\n\n    if (this.data.hasMask) {\n      this.layerElement.appendChild(this.shapesContainer);\n      cont = this.svgElement;\n    } else {\n      cont = createNS('svg');\n      var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n      cont.setAttribute('width', size.w);\n      cont.setAttribute('height', size.h);\n      cont.appendChild(this.shapesContainer);\n      this.layerElement.appendChild(cont);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\n    this.filterUniqueShapes();\n    this.shapeCont = cont;\n  };\n\n  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {\n    var i;\n    var len = transformers.length;\n\n    for (i = 0; i < len; i += 1) {\n      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\n    }\n\n    return point;\n  };\n\n  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\n    var shape = item.sh.v;\n    var transformers = item.transformers;\n    var i;\n    var len = shape._length;\n    var vPoint;\n    var oPoint;\n    var nextIPoint;\n    var nextVPoint;\n\n    if (len <= 1) {\n      return;\n    }\n\n    for (i = 0; i < len - 1; i += 1) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n\n    if (shape.c) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n  };\n\n  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\n    var bounds = this.shapeBoundingBox;\n    boundingBox.x = bmMin(bounds.left, boundingBox.x);\n    boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);\n    boundingBox.y = bmMin(bounds.top, boundingBox.y);\n    boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);\n  };\n\n  HShapeElement.prototype.shapeBoundingBox = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n  HShapeElement.prototype.tempBoundingBox = {\n    x: 0,\n    xMax: 0,\n    y: 0,\n    yMax: 0,\n    width: 0,\n    height: 0\n  };\n\n  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\n    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\n\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\n      // eslint-disable-line no-plusplus\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      c = 3 * p1[i] - 3 * p0[i];\n      b |= 0; // eslint-disable-line no-bitwise\n\n      a |= 0; // eslint-disable-line no-bitwise\n\n      c |= 0; // eslint-disable-line no-bitwise\n\n      if (a === 0 && b === 0) {//\n      } else if (a === 0) {\n        t = -c / b;\n\n        if (t > 0 && t < 1) {\n          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\n        }\n      } else {\n        b2ac = b * b - 4 * c * a;\n\n        if (b2ac >= 0) {\n          t1 = (-b + bmSqrt(b2ac)) / (2 * a);\n          if (t1 > 0 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\n          t2 = (-b - bmSqrt(b2ac)) / (2 * a);\n          if (t2 > 0 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\n        }\n      }\n    }\n\n    this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);\n    this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);\n    this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);\n    this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);\n  };\n\n  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\n    return bmPow(1 - t, 3) * p0[i] + 3 * bmPow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bmPow(t, 2) * p2[i] + bmPow(t, 3) * p3[i];\n  };\n\n  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\n    var i;\n    var len = itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (itemsData[i] && itemsData[i].sh) {\n        this.calculateShapeBoundingBox(itemsData[i], boundingBox);\n      } else if (itemsData[i] && itemsData[i].it) {\n        this.calculateBoundingBox(itemsData[i].it, boundingBox);\n      }\n    }\n  };\n\n  HShapeElement.prototype.currentBoxContains = function (box) {\n    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\n  };\n\n  HShapeElement.prototype.renderInnerContent = function () {\n    this._renderShapeFrame();\n\n    if (!this.hidden && (this._isFirstFrame || this._mdf)) {\n      var tempBoundingBox = this.tempBoundingBox;\n      var max = 999999;\n      tempBoundingBox.x = max;\n      tempBoundingBox.xMax = -max;\n      tempBoundingBox.y = max;\n      tempBoundingBox.yMax = -max;\n      this.calculateBoundingBox(this.itemsData, tempBoundingBox);\n      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\n      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; // var tempBoundingBox = this.shapeCont.getBBox();\n\n      if (this.currentBoxContains(tempBoundingBox)) {\n        return;\n      }\n\n      var changed = false;\n\n      if (this.currentBBox.w !== tempBoundingBox.width) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.shapeCont.setAttribute('width', tempBoundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== tempBoundingBox.height) {\n        this.currentBBox.h = tempBoundingBox.height;\n        this.shapeCont.setAttribute('height', tempBoundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.currentBBox.h = tempBoundingBox.height;\n        this.currentBBox.x = tempBoundingBox.x;\n        this.currentBBox.y = tempBoundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        var shapeStyle = this.shapeCont.style;\n        var shapeTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        shapeStyle.transform = shapeTransform;\n        shapeStyle.webkitTransform = shapeTransform;\n      }\n    }\n  };\n\n  function HTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\n\n  HTextElement.prototype.createContent = function () {\n    this.isMasked = this.checkMasks();\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      this.svgElement.setAttribute('width', this.compW);\n      this.svgElement.setAttribute('height', this.compH);\n      var g = createNS('g');\n      this.maskedElement.appendChild(g);\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = this.layerElement;\n    }\n\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var innerElemStyle = this.innerElem.style;\n    var textColor = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n    innerElemStyle.fill = textColor;\n    innerElemStyle.color = textColor;\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.finalSize + 'px';\n      innerElemStyle.lineHeight = documentData.finalSize + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight;\n        var fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i;\n    var len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan;\n    var tParent;\n    var tCont;\n    var matrixHelper = this.mHelper;\n    var shapes;\n    var shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = createNS('path');\n          tSpan.setAttribute('stroke-linecap', lineCapEnum[1]);\n          tSpan.setAttribute('stroke-linejoin', lineJoinEnum[2]);\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = createTag('div');\n            tParent.style.lineHeight = 0;\n            tCont = createNS('svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else if (!this.isMasked) {\n        if (this.textSpans[cnt]) {\n          tParent = this.textSpans[cnt];\n          tSpan = this.textPaths[cnt];\n        } else {\n          tParent = createTag('span');\n          styleDiv(tParent);\n          tSpan = createTag('span');\n          styleDiv(tSpan);\n          tParent.appendChild(tSpan);\n        }\n      } else {\n        tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\n      } // tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes && shapeData.shapes.length) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            // document.body.appendChild is needed to get exact measure of shape\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            var tContStyle = tCont.style;\n            var tContTranslation = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            tContStyle.transform = tContTranslation;\n            tContStyle.webkitTransform = tContTranslation;\n            letters[i].yOffset = boundingBox.y - 1;\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n\n          tParent.appendChild(tCont);\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          var tStyle = tSpan.style;\n          var tSpanTranslation = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\n          tStyle.transform = tSpanTranslation;\n          tStyle.webkitTransform = tSpanTranslation;\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.renderInnerContent = function () {\n    var svgStyle;\n\n    if (this.data.singleShape) {\n      if (!this._isFirstFrame && !this.lettersChangedFlag) {\n        return;\n      }\n\n      if (this.isMasked && this.finalTransform._matMdf) {\n        // Todo Benchmark if using this is better than getBBox\n        this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n        svgStyle = this.svgElement.style;\n        var translation = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        svgStyle.transform = translation;\n        svgStyle.webkitTransform = translation;\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i;\n    var len;\n    var count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var textSpan;\n    var textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n      } else {\n        textSpan = this.textSpans[i];\n        textPath = this.textPaths[i];\n        renderedLetter = renderedLetters[count];\n        count += 1;\n\n        if (renderedLetter._mdf.m) {\n          if (!this.isMasked) {\n            textSpan.style.webkitTransform = renderedLetter.m;\n            textSpan.style.transform = renderedLetter.m;\n          } else {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n        } /// /textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n        textSpan.style.opacity = renderedLetter.o;\n\n        if (renderedLetter.sw && renderedLetter._mdf.sw) {\n          textPath.setAttribute('stroke-width', renderedLetter.sw);\n        }\n\n        if (renderedLetter.sc && renderedLetter._mdf.sc) {\n          textPath.setAttribute('stroke', renderedLetter.sc);\n        }\n\n        if (renderedLetter.fc && renderedLetter._mdf.fc) {\n          textPath.setAttribute('fill', renderedLetter.fc);\n          textPath.style.color = renderedLetter.fc;\n        }\n      }\n    }\n\n    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n      var boundingBox = this.innerElem.getBBox();\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.svgElement.setAttribute('width', boundingBox.width);\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.svgElement.setAttribute('height', boundingBox.height);\n      }\n\n      var margin = 1;\n\n      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n        this.currentBBox.w = boundingBox.width + margin * 2;\n        this.currentBBox.h = boundingBox.height + margin * 2;\n        this.currentBBox.x = boundingBox.x - margin;\n        this.currentBBox.y = boundingBox.y - margin;\n        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        svgStyle = this.svgElement.style;\n        var svgTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        svgStyle.transform = svgTransform;\n        svgStyle.webkitTransform = svgTransform;\n      }\n    }\n  };\n\n  function HCameraElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initHierarchy();\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i;\n      var len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\n    this.mat = new Matrix();\n    this._prevMat = new Matrix();\n    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\n\n    this.finalTransform = {\n      mProp: this\n    };\n  }\n\n  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i;\n    var len = this.comp.threeDElements.length;\n    var comp;\n    var perspectiveStyle;\n    var containerStyle;\n\n    for (i = 0; i < len; i += 1) {\n      // [perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n\n      if (comp.type === '3d') {\n        perspectiveStyle = comp.perspectiveElem.style;\n        containerStyle = comp.container.style;\n        var perspective = this.pe.v + 'px';\n        var origin = '0px 0px 0px';\n        var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n        perspectiveStyle.perspective = perspective;\n        perspectiveStyle.webkitPerspective = perspective;\n        containerStyle.transformOrigin = origin;\n        containerStyle.mozTransformOrigin = origin;\n        containerStyle.webkitTransformOrigin = origin;\n        perspectiveStyle.transform = matrix;\n        perspectiveStyle.webkitTransform = matrix;\n      }\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var _mdf = this._isFirstFrame;\n    var i;\n    var len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\n      }\n    }\n\n    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n      this.mat.reset();\n\n      if (this.hierarchy) {\n        len = this.hierarchy.length - 1;\n\n        for (i = len; i >= 0; i -= 1) {\n          var mTransf = this.hierarchy[i].finalTransform.mProp;\n          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\n          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\n          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\n          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\n          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\n        }\n      }\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector;\n\n        if (this.p) {\n          diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        } else {\n          diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\n        }\n\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); // var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(mRotationY).rotateX(-mRotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n      var hasMatrixChanged = !this._prevMat.equals(this.mat);\n\n      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\n        len = this.comp.threeDElements.length;\n        var comp;\n        var perspectiveStyle;\n        var containerStyle;\n\n        for (i = 0; i < len; i += 1) {\n          comp = this.comp.threeDElements[i];\n\n          if (comp.type === '3d') {\n            if (hasMatrixChanged) {\n              var matValue = this.mat.toCSS();\n              containerStyle = comp.container.style;\n              containerStyle.transform = matValue;\n              containerStyle.webkitTransform = matValue;\n            }\n\n            if (this.pe._mdf) {\n              perspectiveStyle = comp.perspectiveElem.style;\n              perspectiveStyle.perspective = this.pe.v + 'px';\n              perspectiveStyle.webkitPerspective = this.pe.v + 'px';\n            }\n          }\n        }\n\n        this.mat.clone(this._prevMat);\n      }\n    }\n\n    this._isFirstFrame = false;\n  };\n\n  HCameraElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  HCameraElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  function HImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\n\n  HImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      this.imageElem = createNS('image');\n      this.imageElem.setAttribute('width', this.assetData.w + 'px');\n      this.imageElem.setAttribute('height', this.assetData.h + 'px');\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      this.layerElement.appendChild(this.imageElem);\n      this.baseElement.setAttribute('width', this.assetData.w);\n      this.baseElement.setAttribute('height', this.assetData.h);\n    } else {\n      this.layerElement.appendChild(img);\n    }\n\n    img.crossOrigin = 'anonymous';\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.baseElement.setAttribute('id', this.data.ln);\n    }\n  };\n\n  function HybridRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([BaseRenderer], HybridRendererBase);\n  HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      if (this.threeDElements) {\n        this.addTo3dContainer(newDOMElement, pos);\n      } else {\n        var i = 0;\n        var nextDOMElement;\n        var nextLayer;\n        var tmpDOMElement;\n\n        while (i < pos) {\n          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n            nextLayer = this.elements[i];\n            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n            nextDOMElement = tmpDOMElement || nextDOMElement;\n          }\n\n          i += 1;\n        }\n\n        if (nextDOMElement) {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n          }\n        } else if (!layer.ddd || !this.supports3d) {\n          this.layerElement.appendChild(newDOMElement);\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRendererBase.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new SVGShapeElement(data, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextLottieElement(data, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRendererBase.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  HybridRendererBase.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  HybridRendererBase.prototype.createThreeDContainer = function (pos, type) {\n    var perspectiveElem = createTag('div');\n    var style;\n    var containerStyle;\n    styleDiv(perspectiveElem);\n    var container = createTag('div');\n    styleDiv(container);\n\n    if (type === '3d') {\n      style = perspectiveElem.style;\n      style.width = this.globalData.compSize.w + 'px';\n      style.height = this.globalData.compSize.h + 'px';\n      var center = '50% 50%';\n      style.webkitTransformOrigin = center;\n      style.mozTransformOrigin = center;\n      style.transformOrigin = center;\n      containerStyle = container.style;\n      var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n      containerStyle.transform = matrix;\n      containerStyle.webkitTransform = matrix;\n    }\n\n    perspectiveElem.appendChild(container); // this.resizerElem.appendChild(perspectiveElem);\n\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos,\n      type: type\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRendererBase.prototype.build3dContainers = function () {\n    var i;\n    var len = this.layers.length;\n    var lastThreeDContainerData;\n    var currentContainer = '';\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd && this.layers[i].ty !== 3) {\n        if (currentContainer !== '3d') {\n          currentContainer = '3d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '3d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        if (currentContainer !== '2d') {\n          currentContainer = '2d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '2d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      }\n    }\n\n    len = this.threeDElements.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\n    }\n  };\n\n  HybridRendererBase.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRendererBase.prototype.configAnimation = function (animData) {\n    var resizerElem = createTag('div');\n    var wrapper = this.animationItem.wrapper;\n    var style = resizerElem.style;\n    style.width = animData.w + 'px';\n    style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    style.transformStyle = 'flat';\n    style.mozTransformStyle = 'flat';\n    style.webkitTransformStyle = 'flat';\n\n    if (this.renderConfig.className) {\n      resizerElem.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    style.overflow = 'hidden';\n    var svg = createNS('svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = createNS('defs');\n    svg.appendChild(defs);\n    this.data = animData; // Mask animation\n\n    this.setupGlobalData(animData, svg);\n    this.globalData.defs = defs;\n    this.layers = animData.layers;\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      this.elements[i].destroy();\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRendererBase.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx;\n    var sy;\n    var tx;\n    var ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    var style = this.resizerElem.style;\n    style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n    style.transform = style.webkitTransform;\n  };\n\n  HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRendererBase.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRendererBase.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRendererBase.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i;\n      var len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        var style = this.threeDElements[i].perspectiveElem.style;\n        style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n        style.perspective = style.webkitPerspective;\n      }\n    }\n  };\n\n  HybridRendererBase.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    var floatingContainer = createTag('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function HCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = !data.hasMask;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement);\n  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\n\n  HCompElement.prototype.createContainerElements = function () {\n    this._createBaseContainerElements(); // divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\n\n\n    if (this.data.hasMask) {\n      this.svgElement.setAttribute('width', this.data.w);\n      this.svgElement.setAttribute('height', this.data.h);\n      this.transformedElement = this.baseElement;\n    } else {\n      this.transformedElement = this.layerElement;\n    }\n  };\n\n  HCompElement.prototype.addTo3dContainer = function (elem, pos) {\n    var j = 0;\n    var nextElement;\n\n    while (j < pos) {\n      if (this.elements[j] && this.elements[j].getBaseElement) {\n        nextElement = this.elements[j].getBaseElement();\n      }\n\n      j += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(elem, nextElement);\n    } else {\n      this.layerElement.appendChild(elem);\n    }\n  };\n\n  HCompElement.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([HybridRendererBase], HybridRenderer);\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n\n      function pushExpression() {\n        stackCount += 1;\n      }\n\n      function popExpression() {\n        stackCount -= 1;\n\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n\n        registers.length = 0;\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n\n    return ob;\n  }();\n\n  function _typeof$1(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$1(obj); }\n\n  /* eslint-disable */\n\n  /*\r\n   Copyright 2014 David Bau.\r\n\r\n   Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n\r\n   The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n\r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n   */\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng[\"double\"] = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      };\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = _typeof$1(obj),\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  }\n\n  ;\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath);\n  }\n\n  var propTypes = {\n    SHAPE: 'shape'\n  };\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var ExpressionManager = function () {\n    'use strict';\n\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n    var XMLHttpRequest = null;\n    var fetch = null;\n    var frames = null;\n    initialize$2(BMMath);\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\n    }\n\n    function $bm_neg(a) {\n      var tOfA = _typeof(a);\n\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a;\n      }\n\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n\n      if (a.propType) {\n        return a.v;\n      }\n\n      return -a;\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get;\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get;\n\n    function sum(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b, 10);\n        }\n\n        return a - b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b, 10);\n      }\n\n      return a % b;\n    }\n\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i;\n      var len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n\n      if (max === min) {\n        h = 0; // achromatic\n\n        s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n\n          default:\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r;\n      var g;\n      var b;\n\n      if (s === 0) {\n        r = l; // achromatic\n\n        b = l; // achromatic\n\n        g = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n\n      if (t <= tMin) {\n        return value1;\n      }\n\n      if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i;\n        var len = max.length;\n\n        if (!min) {\n          min = createTypedArray('float32', len);\n        }\n\n        var arr = createTypedArray('float32', len);\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform;\n      var $bm_transform;\n      var content;\n      var effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, 'value', {\n        get: function get() {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn;\n      var loop_in;\n      var loopOut;\n      var loop_out;\n      var smooth;\n      var toWorld;\n      var fromWorld;\n      var fromComp;\n      var toComp;\n      var fromCompToSurface;\n      var position;\n      var rotation;\n      var anchorPoint;\n      var scale;\n      var thisLayer;\n      var thisComp;\n      var mask;\n      var valueAtTime;\n      var velocityAtTime;\n      var scoped_bm_rt; // val = val.replace(/(\\\\?\"|')((http)(s)?(:\\/))?\\/.*?(\\\\?\"|')/g, \"\\\"\\\"\"); // deter potential network calls\n\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0]; // eslint-disable-line no-eval\n\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n\n      var wiggle = function wiggle(freq, amp) {\n        var iWiggle;\n        var j;\n        var lenWiggle = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray('float32', lenWiggle);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        iWiggle = 0;\n        j = 0;\n\n        while (iWiggle < iterations) {\n          // var rnd = BMMath.random();\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); // addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          iWiggle += 1;\n        } // var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray('float32', lenWiggle);\n\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        }\n\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n\n        if (t > 1) {\n          t = 1;\n        } else if (t < 0) {\n          t = 0;\n        }\n\n        var mult = fn(t);\n\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey;\n          var lenKey = val1.length;\n          var arr = createTypedArray('float32', lenKey);\n\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\n          }\n\n          return arr;\n        }\n\n        return (val2 - val1) * mult + val1;\n      }\n\n      function nearestKey(time) {\n        var iKey;\n        var lenKey = data.k.length;\n        var index;\n        var keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time === data.k[iKey].t) {\n                index = iKey + 1;\n                keyTime = data.k[iKey].t;\n                break;\n              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\n                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\n                  index = iKey + 2;\n                  keyTime = data.k[iKey + 1].t;\n                } else {\n                  index = iKey + 1;\n                  keyTime = data.k[iKey].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = iKey + 1;\n              keyTime = data.k[iKey].t;\n            }\n          }\n        }\n\n        var obKey = {};\n        obKey.index = index;\n        obKey.time = keyTime / elem.comp.globalData.frameRate;\n        return obKey;\n      }\n\n      function key(ind) {\n        var obKey;\n        var iKey;\n        var lenKey;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e;\n        lenKey = arr.length;\n\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey];\n          obKey.value[iKey] = arr[iKey];\n        }\n\n        return obKey;\n      }\n\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return fr / fps;\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init);\n          }\n\n          return value.substring(init, end);\n        }\n\n        return '';\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init);\n          }\n\n          return value.substr(init, end);\n        }\n\n        return '';\n      }\n\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\n        value = valueAtTime(time);\n      }\n\n      var time;\n      var velocity;\n      var value;\n      var text;\n      var textIndex;\n      var textTotal;\n      var selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n      var globalData = elem.globalData;\n\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value;\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value;\n        }\n\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface('ADBE Transform Group');\n          $bm_transform = transform;\n\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n            /* position = transform.position;\r\n                      rotation = transform.rotation;\r\n                      scale = transform.scale; */\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer('ADBE Root Vectors Group');\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (_needsRandom) {\n          seedRandom(randSeed + time);\n        }\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId; // TODO: Check if it's possible to return on ShapeInterface the .v value\n        // Changed this to a ternary operation because Rollup failed compiling it correctly\n\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;\n        return scoped_bm_rt;\n      } // Bundlers will see these as dead code and unless we reference them\n\n\n      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];\n      return executeExpression;\n    }\n\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];\n    return ob;\n  }();\n\n  var expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n\n      if (v1.length) {\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n\n      return speed;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.001; // frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length);\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty\n    };\n  }();\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var firstKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n\n          return ret;\n        }\n\n        return (endV - initV) * repeats + current;\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005; // eslint-disable-line\n          }\n\n          return ret;\n        }\n\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n      }\n\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var lastKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n\n          return ret;\n        }\n\n        return current - (endV - initV) * repeats;\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n          }\n\n          return ret;\n        }\n\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n      }\n\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n\n      if (samples <= 1) {\n        return this.pv;\n      }\n\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value;\n\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length);\n      } else {\n        value = 0;\n      }\n\n      var sampleValue;\n\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n\n        i += 1;\n      }\n\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n\n      return value;\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      } /// /\n\n\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time);\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);\n      }\n\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time);\n        var skewAxis = this.sa.getValueAtTime(time);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time);\n        matrix.rotate(-rotation * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time);\n        var rotationY = this.ry.getValueAtTime(time);\n        var rotationX = this.rx.getValueAtTime(time);\n        var orientation = this.or.getValueAtTime(time);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time);\n        var positionY = this.py.getValueAtTime(time);\n\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position = this.p.getValueAtTime(time);\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);\n      }\n\n      return matrix; /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container); // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n\n      return this._cachingAtTime.shapeValue;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    function ShapeExpressions() {}\n\n    ShapeExpressions.prototype = {\n      vertices: function vertices(prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n\n        return arr;\n      },\n      points: function points(time) {\n        return this.vertices('v', time);\n      },\n      inTangents: function inTangents(time) {\n        return this.vertices('i', time);\n      },\n      outTangents: function outTangents(time) {\n        return this.vertices('o', time);\n      },\n      isClosed: function isClosed() {\n        return this.v.c;\n      },\n      pointOnPath: function pointOnPath(perc, time) {\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n\n          i += 1;\n        }\n\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n\n        return pt;\n      },\n      vectorOnPath: function vectorOnPath(perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c;\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999;\n        }\n\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 0.001, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n\n        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function tangentOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent');\n      },\n      normalOnPath: function normalOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'normal');\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n  }\n\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n\n      return null;\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n\n      return currentValue;\n    };\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n\n  function initialize() {\n    addDecorator();\n  }\n\n  function SVGComposableEffect() {}\n\n  SVGComposableEffect.prototype = {\n    createMergeNode: function createMergeNode(resultId, ins) {\n      var feMerge = createNS('feMerge');\n      feMerge.setAttribute('result', resultId);\n      var feMergeNode;\n      var i;\n\n      for (i = 0; i < ins.length; i += 1) {\n        feMergeNode = createNS('feMergeNode');\n        feMergeNode.setAttribute('in', ins[i]);\n        feMerge.appendChild(feMergeNode);\n        feMerge.appendChild(feMergeNode);\n      }\n\n      return feMerge;\n    }\n  };\n\n  function SVGTintFilter(filter, filterManager, elem, id, source) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n    var feMerge = this.createMergeNode(id, [source, id + '_tint_1', id + '_tint_2']);\n    filter.appendChild(feMerge);\n  }\n\n  extendPrototype([SVGComposableEffect], SVGTintFilter);\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id);\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGStrokeEffect(fil, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path;\n    var groupPath;\n    var i;\n    var len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = createNS('g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = createNS('path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = createNS('mask');\n      var id = createElementID();\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = createNS('g');\n      g.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n\n      while (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i;\n    var len = this.paths.length;\n    var mask;\n    var path;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.paths[i].m !== -1) {\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\n        path = this.paths[i].p;\n\n        if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\n          path.setAttribute('d', mask.lastPath);\n        }\n\n        if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\n          var dasharrayValue;\n\n          if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n            var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var l = path.getTotalLength();\n            dasharrayValue = '0 0 0 ' + l * s + ' ';\n            var lineLength = l * (e - s);\n            var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n            var units = Math.floor(lineLength / segment);\n            var j;\n\n            for (j = 0; j < units; j += 1) {\n              dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';\n            }\n\n            dasharrayValue += '0 ' + l * 10 + ' 0 0';\n          } else {\n            dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n          }\n\n          path.setAttribute('stroke-dasharray', dasharrayValue);\n        }\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p._mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p._mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = createNS('feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    feComponentTransfer.setAttribute('result', id);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = createNS('feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = createNS('feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = createNS('feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n    filter.appendChild(feComponentTransfer);\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB);\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = createNS('feComponentTransfer'); // Red\n\n    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    } // Green\n\n\n    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    } // Blue\n\n\n    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    } // Alpha\n\n\n    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    } // RGB\n\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n    }\n\n    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\n      feComponentTransfer = createNS('feComponentTransfer');\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      feComponentTransfer.setAttribute('result', id);\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = createNS(type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos] = colorValue;\n      pos += 1;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var val;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\n        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\n        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\n        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\n        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\n        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager, elem, id, source) {\n    var filterSize = filterManager.container.globalData.renderConfig.filterSize;\n    filter.setAttribute('x', filterSize.x);\n    filter.setAttribute('y', filterSize.y);\n    filter.setAttribute('width', filterSize.width);\n    filter.setAttribute('height', filterSize.height);\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', id + '_drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = createNS('feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', id + '_drop_shadow_1');\n    feOffset.setAttribute('result', id + '_drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = createNS('feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', id + '_drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = createNS('feComposite');\n    feComposite.setAttribute('in', id + '_drop_shadow_3');\n    feComposite.setAttribute('in2', id + '_drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', id + '_drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = this.createMergeNode(id, [id + '_drop_shadow_4', source]);\n    filter.appendChild(feMerge); //\n  }\n\n  extendPrototype([SVGComposableEffect], SVGDropShadowEffect);\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p._mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p._mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n    }\n  };\n\n  var _svgMatteSymbols = [];\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = createNS('g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.findSymbol = function (mask) {\n    var i = 0;\n    var len = _svgMatteSymbols.length;\n\n    while (i < len) {\n      if (_svgMatteSymbols[i] === mask) {\n        return _svgMatteSymbols[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\n    var parentNode = mask.layerElement.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    var children = parentNode.children;\n    var i = 0;\n    var len = children.length;\n\n    while (i < len) {\n      if (children[i] === mask.layerElement) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    var nextChild;\n\n    if (i <= len - 2) {\n      nextChild = children[i + 1];\n    }\n\n    var useElem = createNS('use');\n    useElem.setAttribute('href', '#' + symbolId);\n\n    if (nextChild) {\n      parentNode.insertBefore(useElem, nextChild);\n    } else {\n      parentNode.appendChild(useElem);\n    }\n  };\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    if (!this.findSymbol(mask)) {\n      var symbolId = createElementID();\n      var masker = createNS('mask');\n      masker.setAttribute('id', mask.layerId);\n      masker.setAttribute('mask-type', 'alpha');\n\n      _svgMatteSymbols.push(mask);\n\n      var defs = elem.globalData.defs;\n      defs.appendChild(masker);\n      var symbol = createNS('symbol');\n      symbol.setAttribute('id', symbolId);\n      this.replaceInParent(mask, symbolId);\n      symbol.appendChild(mask.layerElement);\n      defs.appendChild(symbol);\n      var useElem = createNS('use');\n      useElem.setAttribute('href', '#' + symbolId);\n      masker.appendChild(useElem);\n      mask.data.hd = false;\n      mask.show();\n    }\n\n    elem.setMatte(mask.layerId);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var elements = this.elem.comp.elements;\n    var i = 0;\n    var len = elements.length;\n\n    while (i < len) {\n      if (elements[i] && elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGGaussianBlurEffect(filter, filterManager, elem, id) {\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '300%');\n    filter.setAttribute('height', '300%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('result', id);\n    filter.appendChild(feGaussianBlur);\n    this.feGaussianBlur = feGaussianBlur;\n  }\n\n  SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      // Empirical value, matching AE's blur appearance.\n      var kBlurrinessToSigma = 0.3;\n      var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma; // Dimensions mapping:\n      //\n      //   1 -> horizontal & vertical\n      //   2 -> horizontal only\n      //   3 -> vertical only\n      //\n\n      var dimensions = this.filterManager.effectElements[1].p.v;\n      var sigmaX = dimensions == 3 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      var sigmaY = dimensions == 2 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY); // Repeat edges mapping:\n      //\n      //   0 -> off -> duplicate\n      //   1 -> on  -> wrap\n\n      var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\n    }\n  };\n\n  registerRenderer('canvas', CanvasRenderer);\n  registerRenderer('html', HybridRenderer);\n  registerRenderer('svg', SVGRenderer); // Registering shape modifiers\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier); // Registering expression plugin\n\n  setExpressionsPlugin(Expressions);\n  initialize$1();\n  initialize(); // Registering svg effects\n\n  registerEffect(20, SVGTintFilter, true);\n  registerEffect(21, SVGFillFilter, true);\n  registerEffect(22, SVGStrokeEffect, false);\n  registerEffect(23, SVGTritoneFilter, true);\n  registerEffect(24, SVGProLevelsFilter, true);\n  registerEffect(25, SVGDropShadowEffect, true);\n  registerEffect(28, SVGMatte3Effect, false);\n  registerEffect(29, SVGGaussianBlurEffect, true);\n\n  return lottie;\n\n}));\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","exports","__webpack_require__","global","factory","navigator","_count","blendModeEnums","outlineInterfaceFactory","dataInterfaceFactory","ob","svgNS","locationHref","_useWebWorker","initialDefaultFrame","setWebWorker","flag","getWebWorker","setLocationHref","value","getLocationHref","createTag","type","document","createElement","extendPrototype","sources","destination","i","sourcePrototype","len","length","attr","prototype","Object","hasOwnProperty","call","getDescriptor","object","prop","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","audioControllerFactory","AudioController","audioFactory","audios","_volume","_isMuted","addAudio","audio","pause","resume","setRate","rateValue","createAudio","assetPath","window","Howl","src","isPlaying","play","seek","playing","rate","setVolume","setAudioFactory","_updateVolume","mute","unmute","getVolume","volume","createTypedArray","createRegularArray","arr","createTypedArrayFactory","Float32Array","Int16Array","Uint8ClampedArray","createSizedArray","Array","apply","_typeof$6","obj","Symbol","iterator","constructor","subframeEnabled","expressionsPlugin","idPrefix$1","isSafari","test","userAgent","_shouldRoundValues","bmPow","Math","pow","bmSqrt","sqrt","bmFloor","floor","bmMax","max","bmMin","min","BMMath","ProjectInterface$1","propertyNames","random","abs","val","tOfVal","absArr","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","bmRnd","round","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","currentTime","totalTime","frameMultiplier","direction","BMCompleteEvent","BMCompleteLoopEvent","totalLoops","currentLoop","BMSegmentStartEvent","firstFrame","totalFrames","BMDestroyEvent","target","BMRenderFrameErrorEvent","nativeError","BMConfigErrorEvent","BMAnimationConfigErrorEvent","createElementID","HSVtoRGB","h","s","v","r","g","b","f","p","q","t","RGBtoHSV","d","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","setSubframeEnabled","getSubframeEnabled","setExpressionsPlugin","getExpressionsPlugin","setDefaultCurveSegments","getDefaultCurveSegments","setIdPrefix","getIdPrefix","createNS","createElementNS","_typeof$5","dataManager","workerFn","workerInstance","_counterId","processes","workerProxy","onmessage","postMessage","path","data","_workerSelf","createWorker","fn","Worker","Blob","blob","url","URL","createObjectURL","setupWorker","e","dataFunctionManager","completeLayers","layers","comps","layerData","j","jLen","k","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","completeChars","chars","assets","findComp","id","comp","__used","JSON","parse","stringify","ks","it","o","checkVersion","minimum","animVersionString","animVersion","split","minimumVersion","checkText","updateTextLayer","textLayer","documentData","iterateLayers","animationData","checkChars","charData","ip","op","st","sr","a","sk","sa","checkPathProperties","pathData","checkColors","iterateShapes","c","checkShapes","completeClosingShapes","closed","cl","completeData","__complete","moduleOb","assetLoader","formatResponse","xhr","contentTypeHeader","getResponseHeader","responseType","indexOf","response","responseText","load","fullPath","callback","errorCallback","XMLHttpRequest","err","onreadystatechange","readyState","status","open","error","send","payload","animation","event","process","onComplete","onError","createProcess","loadAnimation","processId","location","origin","pathname","loadData","completeAnimation","anim","ImagePreloader","canvas","ctx","proxyImage","width","height","getContext","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","loadedFootagesCount","totalFootages","imagesLoadedCb","footageLoaded","getAssetsPath","assetData","assetsPath","originalPath","imagePath","u","testImageLoaded","img","intervalId","setInterval","box","getBBox","_imageLoaded","clearInterval","bind","createImageData","addEventListener","setAttributeNS","_elementHelper","append","appendChild","createImgData","crossOrigin","createFootageData","footageData","_footageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getAsset","destroy","loadedImages","loadedFootages","setCacheType","elementHelper","ImagePreloaderFactory","BaseEvent","triggerEvent","eventName","args","_cbs","callbacks","removeEventListener","splice","markerParser","parsePayloadLines","line","lines","keys","keysCount","trim","_markers","markers","_marker","markerData","time","tm","duration","dr","cm","_","__","name","ProjectInterface","registerComposition","compositions","_thisProjectFunction","nm","prepareFrame","xt","currentFrame","compInterface","renderers","registerRenderer","key","getRenderer","_typeof$4","AnimationItem","isLoaded","currentRawFrame","frameRate","frameMult","playSpeed","playDirection","playCount","isPaused","autoplay","loop","renderer","animationID","timeCompleted","segmentPos","isSubframeEnabled","segments","_idle","_completedLoop","projectInterface","imagePreloader","audioController","configAnimation","onSetupError","onSegmentComplete","drawnFrameEvent","setParams","params","wrapper","container","animType","RendererClass","rendererSettings","globalData","defs","setProjectInterface","undefined","parseInt","autoloadSegments","initialSegment","setupAnimation","lastIndexOf","substr","fileName","trigger","setData","wrapperAttributes","attributes","getNamedItem","prerender","includeLayers","newLayers","fonts","fontManager","addChars","addFonts","initExpressions","loadNextSegment","segment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","animData","fr","searchExtraCompositions","updaFrameModifier","waitForFontsLoaded","triggerConfigError","setTimeout","rendererType","initItems","gotoFrame","resize","updateContainerSize","setSubframe","renderFrame","triggerRenderFrameError","togglePause","stop","setCurrentRawFrameValue","getMarkerData","markerName","marker","goToAndStop","isFrame","isNaN","Number","frameModifier","goToAndPlay","numValue","playSegments","advanceTime","nextValue","_isComplete","checkSegments","adjustSegment","setSpeed","setDirection","setSegment","init","end","pendingFrame","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onSegmentStart","onDestroy","getPath","getAssetData","hide","show","getDuration","updateDocumentData","index","getElementByPath","animationManager","registeredAnimations","initTime","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","subtractPlayingCount","registerAnimation","elem","getRegisteredAnimations","lenAnims","animations","addPlayingCount","activate","nowTime","elapsedTime","requestAnimationFrame","first","searchAnimations","standalone","animElements","concat","slice","getElementsByClassName","setAttribute","body","getElementsByTagName","innerText","div","freeze","unfreeze","BezierFactory","getBezierEasing","beziers","str","replace","bezEasing","BezierEasing","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonRaphsonIterate","aGuessT","currentSlope","points","_p","_mSampleValues","_precomputed","get","x","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","guessForT","dist","initialSlope","pooling","poolFactory","initialLength","_create","_release","_length","_maxLength","pool","newElement","release","bezierLengthPool","addedLength","percents","lengths","segmentsLengthPool","totalLength","bezFunction","storedData","math","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getBezierLength","pt1","pt2","pt3","pt4","ptCoord","perc","ptDistance","curveSegments","point","lastPoint","lengthData","getSegmentsLength","shapeData","segmentsLength","pathV","pathO","pathI","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","getPointInSegment","percent","t1","u1","bezierSegmentPoints","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bez","PropertyFactory","initFrame","mathAbs","interpolateValue","frameNum","caching","outX","outY","inX","inY","keyValue","offsetTime","propType","newValue","pv","iterationIndex","lastIndex","keyframes","keyData","nextKeyData","keyframeMetadata","keyframesMetadata","nextKeyTime","keyTime","to","ti","ind","__fnct","fnc","y","n","endValue","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","sh","quaternionToEuler","slerp","createQuaternion","omega","cosom","sinom","scale0","scale1","out","ax","ay","az","aw","bx","by","bz","bw","sin","acos","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","values","c1","cos","c2","c3","s1","s2","s3","w","getValueAtCurrentTime","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","_mdf","processEffectsSequence","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","addDynamicProperty","ValueProperty","vel","getValue","MultiDimensionalProperty","KeyframedValueProperty","KeyframedMultidimensionalProperty","arrLen","getProp","DynamicPropertyContainer","dynamicProperties","_isAnimated","iterateDynamicProperties","initDynamicPropertyContainer","pointPool","ShapePath","setPathData","setLength","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","shapePool","shapePath","clone","shape","cloned","ShapeCollection","addShape","releaseShapes","shapeCollectionPool","newShapeCollection","shapeCollection","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","isHold","keyPropE","vertexValue","interpolateShapeCurrentTime","resetShape","paths","localShapeCollection","shapesEqual","shape1","shape2","ShapeProperty","reset","KeyframedShapeProperty","EllShapeProperty","cPoint","EllShapePropertyFactory","convertEllToPath","p0","p1","s0","_cw","_v","StarShapeProperty","StarShapePropertyFactory","sy","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","or","os","rad","roundness","perimSegment","numPts","angle","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","RectShapePropertyFactory","convertRectToPath","v0","v1","getShapeProp","getConstructorFunction","getKeyframedConstructorFunction","Matrix","_cos","_sin","_tan","tan","_rnd","props","rotate","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","skew","skewFromAxis","scale","sz","setTransform","l","m","translate","tx","tz","transform","a2","b2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","isIdentity","_identity","equals","matr","cloneFromProps","applyToPoint","z","applyToX","applyToY","applyToZ","getInverseMatrix","determinant","inverseMatrix","inversePoint","applyToPointArray","inversePoints","pts","retPts","applyToTriplePoints","p4","p5","p12","p13","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","_typeof$3","lottie","setLocation","href","setSubframeRendering","setPrefix","prefix","setQuality","inBrowser","installPlugin","plugin","getFactory","checkReady","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","useWebWorker","setIDPrefix","__getFactory","version","scripts","myScript","amdO","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","PuckerAndBloatModifier","initModifierProperties","addShapeToModifier","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","releasePathsData","processShapes","_s","shapePaths","totalShapeLength","edges","shapeS","shapeE","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","amount","processPath","centerPoint","pathLength","clonedPath","TransformPropertyFactory","defaultVector","applyToMatrix","mat","rz","ry","rx","px","py","pz","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","getValueAtTime","v2","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","RepeaterModifier","RoundCornersModifier","getFontProperties","fontData","styleName","styles","fStyle","fWeight","toLowerCase","weight","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","hasReloaded","items","itemsTransform","cont","copies","ceil","group","ix","reloadShapes","elems","transformData","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","rd","currentV","currentI","currentO","closerV","distance","newPosPerc","FontManager","maxWaitingTime","emptyChar","size","combinedCharacters","surrogateModifiers","zeroWidthJoiner","trimFontOptions","font","familyArray","enabledFamilies","join","setUpNode","family","parentNode","fontFamily","node","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","offsetWidth","parent","checkLoadedFonts","loadedCount","loaded","fOrigin","monoCase","sansCase","removeChild","Date","now","checkLoadedFontsBinded","setIsLoadedBinded","createHelper","def","helper","engine","fontProps","tHelper","fFamily","textContent","fClass","tCanvasHelper","OffscreenCanvas","measureText","text","getComputedTextLength","list","forEach","cache","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","fPath","querySelectorAll","rel","sc","found","ch","getCharData","_char","charCodeAt","console","warn","_warned","_char2","fontName","getFontByName","doubleSize","singleSize","fName","isModifier","firstCharCode","secondCharCode","sum","isZeroWidthJoiner","isCombinedCharacter","_char3","setIsLoaded","Font","typekitLoaded","fontPrototype","RenderableElement","initRenderable","isInRange","hidden","isTransparent","renderableComponents","addRenderableComponent","component","removeRenderableComponent","prepareRenderableFrame","num","checkLayerLimits","checkTransparency","finalTransform","mProp","renderConfig","hideOnTransparent","renderRenderable","sourceRectAtTime","getLayerSize","textData","MaskManagerInterface","MaskInterface","mask","_mask","_data","defineProperty","maskManager","_masksInterfaces","viewData","ExpressionPropertyInterface","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","property","getVelocityAtTime","numKeys","valueProp","assign","valueAtTime","speedAtTime","getSpeedAtTime","velocityAtTime","propertyGroup","UnidimensionalPropertyInterface","MultidimensionalPropertyInterface","arrValue","defaultGetter","TransformExpressionInterface","_px","_py","_pz","_transformFactory","_thisFunction","rotation","xRotation","yRotation","xPosition","yPosition","zPosition","anchorPoint","opacity","LayerExpressionInterface","getMatrix","toWorldMat","propMatrix","_elem","transformMat","toWorldVec","applyPoint","toWorld","fromWorldVec","invertPoint","fromWorld","hierarchy","fromComp","sampleImage","_registerMaskInterface","_thisLayerFunction","_registerEffectsInterface","effects","effect","shapeInterface","transformInterface","textInterface","toComp","anchorPointDescriptor","defineProperties","hasParent","layerInterface","anchor_point","active","startTime","source","inPoint","outPoint","_name","registerMaskInterface","registerEffectsInterface","propertyGroupFactory","interfaceFunction","parentPropertyGroup","PropertyInterface","propertyName","EffectsExpressionInterface","createGroupInterface","groupInterface","ef","mn","effectElements","_propertyGroup","createValueInterface","numProperties","np","enabled","en","expressionProperty","setGroupProperty","createEffectsInterface","effectsManager","effectsData","CompExpressionInterface","layer","pixelAspect","compSize","frameDuration","displayStartTime","numLayers","ShapePathInterface","view","propertyIndex","ShapeExpressionInterface","iterateElements","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","gradientFillInterfaceFactory","defaultInterfaceFactory","contentsInterfaceFactory","interfaces","transformInterfaceFactory","cix","content","startPoint","endPoint","_dashPropertyGroup","dashOb","addPropertyToDashOb","dataProps","strokeWidth","dash","start","skewAxis","outerRadius","outerRoundness","innerRadius","innerRoundness","radius","_interfaceFunction","parentGroupWrapper","TextExpressionInterface","_prevValue","_sourceText","sourceText","textProperty","stringValue","currentData","String","getBlendMode","mode","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","EffectsManager","effectItem","GroupEffect","BaseElement","FrameElement","_typeof$2","eff","checkMasks","effectsInterface","shapesData","itemsData","setBlendMode","blendModeValue","bm","baseElement","layerElement","initBaseData","layerId","getType","prepareProperties","isVisible","_isParent","FootageInterface","currentPropertyName","currentProperty","getFootageData","searchProperty","propertyNameIndex","outlineInterface","dataInterface","FootageElement","imageLoader","AudioElement","_isPlaying","_canPlay","_currentTime","_volumeMultiplier","_previousVolume","_placeholder","lv","au","BaseRenderer","TransformElement","MaskElement","maskElement","solidPath","properties","count","currentMasks","maskType","maskRef","rect","lastPath","filterID","expansor","feMorph","expan","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","getBaseElement","timeRemapped","totalVolume","volumeValue","checkLayers","buildItem","checkPendingElements","createItem","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","createFootage","buildAllItems","pInterface","progressiveLoad","buildElementParenting","parentName","setAsParent","setHierarchy","addPendingElement","pendingElements","pathValue","setupGlobalData","fontsContainer","animationItem","initTransform","_matMdf","_opMdf","ao","renderTransform","finalMat","globalToLocal","ptNew","transforms","mHelper","getMaskProperty","isFirstFrame","getMaskelement","pathNodes","pathString","pathShapeValue","filtersFactory","createFilter","filId","skipCoordinates","fil","createAlphaToLuminanceFilter","feColorMatrix","featureSupport","registeredEffects","idPrefix","SVGEffects","filterManager","filters","countsAsEffect","registerEffect","SVGBaseElement","HierarchyElement","RenderableDOMElement","IImageElement","initElement","sourceRect","ProcessedElement","IShapeElement","initRendererElement","createContainerElements","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","hd","cp","clipId","cpGroup","renderElement","destroyBaseElement","createRenderableComponents","renderableEffectsManager","setMatte","initHierarchy","checkParenting","createContent","renderInnerContent","innerElem","pr","imagePreserveAspectRatio","addShapeToModifiers","shapeModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","searchProcessedElement","processedElements","addProcessedElement","lineCapEnum","lineJoinEnum","SVGShapeData","transformers","level","caches","lStr","lvl","SVGStyleData","pElem","msElem","DashProperty","dashStr","dashArray","dashoffset","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGNoStyleData","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","SVGTransformData","comparePoints","diff","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","maskId","opFill","lc","lj","ml","of","ms","ost","buildShapeString","_o","_i","shapeString","SVGElementsRenderer","_identityMatrix","_matrixHelper","renderContentTransform","styleData","itemData","renderNoop","renderPath","pathStringTransformed","redraw","iterations","lLen","renderFill","styleElem","renderGradientStroke","renderGradient","renderStroke","hasOpacity","attr1","attr2","cValues","oValues","ang","createRenderFunction","SVGShapeElement","stylesList","animatedContents","LetterProps","sw","fc","TextProperty","_frameId","keysIndex","canResize","minimumFontSize","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","completeTextData","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","charCode","charactersArray","shouldCombine","charAt","letters","anchorGrouping","currentSize","currentPos","currentLine","lineWidth","maxLineWidth","trackingOffset","newLineFlag","currentHeight","boxHeight","lastSpaceIndex","uncollapsedSpaces","currentChar","an","add","anIndexes","animatorJustifyOffset","extra","animators","indexes","animatorData","fh","fs","fb","based","letterData","rn","totalChars","newInd","currentInd","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","TextSelectorProp","TextSelectorPropFactory","_currentTextLength","finalS","finalE","xe","ne","sm","getMult","easer","tot","smoothness","threshold","newCharsFlag","divisor","getTextSelectorProp","TextAnimatorDataProperty","animatorProps","defaultData","textAnimatorAnimatables","TextAnimatorProperty","renderType","_hasMaskedPath","_textData","_renderType","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","ITextElement","searchProperties","getMeasures","animatorSelector","letterValue","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","matrixHelper","renderedLettersCount","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tLength","pi","yOff","firstLine","initPathPos","initSegmentInd","initPointInd","letterM","letterP","defaultPropsArray","animatorFirstCharOffset","justifyOffsetMult","isNewLine","animatorOffset","rot","atan","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","emptyShapeData","SVGTextLottieElement","textSpans","ISolidElement","NullElement","SVGRendererBase","ICompElement","SVGCompElement","supports3d","SVGRenderer","config","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","preserveAspectRatio","contentVisibility","viewBoxOnly","viewBoxSize","className","focusable","filterSize","destroyed","CVContextData","saved","cArrPos","cTr","cO","savedOp","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVEffects","CVMaskElement","hasMasks","CVBaseElement","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","CVShapeElement","CVTextElement","stroke","fill","currentRender","sWidth","fValue","CVImageElement","CVSolidElement","CanvasRendererBase","clearCanvas","context","dpr","devicePixelRatio","currentGlobalAlpha","contextData","CVCompElement","CanvasRenderer","HBaseElement","HSolidElement","HShapeElement","shapesContainer","currentBBox","HTextElement","textPaths","isMasked","HCameraElement","pe","_prevMat","HImageElement","HybridRendererBase","threeDElements","camera","HCompElement","HybridRenderer","singleShape","textContainer","buildTextContents","textArray","textContents","currentTextContent","buildShapeData","shapeItem","usesGlyphs","cachedSpansLength","span","childSpan","glyph","tSpan","glyphElement","_debug","tElement","justify","textBox","bbox","renderedLetter","textSpan","appendElementInPos","nextElement","insertBefore","setElements","getElements","destroyElements","duplicate","newLength","currentSavedOp","set","sequence","processSequence","processSequences","getNewKey","canvasContext","beginPath","moveTo","lineTo","bezierCurveTo","save","clip","createElements","blendMode","globalCompositeOperation","hideElement","showElement","forceRealStack","ctxTransform","ctxOpacity","restore","transformHelper","dashResetter","preTransforms","co","wi","da","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","closePath","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","commands","pathArr","hasFill","hasStroke","commandsCounter","lastFill","lastStroke","lastStrokeW","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","par","drawImage","cProps","trProps","globalAlpha","actionFlag","popped","containerStyle","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","offsetHeight","elementRel","animationRel","fillType","clearRect","checkBlendMode","tg","transformedElementStyle","matrixValue","webkitTransform","addEffects","backgroundColor","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","changed","shapeStyle","shapeTransform","compW","compH","innerElemStyle","textColor","lineHeight","tCont","tParent","children","tContStyle","tContTranslation","tStyle","tSpanTranslation","svgStyle","textPath","translation","margin","svgTransform","setup","perspectiveStyle","perspectiveElem","perspective","webkitPerspective","mTransf","diffVector","mag","lookDir","mRotationX","mRotationY","hasMatrixChanged","matValue","Image","imageElem","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","startPos","endPos","createThreeDContainer","center","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","overflow","svg","cWidth","cHeight","floatingContainer","_createBaseContainerElements","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","_typeof$1","seedRandom","nodecrypto","chunks","digits","rngname","startdenom","significance","seedrandom","seed","options","shortseed","mixkey","flatten","entropy","tostring","autoseed","arc4","ARC4","prng","int32","quick","S","pass","is_math_call","state","copy","keylen","me","depth","result","typ","smear","stringseed","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","screen","fromCharCode","initialize$2","propTypes","SHAPE","_typeof","ExpressionManager","fetch","frames","$bm_isInstanceOfArray","isNumerable","tOfV","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","rndm","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","$bm_transform","loopIn","loop_in","loopOut","loop_out","smooth","fromCompToSurface","thisLayer","thisComp","scoped_bm_rt","velocity","textIndex","textTotal","selectorValue","needsVelocity","_needsRandom","elemType","thisProperty","expression_function","eval","wiggle","freq","amp","iWiggle","lenWiggle","addedAmps","periods","loopInDuration","loopOutDuration","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeIn","ease","iKey","lenKey","nearestKey","obKey","framesToTime","fps","timeToFrames","randSeed","substring","posterizeTime","framesPerSecond","executeExpression","_value","frameExpressionId","__preventDeadCodeRemoval","expressionHelpers","searchExpressions","delta","speed","_cachingAtTime","getStaticValueAtTime","addPropertyDecorator","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","endFrame","sampleFrequency","getTransformValueAtTime","_transformCachingAtTime","anchor","rotationZ","rotationY","rotationX","orientation","positionX","positionY","positionZ","getTransformStaticValueAtTime","propertyGetProp","getShapeValueAtTime","shapeValue","lastTime","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","initialize$1","addDecorator","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","initialize","SVGComposableEffect","SVGTintFilter","filter","matrixFilter","feMerge","createMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","resultId","ins","feMergeNode","colorBlack","colorWhite","groupPath","elemChildren","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","lineLength","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","SVGGaussianBlurEffect","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","kBlurrinessToSigma","sigma","dimensions","sigmaX","sigmaY","edgeMode"],"sourceRoot":""}